[{
  "_id": {
    "$oid": "5c2c5ac54ed5920022b4ae89"
  },
  "tags": [
    "graphs"
  ],
  "code": "SRM05C",
  "points": 300,
  "name": "Installation of OS in New Computers",
  "description": "In a new laboratory all the computers are brand new and these are not having any operating system installed in them. So, again Cibin took the initiative to install them in all the computers, but there is a twist. \r\n\r\nThe computers are connected to form a network and no two computers connected directly should have same type of OS. For example, if computer 1 is directly connected to computer 3 then both shouldn’t have Windows but one should have Linux. \r\n\r\nNow let us consider that there are <b>N</b> computers starting from <em>1 to N</em> and <b>C</b> direct connections between them. We have to assume that the first computer will need Linux installed in it. If the above condition is possible then Cibin need to print <b>yes</b> otherwise he should print <b>no</b>.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. For each test case, the first line contains N i.e the number of computers and C i.e the number of connections. The next C lines contains the connections. (Example: 1 3 , 2 4 etc)",
  "explainOutput": "For each test case, output a single line containing yes or no.",
  "constraints": "1 <= T <= 100\r\n1 <= N <= 10^3\r\n0 <= C <= 10^3",
  "example": "Input:\r\n3\r\n4 4\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4\r\n5 6\r\n1 3\r\n1 4\r\n1 5\r\n2 3\r\n2 4\r\n2 5\r\n\r\nOutput:\r\nyes\r\nno\r\nyes",
  "explanation": "CASE 1:\r\n<img src=\"https://i.imgur.com/7QUVERc.jpg\" />\r\nCASE 2:\r\nIn this case, it is not possible to install different OS on adjacent computers.\r\nCASE 3:\r\n<img src=\"https://i.imgur.com/ejjqU3u.jpg\" />",
  "contestCode": "SRM05",
  "createdAt": {
    "$date": {
      "$numberLong": "1546390893934"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1546734658635"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b5c8cd7276e2200208fed62"
  },
  "code": "UNI01",
  "points": 0,
  "name": "Jumping Rahul",
  "description": "Rahul is playing a VR game. He is stuck in a mission and needs your help.\r\nIn this mission, Rahul is stranded on a rock and needs to jump through a series of rock to save himself from falling into a death vortex. You are given <b>T</b> scenarios and at each scenario you have to tell whether Rahul will be able to jump on any of the rocks around him or not.\r\n\r\nNow the problem is, Rahul can only jump on rock which can handle the weight greater than his weight. Luckily you know all the information, help Rahul by telling to jump on which rock.",
  "explainInput": "First line of input contains T - the number of test cases. Next T lines contains 5 spaced integers.\r\nFirst integer represents the weight of Rahul and the rest 4 integers represent the weight a rock can handle which is around him.",
  "explainOutput": "Print the weight of rock with maximum weight which will handle Rahul's weight. If there is no such rock print <b>-1</b>.",
  "example": "<b>Input</b>:\r\n3\r\n4 2 3 1 5\r\n4 2 8 1 4\r\n4 2 3 1 4\r\n<b>Output</b>:\r\n5\r\n8\r\n-1",
  "explanation": "",
  "tags": [],
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1532772223030"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926133641"
    }
  },
  "__v": 0,
  "constraints": "1 <= T <= 50\r\n1 <= N, W[i] <= 1000"
},{
  "_id": {
    "$oid": "5c2daf4992a9930022a9dc86"
  },
  "tags": [
    "greedy",
    "math"
  ],
  "code": "SRM06C",
  "points": 250,
  "name": "White Bear",
  "description": "An unknown signal began appearing on television and mobile phone screens, turning most people of the city of White Bear into passive citizens, but you and Jem are unaffected. You find out there are several transmitters and receivers placed all over the city responsible for this unknown signal. Both of you have decided to intercept the signal to stop this madness.\r\n\r\nThere are <b>M</b> transmitter-receiver pairs. The signals are being transmitted from the transmitter to the receiver, and the transmissions are parallel to the x-axis. The <b>x</b> coordinates of the each transmitter-receiver pair is denoted by <b>x1</b> and <b>x2</b> respectively, and each pair has a distinct <b>y</b> coordinate. To stop the transmission, you must transmit a ‘network-jamming’ signal, intercepting the signal transmitted by the transmitter-receiver pairs (the intercept can be made at the points <b>x1</b> and <b>x2</b> too) . Assume that the range of this ‘network-jamming’ signal is infinite and can intercept multiple transmissions at once. <b>(Refer diagram for better understanding.)</b>      \r\n\r\nDetermine the least number of interceptions to be made to disrupt all the transmissions.\r\n\r\n<center><img src=\"https://i.imgur.com/Cc1BmmJ.jpg\" width=\"80%\" align=\"center\"></center> ",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nThe next line contains integer <b>M</b>, the number of transmitter-receiver pairs.\r\nThe next <b>M</b> lines contain two space separated integers <em>x<sub>1</sub></em> and <em>x<sub>2</sub></em>.",
  "explainOutput": "For each test case, the output is an integer <b>N</b>, i.e., least number of intercepts to be made.",
  "constraints": "1 &le; T &le; 10\r\n1 &le; M &le; 500\r\n0 &le; |x1| &le; |x2| &le; 5000\r\n",
  "example": "Input:\r\n3\r\n3\r\n0 2\r\n2 4\r\n3 5\r\n3\r\n1 10\r\n11 15\r\n16 18\r\n5\r\n0 5\r\n5 10\r\n11 15\r\n0 2\r\n1 3\r\n\r\nOutput:\r\n2\r\n3\r\n3\r\n",
  "explanation": "Case 1:\r\nHere, an intercept is made at x = 2, disrupting two of the transmitter receiver pairs. Another intercept is made at x = 5, to disrupt the remaining transmitter-receiver pair.\r\nHence, the total number of interceptions to be made = 2.\r\n\r\nCase 2:\r\nHere, three separate intercepts are required; the first intercept is made anywhere in between x = 1 and x = 10, the second intercept is made anywhere in between x = 11 to x = 15, and the third one is made anywhere in between x = 16 to x = 18.\r\nHence, the total number of interceptions to be made = 3.\r\n\r\nCase 3:\r\nHere, an intercept is made at x = 2, disrupting three of the transmitter receiver pairs. An intercept is made at x = 7, to disrupt a transmitter-receiver pair. Another intercept is made at x = 12, to disrupt the remaining transmitter-receiver pair.\r\nHence, the total number of interceptions to be made = 3.\r\n",
  "contestCode": "SRM06",
  "createdAt": {
    "$date": {
      "$numberLong": "1546478065317"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1547369678195"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e6dfacd502c4b0022178adb"
  },
  "tags": [
    "greedy"
  ],
  "code": "SRM15A",
  "points": 200,
  "name": "Miu and Nodes",
  "description": "Miu is impressed by the anonymity provided by the Darknet. It is achieved by passing the user request through various nodes(computers). The process is known as the onion routing.\r\n\r\nMiu decides to simulate onion routing by creating nodes to pass the user’s request.\r\nThese nodes work in such a way that a single node cannot pass two or more requests simultaneously and a node is engaged until an outgoing signal is sent for each incoming signal through that node or vice versa.\r\n\r\nEach user request has a priority level given by an integer <b>Pi</b> for incoming requests and outgoing requests. All <b>incoming</b> requests have a <b>higher</b> priority than <b>outgoing</b> requests, in case when their <b>priorities match</b> and hence must be processed first.\r\n\r\nMiu can not figure out the <b>minimum</b> number of nodes required so that no user request will get delayed. Help her.\r\nDisplay the optimal number of nodes required to make the system smooth.\r\n",
  "explainInput": "The first line of the input contains a single integer <b>T</b>, denoting the number of test cases. The description of <b>T</b> test cases follows - \r\nThe first line contains the <b>N</b> number of incoming requests and <b>M</b> number of outgoing requests.\r\nThe second line contains <b>N</b> space separated integers <b>P1,P2,P3,...Pn</b>\r\nThe third line contains M space separated integers <b>P1,P2,P3,...Pm</b>",
  "explainOutput": "For each test case, print a <b>single line</b> containing an integer - the <b>minimum</b> number of nodes required.",
  "constraints": "<ul>\r\n<li>1 <= T <= 100</li>\r\n<li>1 <= M <= N <= 10<sup>5</sup></li>\r\n<li>1<= Pi <= 10<sup>9</sup></li>\r\n</ul>",
  "example": "Example Input:\r\n2\r\n5 5\r\n3 1 5 4 6\r\n8 2 3 7 9\r\n3 2\r\n3 1 5\r\n2 4\r\n\r\nExample Output:\r\n3\r\n1\r\n",
  "explanation": "Test Case 1:\r\n<img src=\"https://i.imgur.com/vSw4aTb.png\">\r\nTherefore, the minimum number of nodes required is 3.\r\n",
  "contestCode": "SRM15",
  "createdAt": {
    "$date": {
      "$numberLong": "1584246133093"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1584260160624"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e8088ab99770c00221d371d"
  },
  "tags": [
    "math",
    "number theory"
  ],
  "code": "SRM16B",
  "points": 250,
  "name": "Devin's Prime Time Hack",
  "description": "Devin loves to work with graphics in his free time, and due to recent viral outbreaks, he wants to try working on a new graphic software which is out in the market. However his parents won’t allow him to buy the very expensive software and the serial key cannot be easily cracked. \r\nThe serial key is made up of <b>4 parts</b>. Each part has a <b>hexadecimal </b>code. The code is valid, if the <b>decimal</b> conversion of each individual part of the code (<b>N</b>) has a <b>prime count</b> of <b>factors</b>. For example, the number <b>\"13\"</b> has <b>2</b> factors “<b>1</b> and <b>13</b>”.<b> 2</b> is a <b>prime</b> number, hence <b>13</b> is valid.",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases.\r\nEach test case consists of 1 line of 4 “-” separated hexadecimal numbers ",
  "explainOutput": "For each test case, output a single word “<b>YES</b>” or “<b>NO</b>” on a single line.",
  "constraints": "1 <= <b>T</b> <= 100\r\n0 <= <b>N (in decimal)</b> <= 10<sup>9</sup>",
  "example": "<b>Input:</b>\r\n2\r\nd-b3-bf-11b\r\naaa-caf-5b3-581\r\n\r\n<b>Output</b>:\r\nYES\r\nNO",
  "explanation": "<b>Test Case 1:</b>\r\nThe first part converts to <b>13</b> in decimal which has <b>2 factors</b> (1 and 13). The second part converts to <b>179</b> which has <b>2 factors</b> (1 and 179). The third part converts to <b>191</b> in decimal which has <b>2 factors</b> (1 and 191). The fourth part converts to <b>283</b> in decimal which has <b>2 factors</b> (1 and 283). Hence the code is <b>valid</b>.\r\n\r\n<b>Test Case 2:</b>\r\nThe first part converts to <b>2730</b> in decimal which has <b>32 factors</b> but 32 is not prime. Hence the code is <b>invalid.</b>",
  "contestCode": "SRM16",
  "createdAt": {
    "$date": {
      "$numberLong": "1585462099621"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586382150440"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b649819c0b1b80020eb30e1"
  },
  "code": "AUG18B",
  "points": 100,
  "name": "Cibin Needs To Bunk",
  "description": "“ It’s not who you are underneath, It’s what you do that defines you “ . Cibin has kept this a secret for a long time, he is one of the Avengers. He needs to help the Avengers to save the world from a new evil. But as always, even if the world is at a threat, attendance is the most important thing for students. \r\n\r\nAll Cibin needs to do, is to keep his attendance greater than or equal to 75%.\r\nThere are a total of N lectures. Cibin has attended P lectures till now, and has bunked A lectures till now. As Cibin also needs to save the world, find out the minimum number of more lectures he needs to attend so that his attendance will be greater than or equal to 75%.",
  "explainInput": "The first line of the input consists of a single integer T, denoting the number of Test Cases. \r\nEach test case consists of one single line.\r\nEach of these single lines consists of 3 space separated integers N, P and A.\r\n",
  "explainOutput": " For each test case, output one single line.\r\nEach line should contain the answer to the corresponding test case, the minimum number of more lectures he needs to attend so that his attendance will be greater than or equal to 75%.\r\nIf there is a chance that even after attending all the remaining lectures, his attendance remains less than 75%, print -1 instead.    ",
  "constraints": "1 <= T <= 50\r\n0 <= A, P <= N <= 1000\r\n",
  "example": "Input:\r\n3\r\n20 10 3\r\n5 1 0\r\n20 5 12\r\n\r\nOutput:\r\n5\r\n3\r\n-1\r\n",
  "explanation": "Test Case 1:\r\nCibin can attend 5 lectures out of 7 remaining lectures, which makes his attendance 15/20 = 75%.\r\n\r\nTest Case 3:\r\nEven if Cibin attends the remaining 3 lectures, his attendance remains 8/20 = 40%.\r\nAs it is less than 75%, answer is -1.\r\n",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "AUG18",
  "createdAt": {
    "$date": {
      "$numberLong": "1533299393890"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591476151"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b9e5acec81946001f697c1f"
  },
  "code": "SEPT18B",
  "points": 100,
  "name": "Shweta And Her Rakhi",
  "description": "On the eve of Rakshabandhan, Shweta wants to buy a Rakhi for her brother. She visits a shop and finds that there are <b>N</b> Rakhis of different sizes. The shopkeeper tells her that the cost  <b>C</b> of a Rakhi is <em>directly proportional</em> to its size. He also tells Shweta that the cost of all the Rakhis are <em>distinct</em>.\r\nShweta is finding it difficult to keep track of the cost of all the Rakhis. So she asks the shopkeeper to convert it into a reduced form, where the cost is reduced to the range <b>0</b> to <b>N-1</b>. The shopkeeper replaces the cost of cheapest Rakhi with 0, the next cheapest Rakhi with 1, and so on, the costliest Rakhi with N-1.\r\nFrom this reduced cost list of Rakhis, Shweta asks the shopkeeper to give her the <b>K<sup>th</sup></b> Rakhi.\r\nFind out what is the value of the Rakhi at <b>K<sup>th</sup></b> position in the reduced cost list.",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases.\r\nFor each test case, the first line contains 2 space-separated integers <b>N</b> & <b>K</b>. \r\nThe next line contains <b>N</b> space-separated elements, denoting the cost <b>C</b> of Rakhi.",
  "explainOutput": "For each test case, output the value of the Rakhi at <b>K<sup>th</sup></b> position of the reduced form, in a single line.",
  "constraints": "1<=<b>T, N</b><=100\r\n1<=<b>K</b><=N\r\n1<=<b>C</b><=1000",
  "example": "<b>Input</b>:\r\n2\r\n3 2\r\n10 40 20\r\n5 3\r\n5 10 40 30 20\r\n<b>Output</b>:\r\n2\r\n4",
  "explanation": "<b>Case 1</b>:\r\nThe cost of the cheapest Rakhi is 10 and that of costliest Rakhi is 40. Thus 10 is replaced by 0, 20 is replaced by 1 and 40 is replaced by 2. The reduced cost list is {0, 2, 1}. In this case, K=2. The number at 2nd position in this reduces list is 2.\r\n<b>Case 2</b>:\r\nSimilarly, the reduced cost list for this case is {0, 1, 4, 3, 2}. Here K=3. The number at 3rd position in this array is 4.",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "SEPT18",
  "createdAt": {
    "$date": {
      "$numberLong": "1537084790891"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591357169"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c39f0543646190022847c61"
  },
  "tags": [
    "cakewalk"
  ],
  "code": "UNI03",
  "points": 0,
  "name": "Vowel Shovel",
  "description": "Rohit : “Have you read about Sinbad the Sailor? What a man of pride!”\r\nMithil:  “Oh yes! I know, he also had one chapter where he uses this weapon by which he destroys all those vowels right! What was it called?”\r\nBarath: “The ‘vowel shovel’! “\r\nRohit: “Stop watching Doraemon guys.”\r\nMithil: “Oh so you say you can also get one?”\r\nRohit: “I can make one”\r\nHelp Rohit to make a vowel shovel using the power of programming.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of one line, which contains the string str to be processed.",
  "explainOutput": "For each test case, output a single line with the string which is free of vowels.",
  "constraints": "1<=T<= 100\r\nstr[i] = {a, b, c, d, e, …., x ,y, z}",
  "example": "<b>Input:</b>\r\n4\r\nmithil\r\nbarath\r\naieee\r\nrhythm\r\n<b>Output:</b>\r\nmthl\r\nbrth\r\n\r\nrhythm",
  "explanation": "We have 4 words here.After removal of vowels the desired output is obtained. The 3rd case 'aieee' has all vowels hence a blank is printed.",
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1547281148746"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586646398068"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c4ae1bc91b74800225c106d"
  },
  "tags": [
    "math",
    "sortings"
  ],
  "code": "SRM07A",
  "points": 100,
  "name": "Declaring Winners",
  "description": "ByteCamp2019 judges have allotted scores to every team based on their performance in working prototype(X1), abstract level(X2), abstract scalability(X3) and Question-answer round(X4). They have decided to declare 3 winning teams (First, Second and Third).\r\nNow to declare winners, the judges have to go through scores of all the rounds of each team and declare the top 3 winners (from total of score). Help them to go through the scores of each team and declare winner for the ByteCamp2019.",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases.\r\nFirst line of each test case contains <b>N</b> denoting number of teams.\r\nNext 4 lines contains the scores of the teams of each round (<b>X1,X2,X3,X4</b>)  in the increasing order of team number.",
  "explainOutput": "For each test case output a single line containing 3 space separated Team numbers (first, second and then third).\r\nIf total score of team matches with other team declare winner according to their score given in prototype round(<b>X1</b>).     \r\n<b> Note : No line should end with an extra space </b>",
  "constraints": "T <= 100\r\nN <= 50\r\n0 <= X1,X2,X3,X4 <= 100\r\nX1[i] != X1[j]",
  "example": "Input:\r\n1\r\n5\r\n7 4 8 3 4\r\n5 2 3 4 5\r\n5 3 4 5 6\r\n8 6 4 2 1\r\nOutput:\r\n1 3 5",
  "explanation": "Team 1 is first. (7+5+5+8=25)\r\nTeam 3 is second. (8+3+4+4=19)\r\nTeam 5 is third. (4+5+6+1=16) ",
  "contestCode": "SRM07",
  "createdAt": {
    "$date": {
      "$numberLong": "1548391524367"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591265139"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e2d1287533c8d0022c770f3"
  },
  "tags": [
    "math"
  ],
  "code": "SRM14B",
  "points": 200,
  "name": "A Mission in the Land of Greens",
  "description": "Rock Lee was given a mission after a long time. He had to help the merchants in the land of Greens. He is given a straight line path <b>ax+by=c</b>, which leads to the land of Greens. Since it is the first time he is given a mission to be completed by himself, he got so excited that he chose a random path <b>rx+sy = t</b>.\r\n\r\nYou have to tell them if the path he has chosen will ever intersect with the actual path which leads to the Land of Greens. Can you help him?\r\n\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nFirst line of each test case consists of 3 <b>integers</b> <b>a, b</b> and <b>c</b> where a and b both can’t be 0.\r\nSecond line of each test case consists of 3 <b>integers</b> <b>r, s</b> and <b>t</b> where r and s both can’t be 0.\r\n",
  "explainOutput": "For each test case, print the answer to it as <b>\"YES\"</b> if the lines intersect each other ever or <b>\"NO\"</b> (both without quotes) otherwise.\r\n\r\n",
  "constraints": "1<=<b>T</b><=10^5\r\n-10^6<=<b>a,b,c,r,s,t</b><=10^6\r\n",
  "example": "<b>Input:</b>\r\n2\r\n-7 1 2\r\n3 8 7\r\n3 -1 3\r\n2 -1 6\r\n<br>\r\n<b>Output:</b>\r\nYES\r\nYES\r\n",
  "explanation": "Both lines intersect at a point.\r\n",
  "contestCode": "SRM14",
  "createdAt": {
    "$date": {
      "$numberLong": "1579992367733"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586382046640"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b645f711b2cd40020b6c771"
  },
  "code": "AUG18A",
  "points": 100,
  "name": "Avengers Unite",
  "description": "The world is under a new threat, and as always, “With great power, comes great responsibility”. The Avengers are back to defeat the evil, and bring peace to the world. However it seems like this time it’s not going to be so easy. So The Avengers decide to gain more power from The 5 Rings of Energy.\r\n\r\nEach Avenger is allotted only a particular ring to wear as follows :-\r\n( Format: Avenger - Ring )\r\nironman - light\r\ndoctor strange - magic\r\nthor - strength\r\nblack widow - stealth \r\ncaptain america - earth\r\n\r\nHowever the rings can only provide power to their masters if they wear them in a specific order.\r\nYou will be given the order of the rings to be worn by the Avengers, help them to find out the order in which they will wear the rings.\r\n(See the example for clarification)\r\n",
  "explainInput": "The first line of the input will consist of a single integer T, which denotes the number of Test Cases (the number of times your program will be tested / the number of questions).\r\nEach test case consists of 5 lines of input which displays the required order of the rings. Each of these lines will display the name of the rings (which are : stealth, light, magic, earth, strength).\r\n(All inputs are of lowercase alphabets)\r\n",
  "explainOutput": "For each test case, print 5 lines of output describing the order in which The Avengers (which are : black widow, doctor strange, ironman, thor, captain america) will have to wear the rings.",
  "constraints": "1 <= T <= 50\r\nAll input and output alphabets are of lowercase\r\n",
  "example": "Input:\r\n2\r\nstrength\r\nlight\r\nearth\r\nmagic \r\nstealth\r\nearth\r\nstealth\r\nmagic \r\nstrength\r\nlight\r\n\r\nOutput:\r\nthor\r\nironman\r\ncaptain america\r\ndoctor strange \r\nblack widow\r\ncaptain america\r\nblack widow\r\ndoctor strange \r\nthor\r\nironman\r\n",
  "explanation": "Let us consider the first test case. \r\nThe order of the rings to be worn is : strength - light - earth - magic - stealth.\r\nTherefore the order of the Avengers who will wear those rings is :\r\nthor - ironman - captain america - doctor strange - black widow , as The Avengers are allotted those particular rings ( see description ).\r\n",
  "tags": [
    "adhoc",
    "strings"
  ],
  "contestCode": "AUG18",
  "createdAt": {
    "$date": {
      "$numberLong": "1533284889353"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591465067"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b6c3ec18cab100020e963b7"
  },
  "code": "SRM01A",
  "points": 100,
  "name": "Tom vs Jerry",
  "description": "Seems like Jerry stole a piece of cheese again, and it’s another day of fight between Tom and Jerry. They decided to settle their fight with a tennis match.\r\n\r\nThe tennis match consists of 10 rounds. In each round either Tom or Jerry gets 1 point. The player with the maximum points after the 10 rounds wins the game.\r\nIn case if their points are equal, it is a draw.\r\n\r\nHowever, since no one is officiating the games they need your help in deciding the winner. Can you help them to decide the winner before they start fighting again?",
  "explainInput": "The first line of input contains a single integer T denoting the number of test cases. ( The number of times your program will be tested / The number of questions )\r\nEach test case consists of only one line, consisting of 10 space separated integers.\r\nEach of these integers is either 1 or 0.\r\n1 indicates that, Jerry won the round.\r\n0 indicates that, Tom won the round.",
  "explainOutput": "For each test case, output a single integer on a single line :\r\n1 in case if Jerry wins the match.\r\n0 in case if Tom wins the match.\r\n-1 in case if it is a draw.",
  "constraints": "1  <= T <= 50",
  "example": "<b>Input:</b>\r\n3\r\n0 0 1 1 0 1 1 0 1 1\r\n0 0 0 0 0 0 0 0 1 0\r\n1 0 1 0 1 0 1 0 1 0\r\n \r\n<b>Output:</b>\r\n1\r\n0\r\n-1",
  "explanation": "Test case 1 :\r\nAs there are 6 - 1’s and 4 - 0’s Jerry wins the match, print 1.\r\nTest case 2 : \r\nAs there are 9 - 0’s and 1 - 1 Tom wins the match, print 0.\r\nTest case 3 :\r\nAs there are 5 - 1’s and 5 - 0’s It is a draw, print -1.",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "SRM01",
  "createdAt": {
    "$date": {
      "$numberLong": "1533800809977"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591431884"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c506d5c3027fa0022016678"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM08A",
  "points": 100,
  "name": "Rarity Calculator ",
  "description": "Barath and Mithil started playing Brawl Stars together, but Mithil is not able to get brawlers so he decided to write a program to find rarity of brawler  he get next in which he needs your help. He has to open brawl boxes to get brawlers. Each brawl box opened will give a value. When values from all the boxes are added, it tells the rarity of next brawler he gets. If the total number is more than 75 he will get a legendary brawler, if it is more than 50 and less than or equal to 75 he will get a mythical brawler. Again if total value is more than 25 and less than or equal to 50 he will get an epic brawler and if value is less than or equal to 25 he will not get a new brawler.",
  "explainInput": "First line of the input consists of a number T denoting the number of test cases\r\nSecond line will have a number B denoting the number of boxes\r\nThird line will consist of B space-separated integers denoting the values obtained from each box a1, a2, a3, …, aB.",
  "explainOutput": "Print-\r\nN if he gets no brawler.\r\nE if he gets an epic brawler\r\nM if a mythical brawler \r\nand \r\nL if he gets a legendary brawler.",
  "constraints": "0< T <100\r\n0< B <1000\r\n0< a1, a2, a3….aB <75",
  "example": "Input:\r\n4\r\n4\r\n1 4 6 2\r\n5\r\n10 5 6 5 5\r\n3\r\n25 25 5\r\n4\r\n40 40 10 15\r\n\r\n\r\nOutput:\r\nNEML",
  "explanation": "Case 1 – the values he got were 1,4,6,2 which after adding became 13, which was less than 25 so he didn’t get a brawler.\r\nCase 2 – the values he got were 10, 5, 6, 5, 5, which on adding became 31 which was more than 25 so he got an epic brawler",
  "contestCode": "SRM08",
  "createdAt": {
    "$date": {
      "$numberLong": "1548754948271"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915869605"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c7ac7bf5dfcc900221e112b"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM09B",
  "points": 200,
  "name": "Zombie Mode",
  "description": "There’s a new Special Game Mode in PUBG called the Zombie Mode.\r\nIn order to win the game, you’ll have to kill all the zombies or survive till the time is over.\r\nThere are two types of Zombies : Giant Zombies and Small Zombies.\r\nGiant Zombies moves at a speed of 1 block per second & takes 8 bullets to be killed.\r\nSmall Zombies moves at a speed of 2 blocks per second & takes 4 bullets to be killed.\r\nYou have N bullets at the start and you have to survive for M seconds to win the game. You can fire 4 bullets per second.\r\nThere are G no. of Giant Zombies and S no. of Small Zombies which are moving towards you at their respective speeds. Distances of all the Zombies from you is given. If they touch you then GAME OVER.",
  "explainInput": "The first line of the input consists of a single integer T denoting the number of test cases.\r\nEach test case contains 4 lines which are as follows :\r\nThe first line consists of two integers N and M respectively.\r\nThe second line contains of two integers G and S respectively.\r\nThe third line consists of G space-separated integers denoting distance of each Giant Zombie from you.\r\nThe fourth line consists of S space-separated integers denoting distance of each Small Zombie from you.",
  "explainOutput": "For each test case print a single line containing “WINNER WINNER CHICKEN DINNER” without the quotes if you win else print “GAME OVER” without the quotes.",
  "constraints": "1 <= T <= 100\r\n1 <= N <= 10^6\r\n1 <= M,G,S <= 10^4\r\n1 <= G[i],S[i] <= 10^5",
  "example": "Input:\r\n3\r\n50 10\r\n3 4\r\n8 10 9\r\n2 15 12 9\r\n35 10\r\n3 4\r\n5 7 9\r\n4 16 2 20\r\n50 10\r\n3 4\r\n6 2 10\r\n10 20 5 16\r\n\r\nOutput:\r\nWINNER WINNER CHICKEN DINNER\r\nGAME OVER\r\nGAME OVER",
  "explanation": "In Test Case 1: There are enough bullets to kill all the zombies and all the zombies can be killed before any zombie touches you.\r\nIn Test Case 2: There are not enough bullets to kill all the zombies.\r\nIn Test Case 3: There are enough bullets. But as you’ll first kill the Giant Zombie at distance 2 the Small Zombie with distance 5 will come at distance of 1 block and there’ll not be enough time for you to kill him before he touches you. If you try to kill the Small Zombie at distance 5 first, the Giant Zombie at distance 2 will kill you.",
  "contestCode": "SRM09",
  "createdAt": {
    "$date": {
      "$numberLong": "1551530599809"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915825844"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d3c94af7cb1120022007f38"
  },
  "tags": [
    "adhoc"
  ],
  "code": "BETA01B",
  "points": 100,
  "name": "Book Cricket",
  "description": "Piyush and Gokul were arguing during the lectures over who is the better cricket player out of the two. They decided to settle it through a book cricket match. Now, you have to determine who is the winner of the match.\r\n\r\nBoth Piyush and Gokul have <b>N</b> no. of turns.\r\n\r\nThey can score runs -  0,2,4,6,8 where <b>0</b> means <b>OUT</b>.\r\n\r\nThe final score is the sum of runs.\r\nThe player with <b>maximum</b> score wins. In case of a tie the player losing <b>less</b> wickets wins.\r\nIf both players have the same final score and both have lost same no. of wickets then it’s a <b>draw</b>.",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nEach test case contains 3 lines which are as follows:\r\nThe first line consists of a single integer <b>N</b> denoting no. of turns.\r\nThe second line consists of <b>N</b> space separated integers denoting runs scored by Piyush.\r\nThe third line consists of <b>N</b> space separated integers denoting runs scored by Gokul.",
  "explainOutput": "For each test case, print a single line containing the name of the winner - <b>'Piyush’</b> or <b>‘Gokul’</b> without the quotes. In case of a draw print <b>‘Draw’</b> without the quotes.\r\n<b>NOTE:</b> The output is case sensitive. Please print the the exact words as mentioned above.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N</b> <= 10^5\r\n<b>Run[i]</b> can have value 0,2,4,6,8.",
  "example": "<b>Input:</b>\r\n3\r\n6\r\n4 6 8 2 0 4\r\n2 8 0 6 2 2\r\n5\r\n2 8 6 0 4\r\n8 6 2 2 2\r\n5\r\n8 6 4 0 2\r\n2 0 4 6 8\r\n\r\n<b>Output:</b>\r\nPiyush\r\nGokul\r\nDraw",
  "explanation": "<b>Test Case 1:</b> The final score of Piyush is 24 runs with 1 wicket gone & final score of Gokul is 20 runs with 1 wicket gone. Since, final score of Piyush is more than Gokul, Piyush is the winner.\r\n\r\n<b>Test Case 2:</b> Both Piyush and Gokul have same final score of 20 runs but Piyush lost 1 wicket while Gokul lost 0. Since, Gokul lost less wickets than Piyush, Gokul won the match.\r\n\r\n<b>Test Case 3:</b> Both Piyush and Gokul have the same final score of 20 and both lost 1 wicket each. Since, their final scores and wickets lost are the same, it’s a Draw.",
  "contestCode": "BETA01",
  "createdAt": {
    "$date": {
      "$numberLong": "1564231511203"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1564283685167"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d3c981a7cb1120022007f39"
  },
  "tags": [
    "strings"
  ],
  "code": "BETA01C",
  "points": 100,
  "name": "Keyboard Prank",
  "description": "Ashok’s laptop was hacked by Ninad as he decided to play a prank on him. He changed the settings of Ashok’s keyboard and replaced the output of letters ‘a’, ‘s’, ‘h’, ‘o’, ‘k’ with ‘n’, ‘i’, ‘n’, ‘a’, ‘d’ respectively.\r\nThat is\r\n<b>‘a’</b> gets replaced with <b>‘n’</b>\r\n<b>‘s’</b> gets replaced with <b>‘i’</b>\r\n<b>‘h’</b> gets replaced with <b>‘n’</b>\r\n<b>‘o’</b> gets replaced with <b>‘a’</b>\r\n<b>‘k’</b> gets replaced with <b>‘d’</b>\r\nNow, whenever Ashok will send someone a message the letters will get replaced.\r\nYou have to determine what message will be received.\r\n<b>NOTE :</b> The message string does not contain any spaces.",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nEach test case consists of a single line containing a string <b>S</b> that Ashok wants to send to his friend.",
  "explainOutput": "For each test case, print a single line which consists of the string which the receiver will receive.",
  "constraints": "1< = T <= 1000\r\n1 <= Length(<b>S</b>) <= 10^4\r\nAll the strings will have only lowercase alphabets.",
  "example": "<b>Input:</b>\r\n3\r\nash\r\nashok\r\ncoffee\r\n\r\n<b>Output:</b>\r\nnin\r\nninad\r\ncaffee",
  "explanation": "<b>Test Case 1:</b> Here, ‘a’, ‘s’, ‘h’ gets replaced with ‘n’, ‘i’, ‘n’ respectively.\r\n<b>Test Case 2:</b> Here, ‘a’, ‘s’, ‘h’, ‘o’, ‘k’ gets replaced with ‘n’, ‘i’, ‘n’, ‘a’, ‘d’ respectively.\r\n<b>Test Case 3:</b> Here, ‘o’ in ‘coffee’ gets replaced with ‘a’ to give ‘caffee’.",
  "contestCode": "BETA01",
  "createdAt": {
    "$date": {
      "$numberLong": "1564232386867"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1564283548887"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b714d3c155c0000206d76fc"
  },
  "code": "SRM02C",
  "points": 250,
  "name": "Pritam Likes Cupcakes",
  "description": "Pritam has decided to throw a party for passing his CCDSAP Exam.\r\nHe has decided to keep <b>N</b> cupcakes for the party. Unfortunately, Pritam needs the number of cupcakes to be square of any real number. He can throw away some cupcakes or buy new ones.\r\nTell us how many minimum cupcakes in total Pritam needs to throw or buy so that it becomes a square of any real number.",
  "explainInput": "First line of input consists of <b>T</b> the number of test cases. Each test consists of <b>N</b>.\r\n",
  "explainOutput": "Print in each line the minimum number of cupcakes Pritam throws or buys.",
  "constraints": "1 <= T <= 10000\r\n1 <= N <= 10<sup>12</sup>",
  "example": "<b>Input:</b>\r\n3\r\n1\r\n3\r\n6\r\n\r\n<b>Output:</b>\r\n0\r\n1\r\n2\r\n\r\n",
  "explanation": "Case 1: Pritam has already square numbered cupcakes.\r\nCase 2: Pritam can throw 2 cupcakes (N-2=1) or buy one more(N+1=4). Ans = min(2,1) = 1. \r\nCase 3: Pritam can throw 2 or buy 3 cupcakes it doesn't matter so Ans = min(2,3) = 2.",
  "tags": [
    "math"
  ],
  "contestCode": "SRM02",
  "createdAt": {
    "$date": {
      "$numberLong": "1534132196688"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926293385"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5bae7910fda1fc0021bbf24b"
  },
  "tags": [
    "sortings",
    "strings"
  ],
  "code": "SRM04B",
  "points": 200,
  "name": "Chopper Challenge",
  "description": "Mithil has escaped the villain's lair in a chopper trying to get to the city centre, but while flying over the city to get to the destination, the engines of the chopper fail, and he starts to fall. To avoid crashing, he needs to decrease the weight in the chopper.At to the back end of the chopper, he finds massive crates with labels of their weights. To make the task harder, the villain has labelled the weights as lettered digits (For ex- 234= two three four). To save the chopper from falling into the city and causing damage, Mithil needs to push out crates in\r\ndecreasing order of their weights, ie- the heaviest crates going out first. Help Mithil find the order in which he needs to push the crates out.\r\n",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of 1 line, which has comma separated distinct weights of each crate with the line ending in a period.\r\n",
  "explainOutput": "For each test case, output a single line with spaced integers giving the index of weights to be pushed out in order.\r\n\r\n",
  "constraints": "1 <= Test cases<= 100\r\n1 <= number of boxes <= 100\r\n100 <= weight <= 999\r\n",
  "example": "Input:\r\n2\r\nthree four two, eight nine two, seven six eight.\r\nfour two zero, six nine three.\r\n\r\nOutput:\r\n2 3 1\r\n2 1\r\n",
  "explanation": "In the first case, the weights were 342, 892 and 768 in order. The heaviest crate is “892” which is at index “2” followed by “768” which is at index “3” and then “342” which is at index “1”. Hence the order of the position of the weights to be pushed is 2 3 1.\r\n\r\nIn the second case, the weights were 420, 693 in order. The heaviest crate is “693” which is at index “2” followed by “420” which is at index “1”. Hence the order of the position of the weights to be pushed is 2 1.\r\n\r\nNote: No weight is repeated in a single test case.\r\n",
  "contestCode": "SRM04",
  "createdAt": {
    "$date": {
      "$numberLong": "1538141112897"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591314752"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c2dadc092a9930022a9dc85"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM06B",
  "points": 200,
  "name": "The National Anthem",
  "description": "British prime minister Michael Callow is woken during the night to learn that Princess Susannah, a much-loved member of the Royal Family, has been kidnapped. For her safe return, the kidnappers demand that the Prime Minister must obtain a unique number <b>S</b>. The number can be obtained by performing the steps given below:\r\n\r\nSay there are <b>N</b> numbers say <b>A<sub></b><b>1</sub></b>, <b>A<sub></b><b>2</b?</sub>,.....,<b>A</b><sub><b>N</b></sub></b>.\r\nThe prime minister has to make all of the numbers distinct. In order to do that, he can perform the following operation zero or more times:\r\n            <ul><li> Take any two numbers, say <b>x</b> and <b>y</b> from the given numbers.\r\n            <li> The value of <b>x</b> shall remain as it is while the value of <b>y</b> is replaced by the sum <b>x</b> + <b>y</b>.\r\n</ul>\r\n\r\n<b>The special number is obtained by the addition of the minimum number of times the operation is required to be performed for each test case</b>. Help Michael Callow rescue the beloved princess.\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nThe next line contains an integer<b> N</b>.\r\nThe next line contains <b>N</b> space separated integers (A<sub>1</sub>, A<sub>2</sub>,.....A<sub>N</sub>).",
  "explainOutput": "Print <b>0</b> for those test cases where there is no operation performed.\r\nFinally, on the last line, output the unique number <b>S</b>.",
  "constraints": "1 &le; T &le; 10\r\n1 &le; N &le; 100000\r\nFor each valid <em>i</em>, 1 &le; A<sub>i</sub> &le; 10<sup>6</sup>",
  "example": "Input:\r\n4\r\n3 \r\n1 2 3\r\n3\r\n2 1 2\r\n4\r\n6 9 7 10\r\n5\r\n1 2 6 3 3\r\n\r\nOutput:\r\n0\r\n0\r\n2\r\n",
  "explanation": "Case 1:\r\nNo two numbers are the same. Therefore, number of times the operation is to be performed = 0. Hence, the output is ‘0’.\r\n\r\nCase 2:\r\nTake the second number (with value x = 1) and add it to the first number (with value x = 2). After adding, the sequence will be 3 1 2. Now the numbers are distinct. Therefore, minimum number of mixing operations that are required = 1.\r\n\r\nCase 3:\r\nNo two numbers are the same. Therefore, number of times the operation is to be performed = 0. Hence, the output is ‘0’.\r\n\r\nCase 4:\r\nTake the fourth number (with value x = 3) and add it to the first number (with value x = 1). After adding, the sequence will be 1 2 6 4 3. Now the numbers are distinct. Therefore, minimum number of mixing operations that are required = 1.\r\n\r\nTherefore, the unique number is = 0 + 1 + 0 + 1 = 2, and is printed on the final line.\r\n",
  "contestCode": "SRM06",
  "createdAt": {
    "$date": {
      "$numberLong": "1546477672446"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1547332260498"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c39eca03646190022847c54"
  },
  "tags": [
    "cakewalk"
  ],
  "code": "UNI02",
  "points": 0,
  "name": "Odd or Even",
  "description": "In this problem, you need to take input for 'n' numbers or integers and output their parity by printing 'O' for odd and 'E' for even on a single line.",
  "explainInput": "First line of input contains T - the number of test cases. Next lines will be 'T' sets with 2 lines of input.\r\nFirst line of the set contains an integer which will indicate the number of integers to be processed in a case followed by 'n' space separated integers, a<sub>i</sub> with 1<=i<=n on next line. ",
  "explainOutput": "For each number to be verified, print 'O' if it is odd and 'E' if it is even.",
  "constraints": "1<=T<=100\r\n1<=n<=100\r\n1<=a[i]<=1000",
  "example": "<b>Input:</b>\r\n2\r\n3\r\n2 4 5\r\n5\r\n10 3 1 8 9\r\n<b>Output:</b>\r\nEEOEOOEO",
  "explanation": "We read the first line of input and know that the test is to be done twice. We then read the next line for the number of integers to be processed in each set and output its parity as mentioned.",
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1547280200681"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1548668320556"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c9f3d52a9c6000022af0e05"
  },
  "tags": [
    "adhoc",
    "math",
    "strings"
  ],
  "code": "GBYE19B",
  "points": 100,
  "name": "Consistent brand",
  "description": "<b>Problem Author: Kaustubh Badrike</b>\r\nAs always, Raju the marketing coordinator is looking for sponsors to the upcoming fest. This time, he’s set his sights on notebook brands. To compare brands, he’s collected <b>N</b> notebooks from all over the campus. However, he doesn’t want just any brand, he’s looking for a brand with the longest consistent streak.\r\nA brand is said to have a consistent streak if the number of pages of the brand’s <b>i</b><sup>th</sup> occurrence is the same as the number of pages of the brand’s <b>(i+1)</b><sup>th</sup> occurrence. If two brands have the same length of the longest consistent streak, the brand with more number of pages in it’s longest consistent streak is preferred. If the number of pages in the longest consistent streak is also the same for two brands, the brand appearing earlier in the dictionary is preferred.",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. Each test case consists of three lines.\r\nThe first line of each test case consists of a single integer, <b>N</b>.\r\nThe second line consists of <b>N</b> space-separated strings, where the <b>n</b><sup>th</sup> string denotes the brand of the <b>n</b><sup>th</sup> notebook.\r\nThe third line consists of <b>N</b> space-separated integers, where the <b>n</b><sup>th</sup> integer denotes the number of pages of the <b>n</b><sup>th</sup> notebook.",
  "explainOutput": "For each test case, output a single line with the brand having the longest consistent streak.",
  "constraints": "1 <= <b>T</b>, <b>N</b>, <b>pages of notebook</b> <= 100\r\n1<= <b>|brand name|</b> <=10",
  "example": "<b>Input</b>:\r\n1\r\n9\r\nA\tC\tB\tC\tB\tA\tB\tC\tA\r\n2\t6\t7\t4\t5\t4\t5\t6\t8\r\n\r\n<b>Output</b>:\r\nB",
  "explanation": "The 2<sup>nd</sup> and 3<sup>rd</sup> occurrences of B have the same number of pages (5). Hence the brand B has the longest consistent streak (length 2).",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553919994424"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553932928282"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d3c81e87cb1120022007f2f"
  },
  "tags": [
    "strings"
  ],
  "code": "BETA01D",
  "points": 200,
  "name": "Swapnil and his autocorrect",
  "description": "Swapnil has got a new phone!\r\nBut guess what, its keyboard’s autocorrect system is annoying.\r\n\r\nWhenever the autocorrect changes Swapnil’s word into a wrong word, he retypes a new word with an asterisk (*) at the beginning.\r\n\r\nYou will be given <b>N</b> words sent by Swapnil.\r\nPrint the exact message Swapnil wants to convey in the format given below.\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of Test Cases.\r\nThe first line of each test case consists of a single integer <b>N</b>.\r\nThe next <b>N</b> lines consists of the <b>N</b> words sent by Swapnil ",
  "explainOutput": "For each test case, print the exact message Swapnil wanted to convey with each word on a new line.\r\n(See example for clarification)",
  "constraints": "<ul>\r\n<li>1 <= <b>T</b> <= 10</li>\r\n<li>1 <= <b>N</b> <= 1000</li>\r\n<li>All strings are only formed with lower case alphabets and asterisk (*)</li>\r\n<li>The length of any string doesn’t exceed 20</li>\r\n<li>No two consecutive words in the input begin with an asterisk (*) <br> ( i.e. swapnil corrects any wrong word in one shot )\r\n</li>\r\n<li>The first word of any test case doesn’t begin with an asterisk</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n3\r\n8\r\nhellow\r\n*hello\r\nmy\r\ngame\r\n*name\r\nis\r\nswap\r\n*swapnil\r\n5\r\ni\r\nam\r\nlearning\r\nbackpain\r\n*blockchain\r\n4\r\nhey\r\nhow\r\nyou\r\ndoin\r\n\r\n<b>Output:</b>\r\nhello\r\nmy\r\nname\r\nis\r\nswapnil\r\ni\r\nam\r\nlearning\r\nblockchain\r\nhey\r\nhow\r\nyou\r\ndoin\r\n",
  "explanation": "The incorrect words were removed.\r\nNote that the asterisk is removed from the corrected words.\r\nThe 3rd test case consists of no wrong words, so we print them as they are.\r\n",
  "contestCode": "BETA01",
  "createdAt": {
    "$date": {
      "$numberLong": "1564226704413"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1564270150236"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d46f62486031f00223f4ce8"
  },
  "tags": [
    "adhoc",
    "strings"
  ],
  "code": "SRM10C",
  "points": 250,
  "name": "Billy's PC",
  "description": "This is Billy here. I manage the trainers battle group and PC Pokemon all over the Kanto region. Since you have managed to solve two of the major issues I need someone to help me with some work .\r\n\r\nThe back end code of the PC is not working anymore so i need your help to write a new one. When a trainers captures a new Pokemon we get input as \r\n<b>“captured Pokemon_name”</b>\r\nSo if the trainer has less than 6 Pokemon on his team add that Pokemon to his team, otherwise it will be transferred to PC. \r\n\r\nWhen a trainer deposits a Pokemon to PC we get input as \r\n<b>“deposit Pokemon_name” </b>\r\nIf he has only one Pokemon on his team and tries to deposit it, then the machine denies it automatically and you don’t need to code for that.      \r\n\r\nWhen the trainer tries to withdraw a Pokemon. He can only carry 6 Pokemon, if he withdraws a Pokemon it will be added to the last position in his team.\r\nThe machine doesn't allow the trainer to carry more than 6 Pokemon. \r\n\r\nShow the battle box to the trainer after all the operations.",
  "explainInput": "The first line consists of a single integer <b>T</b>, denoting the number of test cases.\r\nThe first line of each test case consists of a single integer <b>N</b>, denoting the number of operations.\r\nThen N lines follow, consisting of strings which denotes the operations performed by the pc user.\r\n",
  "explainOutput": "For each test case,\r\nThe output should consist of the names of the Pokemon on the trainers battle group, one on each line.\r\n",
  "constraints": "0&ltT&lt=100\r\n0&ltN&lt=50",
  "example": "INPUT-\r\n1\r\n13\r\ncaptured treeco\r\ncaptured larvitar\r\ncaptured charmander\r\ndeposit treeco\r\ncaptured beldum\r\ncaptured totodile\r\ncaptured metagross\r\ncaptured gligar\r\ndeposit metagross\r\nwithdraw treeco\r\ndeposit charmander\r\ncaptured mareep\r\ncaptured chimchar\r\nOutput-\r\n\r\nlarvitar\r\nbeldum\r\ntotodile\r\ngligar\r\ntreeco\r\nmareep",
  "explanation": "He captured Treeco,Larvitar and Charmander and then Treeco\r\nso current team becomes\r\nlavritar\r\ncharmander\r\nthen Captures beldum,totodile,metagross and gligar.\r\nthen deposit metagross and withdraws treeco and deposits charmander.\r\nso current team is \r\nlarvitar\r\nbeldum\r\ntotodile\r\ngligar\r\ntreeco\r\nand captured mareep and chimchar \r\nso final team is\r\nlarvitar\r\nbeldum\r\ntotodile\r\ngligar\r\ntreeco\r\nmareep\r\n\r\n\r\n",
  "contestCode": "SRM10",
  "createdAt": {
    "$date": {
      "$numberLong": "1564911820768"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591074196"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e2d281c533c8d0022c770fd"
  },
  "tags": [
    "greedy",
    "math"
  ],
  "code": "SRM14C",
  "points": 200,
  "name": "Lady Tsunade Needs Help",
  "description": "It becomes really tiring for lady Tsunade every time there is a mission to select genins,chunins and jonins for that mission. The team has to have proper skills in order to make the mission a successful one. So, she decides to give a number to every Shinobi of the Leaf village so that it would be easier for her to select a team when a mission arrives. \r\n\r\nThe number assigned to every Shinobi is the multiplication of the skills he has acquired. Lady Tsunade has to select the best possible team with the available Shinobis. Every mission is ranked <b>X</b> according to the difficulty of that mission. Lady Tsunade has to find the possible number of groups that can be formed with the available Shinobis. \r\n\r\nThe groups formed has to have <b>gcd % X = 0</b> (gcd divisible by X) in order to have a balanced group. Each group consists of <b>3</b> members.\r\n\r\nYour task is to tell the <b>maximum</b> number of groups of <b>gcd % X = 0</b> which can be formed.\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nFirst line of each test case consists of two integers <b>N</b> and <b>X</b> \r\nwhere <b>N</b> denotes the size of array and <b>X</b> denotes the gcd required to form teams\r\nSecond line consists of a series of values <b>A[i]</b> which denotes the number given to the Shinobis\r\n\r\n",
  "explainOutput": "For each test case, output a single line with the integer",
  "constraints": "1<=<b>T</b><=10^3\r\n1<=<b>N</b><=10^5\r\n1<=<b>X</b><=10^9\r\n1<=<b>A[i]</b><=10^9\r\n",
  "example": "<b>Input:</b>\r\n2\r\n7 3\r\n3 6 9 2 5 5 18 \r\n9 4\r\n2 4 6 5 17 9 1 12 7\r\n\r\n<b>Output:</b>\r\n1\r\n0\r\n",
  "explanation": "<b>Test Case 1:</b> <br>\r\nOne of the possible teams can be {3, 9, 18}. <br>\r\nNo other teams can be formed. (You cannot use a Shinobi multiple times)\r\n",
  "contestCode": "SRM14",
  "createdAt": {
    "$date": {
      "$numberLong": "1579997892804"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586382053811"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b64600d1b2cd40020b6c772"
  },
  "code": "AUG18C",
  "points": 100,
  "name": "Doctor Strange to the rescue",
  "description": "The evil has finally revealed himself, Rahul wants to extinct the human race.\r\nThe Ironman is facing a bit of a trouble fighting against Rahul.\r\n\r\nThor has some secret words which can help Ironman defeat Rahul easily. But with his programming skills, Rahul hacked the messages of Thor and disturbed the words sent by him. \r\n\r\nBut Doctor Strange comes to the rescue. He comes up with his magical powers    and finds a way to convert the disturbed words back to the normal words. He says that in a given disturbed word, if we remove all the occurrences of the alphabets ‘r’ , ‘a’ , ‘h’ , ‘u’ , ‘l’ , we will get the normal word sent by Thor.\r\nBut as Doctor Strange is not so good at programming, he asks for your help to find out the initial word sent by Thor, using this conversion.\r\n",
  "explainInput": "The first line of the input consists of a single integer N, denoting the number of words sent by Thor. (which are eventually disturbed by Rahul)\r\nThe next N lines follow.\r\nThe ith of these lines describe a disturbed word. (1 <= i <= N)\r\n(all words have only lowercase alphabets)\r\n(the length of the words doesn’t exceed 30 and is not less than 1)\r\n",
  "explainOutput": "Output N lines.\r\nThe ith of these lines should describe the initial word sent by Thor corresponding to the ith of the disturbed words. (1 <= i <= N)",
  "constraints": "1 <= N <= 50\r\nAll words have only lowercase alphabets\r\nThe length of the words doesn’t exceed 30 and is not less than 1\r\n",
  "example": "Input:\r\n6\r\navengers\r\nbatman\r\nsies\r\nrahul\r\nlol\r\nprogramming\r\n\r\nOutput:\r\nvenges\r\nbtmn\r\nsies\r\n\r\no\r\npogmming\r\n",
  "explanation": "Let us take the example of “batman” , removing all instances of ‘r’ , ‘a’ , ‘h’ ,  ‘u’ , ‘l’ ,\r\n            We get “btmn”.\r\nSimilarly “sies” has no occurrence of the alphabets ‘r’ , ‘a’ , ‘h’ ,  ‘u’ , ‘l’ . Therefore the   output is “sies”.\r\n            Also, all the alphabets in “rahul” have the occurrence of the alphabets ‘r’ , ‘a’ , ‘h’ ,  ‘u’ , ‘l’ .\r\n            Therefore the output is an empty line.\r\n",
  "tags": [
    "adhoc",
    "strings"
  ],
  "contestCode": "AUG18",
  "createdAt": {
    "$date": {
      "$numberLong": "1533285045091"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591470364"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b72f1a5750b6100209d9f13"
  },
  "code": "SRM02B",
  "points": 200,
  "name": "Pritam Hates Bus Conductor",
  "description": "As you all know, Pritam loves to go on trips. Hence buses are like lifeline for Pritam. But nothing ever ideal happens with Pritam as he wishes for. \r\nBus conductor of the buses which Pritam aboards are usually bad at Math. So this always costs Pritam some extra money. Back at home, Pritam was reviewing some old tickets and the amount he paid for them. \r\nBut as usual Pritam is busy planning for his future trips. So he needs your help again.\r\nSo given a ticket code and the expression for total amount of ticket your task is to count the total number of ticket for which Pritam paid extra money and print those ticket codes in which they appear in the input sequence.  ",
  "explainInput": "The first line of input contain an integer <b>T</b> denoting the number of test cases. \r\nFirst line of each test case contains <b>N</b>.\r\nNext <b>N</b> lines contain space separated input of ticket code and expression for bus fare calculation.\r\nEach line contains <b>CODE</b> seperated by space with expression of <b>PxCOST=SUM</b> Here P, COST and SUM are integers",
  "explainOutput": "For each test case output the number of invalid tickets and the ticket codes which are invalid. ",
  "constraints": "1 <= T <= 100\r\n1 <= N <= 10<sup>3</sup>\r\n1 <= |CODE| <= 10<sup>2</sup>\r\n1 <= P, COST, SUM <= 10<sup>9</sup>",
  "example": "<b>Input:</b>\r\n1\r\n5\r\nSAB180X1 2x9=18\r\nSAB180X2 2x3=6\r\nSAB180X3 12x9=118\r\nSAB180X4 7x7=50\r\nSAB180X5 3x9=17\r\n\r\n<b>Output:</b>\r\n3\r\nSAB180X3\r\nSAB180X4\r\nSAB180X5",
  "explanation": "Code for 3<sup>rd</sup>, 4<sup>th</sup> and 5<sup>th</sup> ticket in the input sequence is incorrect.   Hence count of invalid tickets is 3.",
  "tags": [
    "strings"
  ],
  "contestCode": "SRM02",
  "createdAt": {
    "$date": {
      "$numberLong": "1534239821929"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926371190"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c2c5e61ec9f5000224eef13"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM05A",
  "points": 100,
  "name": "Cibin Likes Networking",
  "description": "Its a practical session of Computer Networks. Unlike other practical sessions, this one is interesting. Today the professor asked Cibin to establish a wired <b>Star Topology</b> network between all the PCs where the central PC is that of the professor.\r\nNow, if you don’t know the star topology network, it is basically a network in which there is a central PC which is connected to all the others PCs in the network. As assisted by the professor, after 150m, there is a need of repeater.\r\nThere are total <b>N</b> PCs including the central PC. The total available wire length is <b>L</b> and the total no. of available repeaters are <b>R</b>.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of two lines. The first line contains three numbers viz total no. of PCs N, the available no. of repeaters R and available length of wire L. The second line contains (N-1) numbers K1,K2,K3….Kn-1 i.e the lengths of the other PCs from the central PC.\r\n",
  "explainOutput": "For each test case, if the wire and repeaters are sufficient to establish the star topology then print sufficient otherwise print insufficient.",
  "constraints": "1 <= T <= 100\r\n3 <= N <= 50\r\n1 <= L <= 100000\r\n1 <= R <= 100\r\n1 <= Ki <= 1000",
  "example": "Input:\r\n3\r\n7 3 550\r\n90 70 170 45 195 70\r\n10 5 1500\r\n175 200 45 95 35 180 170 100 120\r\n8 2 1000\r\n170 50 190 50 230 100 120\r\n\r\nOutput:\r\ninsufficient\r\nsufficient\r\ninsufficient",
  "explanation": "For the first test case, the total wire length required is 640 but available wire length is 550.\r\nFor the second test case, the wire and the no. of repeaters both are sufficient.\r\nFor the third test case, the wire length is sufficient but the available no. of repeaters is not enough.",
  "contestCode": "SRM05",
  "createdAt": {
    "$date": {
      "$numberLong": "1546391817933"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1546774538611"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c39ed573646190022847c59"
  },
  "tags": [
    "cakewalk"
  ],
  "code": "UNI04",
  "points": 0,
  "name": "Tug Of War",
  "description": "SIES GST is hosting annual Tug of war competition you are making some predictions you know the power levels of the competitors now you have decided to write a program to find out the winning team.",
  "explainInput": "The first line contains  T numbers of test case.\r\nThe second line of input contain an integer t denoting the players per team. \r\na[1],a[2],a[3]...... is the power of each player of team is given alternatively.\r\n[\r\nFor example-\r\n3\r\na b c d e f\r\na c and f are of team 1\r\nb d and e are of team 2\r\n]",
  "explainOutput": "If team 1 wins print 1 \r\nif team 2 wins print 2 \r\nIf match ends in a draw print 0",
  "constraints": "1<=T<=100\r\n1<=a[i]<=100",
  "example": "<b>Input:</b>\r\n2\r\n4\r\n2 3 4 6 7 9 8 10\r\n2\r\n1 1 1 1\r\n2\r\n3 4 5 3 \r\n<b>Output:</b>\r\n201",
  "explanation": "Team 1`s power was 21 and Team 2`s power was 28 since team 2 was powerful Team 2 won in first case.",
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1547280383767"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586646389122"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d3c780e7cb1120022007f29"
  },
  "tags": [
    "math"
  ],
  "code": "BETA01A",
  "points": 100,
  "name": "Miu hates rectangles",
  "description": "Miu - The smart cat is back\r\nToday she came across a set of cardboard boxes arranged on the floor\r\n\r\nThe boxes are arranged in <b>R</b> rows and <b>C</b> columns ( <b>R</b> is not equal to <b>C</b> )\r\nMiu doesn’t like this arrangement since they form a rectangle\r\n\r\nShe wants to know if it is possible to rearrange them in a form of a square of side length <b>greater than</b> or <b>equal to N</b>\r\n( It is allowed to discard some of the boxes )\r\n\r\nSince Miu is short of sleep and low on coffee, she is not able to think properly\r\nHelp her to find out if this is possible or not\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of test cases (i.e queries)\r\nThe only line of each test case consists 3 space-separated integers <b>R</b>, <b>C</b> and <b>N</b>",
  "explainOutput": "For each test case, output the answer in a <b>single line</b>:\r\n<b>1</b> -> if it is possible\r\n<b>0</b> -> if it is not possible",
  "constraints": "<ul>\r\n<li>1 <= <b>T</b> <= 100</li>\r\n<li>1 <= <b>R</b>, <b>C</b>, <b>N</b> <= 100000</li>\r\n<li><b>R</b> is not equal to <b>C</b></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n5\r\n4 2 3\r\n5 3 2\r\n2 8 4\r\n1 2 2\r\n2 5 1\r\n\r\n<b>Output:</b>\r\n0\r\n1\r\n1\r\n0\r\n1\r\n",
  "explanation": "<b>Test Case 1:</b> the number of boxes available aren’t enough for making a 3 by 3 arrangement\r\n<b>Test Case 2:</b> the number of boxes available are enough for making a 2 by 2 arrangement\r\n",
  "contestCode": "BETA01",
  "createdAt": {
    "$date": {
      "$numberLong": "1564224182725"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1564269531555"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e15eea073aedb0022810710"
  },
  "tags": [
    "math"
  ],
  "code": "SRM13C",
  "points": 300,
  "name": "So you think you can Dare?",
  "description": "You are playing Truth & Dare with Miu - The smart cat.\r\nIt’s your turn and you chose to Dare!\r\n\r\nYou have <b>N</b> sticks with you, each of the length from <b>1</b> to <b>N</b>.\r\nMiu destroyed one of these sticks, specifically of length <b>X</b>.\r\nHence, now you have <b>N-1</b> sticks left of all lengths from <b>1</b> to <b>N</b> except <b>X</b>.\r\n\r\nNow you are allowed to <b>join all</b>, <b>some</b> or <b>none</b> of these sticks together to form a longer stick.\r\nYou are <b>NOT</b> allowed to break any stick.\r\n\r\nMiu dares you to form a stick of length <b>exactly L</b> using these <b>N-1</b> sticks.\r\nIs it possible to complete this task?\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe only line of each test case consists of three space-separated integers <b>N X</b> and <b>L</b>.\r\n",
  "explainOutput": "For each test case, on a single line, output <b>yes</b> if it is possible to form a stick of length <b>L</b>. Else output <b>no</b>.\r\n\r\n",
  "constraints": "1 <= <b>T</b> <= 1000\r\n2 <= <b>N</b> <= 10^9\r\n1 <= <b>X</b> <= <b>N</b>\r\n1 <= <b>L</b> <= 10^9\r\n\r\n",
  "example": "<b>Input:</b>\r\n2\r\n5 2 8\r\n6 5 53\r\n\r\n\r\n\r\n<b>Output:</b>\r\nyes\r\nno\r\n\r\n",
  "explanation": "There are 2 Test Cases\r\n\r\n<b>Test Case 1:</b>\r\nYou have sticks of lengths 1 to 5 except 2.\r\nSo you have sticks of length [ 1, 3, 4, 5 ]\r\nYou can form a stick of length 8 using the sticks of length of 5 & 3.\r\nYou can also form this stick using the sticks of length 1, 3 & 4.\r\n( Note that you <b>cannot</b> form this stick using 2 sticks of length 4 because you have only 1 stick of length 4. )\r\n\r\n",
  "contestCode": "SRM13",
  "createdAt": {
    "$date": {
      "$numberLong": "1578475848030"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1578475848030"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c4ae7c391b74800225c106f"
  },
  "tags": [
    "dp"
  ],
  "code": "SRM07C",
  "points": 400,
  "name": "Instructions please !",
  "description": "Sashank and Neeraj have come to SIES GST for the first time for ByteCamp2019. They have made tiny devices that broadcast their locations(X,Y). While walking around campus they noticed that (N) devices have fell down from their bag. Sashank has a monitor that shows location of all the devices and both of them are facing north. Neeraj has to collect all the devices avoiding walls as soon as possible and return back to Sashank(Xp,Yp). Help Sashank to provide instructions to Neeraj via phone.\r\n\r\nInstructions are:\r\nMove forward to next place\r\nTurn towards left standing on same place\r\nTurn towards right standing on same place\r\nTurn backward standing on same place  \r\n<img src=\"https://i.imgur.com/OUrRAXj.png\" width=\"400px\">",
  "explainInput": "The first line of input contain an integer <b>T</b> denoting the number of test cases. \r\nFirst line of each test case contains <b>N</b> denoting number of devices.\r\nNext line has space separated integers <b>Xp</b> and <b>Yp</b> .\r\nIt is followed by a line containing 2 space separated integers <b>Xmax</b> and <b>Ymax</b> denoting number of horizontal and vertical elements.\r\nNext Y line contain matrix of 1s and 0s. Where 0 is for walls and 1 is for path.\r\nNext N lines have space separated X and Y coordinate of the devices. ",
  "explainOutput": "For each test case print minimum number of instructions to cover all device in same order as input.\r\nPrint “lost” without quotes if collecting all devices is not possible. ",
  "constraints": "T < 101  \r\n0 < N < 6  \r\nX, Y < 21  ",
  "example": "Input:\r\n2\r\n2\r\n5 2\r\n10 4\r\n0111111000\r\n1101011011\r\n1101110010\r\n0111111111\r\n3 0\r\n1 2\r\n1\r\n3 3\r\n4 4\r\n1011\r\n1011\r\n1011\r\n1011\r\n0 0\r\n\r\nOutput:\r\n18\r\nlost\t",
  "explanation": "Test case1:  \r\n<img src=\"https://i.imgur.com/lNfeVst.png\" width=\"400\">  \r\n  \r\n  \r\nFFLFFFFLFFFLFFFFLF->18 instructions\r\n\r\nTest case2:\r\nNo possible path.",
  "contestCode": "SRM07",
  "createdAt": {
    "$date": {
      "$numberLong": "1548393067725"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915930401"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c39f4af80aaed0022b63275"
  },
  "tags": [
    "math",
    "strings"
  ],
  "code": "UNI06",
  "points": 0,
  "name": "Time Never Stops",
  "description": "Mithil has used up a lot of his time coding. Now he has realised he is running out of time for exam preparation! Mithil has calculated some geeky stuff and says he could probably fix it all! He wants to be very precise here, can you help him know the exact amount of time (in seconds) left for the exam to start?",
  "explainInput": "First line consist of number of test cases. Each case will have current time and exam time on 2 lines. Time is in 24 hours format HH:MM .",
  "explainOutput": "Print the time left in seconds on new line.",
  "constraints": "0<=HH<=24\r\n0<=MM<=60",
  "example": "Input:\r\n1\r\n13:06\r\n14:02\r\nOutput:\r\n3360",
  "explanation": "Current time is 13:06 and exam time is 14:02 which has 56 minutes in between. That is, 3360 seconds.",
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1547282263101"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586646417961"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5ca063dd08f90d00223749ea"
  },
  "tags": [
    "dp",
    "math"
  ],
  "code": "GBYE19C",
  "points": 100,
  "name": "Don't You Worry Child (Surprise Problem)",
  "description": "<b>Problem Author: Omkar Prabhu</b>\r\nWhen we thought of this contest at first, we all were like, “wow, we would tell our college stories!\" and soon we all realised that time really flied in these 4 years...\r\n\r\nWhat did we care about the most in these 4 years? Marks? Attendance? Assignments? Huh, NO!\r\nWe made sure we are learning in all aspects and get inspired every single day to come up with new ideas and new projects or something new to keep us happy.\r\n\r\nWant to feel that vibe to come to college for your remaining years? Find that \"one thing\" which you feel interesting. No matter what it is, it can be music, academics, tech, drama, dance, logistics, marketing, just get into that damn thing and explore!\r\n\r\nBut, we all experienced one common thing, \"ye semester chod, agle semester pakka 7+ or 8+ or 9+ launga!\". So here you are.\r\nYou will be given marks of <b>N</b> subjects and you are given <b>S</b> semesters. Let's define an array A with size <b>N x S</b> as the array that's formed by concatenating S copies of N.\r\n\r\nFor example, if N = {6, 9} and S = 3, then A = {6, 9, 6, 9, 6, 9}.\r\n\r\nYou have to find the maximum subarray sum of the new array. Fomally, you should compute the maximum value of A<sub>i</sub> + A<sub>i+1</sub> + A<sub>i+2</sub> + ... + A<sub>j</sub>, where 0 &le; i &le; j &le; (N x S).\r\n",
  "explainInput": "The first line of the input contains a single integer T denoting the number of test cases.\r\nThe first line of each test case contains two space-separated integers N and S.\r\nThe second line contains N space-separated integers.",
  "explainOutput": "For each test case, print a single line containing the maximum subarray sum of the new array A.",
  "constraints": "1 &le; T &le; 25\r\n1 &le; N, S &le; 10<sup>4</sup>\r\n-10<sup>2</sup> &le; N<sub>i</sub> &le; 10<sup>2</sup>",
  "example": "<b>Input:</b>\r\n2\r\n2 3\r\n1 2\r\n3 2\r\n1 -2 1\r\n\r\n<b>Output:</b>\r\n9\r\n2",
  "explanation": "Case 1: A = {1, 2, 1, 2, 1, 2} and the subarray with maximum sum is the whole {1, 2, 1, 2, 1, 2}. So the answer is 9.\r\nCase 2: A = {1, -2, 1, 1, -2, 1} and the subarray with maximum sum is {1, 1}. So the answer is 2.",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553995397015"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553995539107"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d616091ec3cc6002207e858"
  },
  "tags": [
    "math"
  ],
  "code": "SRM11C",
  "points": 150,
  "name": "Complex relationship",
  "description": "I was the 1, she said. But I was -ve about it. She rooted me out of her life. And now I … am just ‘i’. It’s all imaginary until I found a real friend, but now its complex.\r\nHelp ‘i‘ resolve the complex after repeatedly multiplying this friendship <b>N</b> times by itself.\r\n\r\nYou are given the complex number <b>X</b> + i<b>Y</b>. Multiply <b>i</b> to this number <b>N</b> times. \r\nOutput the resultant complex number.\r\n",
  "explainInput": "<ul><li>The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases is as follow:\r\n</li>\r\n<li>The first and only line of each test case contains <b>3</b> space separated integers <b>N</b>, <b>X</b> and <b>Y</b>.</li>",
  "explainOutput": "For each test case, print a single line containing the real part and the imaginary part of the new complex separated by a space.",
  "constraints": "1 ≤ <b>T</b> ≤ 250\r\n0 ≤ <b>N</b> ≤ 1000\r\n-100 ≤ <b>X, Y</b> ≤ 100\r\n",
  "example": "<b>Input:</b>\r\n2\r\n2 2 -3\r\n0 4 0\r\n\r\n<b>Output:</b>\r\n-2 3\r\n4 0\r\n",
  "explanation": "<b>Example case 1:</b>\r\nThe complex number is 2-3i.\r\nMultiplying i once : 2i+3\r\nMultiplying i again: -2+3i\r\n",
  "contestCode": "SRM11",
  "createdAt": {
    "$date": {
      "$numberLong": "1566643001281"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1566697894389"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e15ec2073aedb002281070e"
  },
  "tags": [
    "math"
  ],
  "code": "SRM13A",
  "points": 100,
  "name": "So you think you can Dance?",
  "description": "Alice and Bob are keen dancers. They are currently practising to participate in an international dance contest!\r\n\r\nAlice has <b>N</b> energy pills which help her when she gets tired. She wants to share these pills with Bob in such a way that both Alice and Bob get equal amount of these pills.\r\n\r\nFind the <b>maximum</b> number of pills Bob can get.",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of Queries (Test Cases) .\r\nEach query consists of a single line containing a single integer <b>N</b>.",
  "explainOutput": "For each query, output the answer in a <b> single line </b>.",
  "constraints": "1 <= <b> T </b> <= 100\r\n1 <= <b> N </b> <= 10^9",
  "example": "<b>Input:</b>\r\n3\r\n15\r\n16\r\n17\r\n\r\n\r\n\r\n\r\n<b>Output:</b>\r\n7\r\n8\r\n8\r\n",
  "explanation": "There are 3 Queries.\r\n\r\n<b>Query 1:</b> \r\n15 pills can be divided into 7, 7 & 1.\r\nAlice and Bob can have 7 pills each, which is the <b>maximum</b> amount satisfying the condition that both Alice and Bob get equal amount of pills.",
  "contestCode": "SRM13",
  "createdAt": {
    "$date": {
      "$numberLong": "1578475208647"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1578475208647"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e15efea73aedb0022810711"
  },
  "tags": [
    "math"
  ],
  "code": "SRM13D",
  "points": 300,
  "name": "So you think you can Think?",
  "description": "You have a list of numbers.\r\nCurrently the list consists of only one integer <b>N</b>.\r\n\r\nIn <b>one</b> move, you have to do the following operations on the list in order:\r\n<ul>\r\n<li>Create a new empty list <b>NewList</b></li>\r\n<li>Iterate through your current list, and for each element <b>X</b> present in this list:\r\n1. If <b>X</b> is <b>Odd</b>, append the number (<b>X * 2</b>) to the <b>NewList</b>\r\n2. Else if <b>X</b> is <b>Even</b>, append the numbers (<b>X * 2</b>) and (<b>X + 1</b>) to the <b>NewList</b>\r\n3. Delete the element <b>X</b> from the current list.\r\n\t</li>\r\n<li>Assign <b>NewList</b> as the current list.</li>\r\n</ul>\r\nYou are supposed to find the <b>amount</b> of <b>Odd</b> numbers present in your list after performing this move <b>M</b> times.\r\n\r\nSince this number can be very large for larger cases, <b>output the answer Modulo (%) 10^9 + 7</b> (1000000007).\r\n(Refer to the explanation of the example for clarification )\r\n\r\n<b>Note</b>: Remember the following property while computing the answer to avoid integer overflows:-\r\n( A + B ) % MOD = ( A % MOD ) + ( B % MOD ).\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of test cases.\r\nEach test case consists of a single line containing two space-separated integers <b>N</b> and <b>M</b>.\r\n",
  "explainOutput": "For each test case, output the answer in a <b>single line</b>.\r\n",
  "constraints": "1 <= <b>T</b> <= 10^4\r\n1 <= <b>N</b> <= 10^9\r\n1 <= <b>M</b> <= 10^5\r\n",
  "example": "<b>Input:</b>\r\n3\r\n4 2\r\n3 1\r\n77 49\r\n\r\n\r\n<b>Output:</b>\r\n1\r\n0\r\n807526948\r\n",
  "explanation": "There are 3 test cases\r\n\r\n<b>Test Case 1:</b>\r\nInitial list -> [ 4 ]\r\nAfter Move 1 -> [ 8, 5 ]\r\nAfter Move 2 -> [ 16, 9, 10 ]\r\nHence, there is only 1 odd number present in the final list (9).\r\nFinally since the answer is 1, and we have to output it modulo 10^9 + 7:\r\nThe final answer is =  1 % (10^9 + 7) = 1\r\n\r\n<b>Test Case 3:</b>\r\nThere are 4807526976 odd numbers present in the final list after 49 moves.\r\nThe final answer is =  4807526976 % (10^9 + 7) = 807526948\r\n\r\nBe aware of integer overflows.\r\n",
  "contestCode": "SRM13",
  "createdAt": {
    "$date": {
      "$numberLong": "1578476178215"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1578476377836"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c98eb0d16c4b60022cd52f0"
  },
  "tags": [
    "dp",
    "strings"
  ],
  "code": "GBYE19E",
  "points": 100,
  "name": "Drake Loves Kiki",
  "description": "<b>Problem Author: Sanket Bailmare</b>\r\nDrake loves to compose songs. This time he decides to compose in the language and grammar of his own. He decides to construct the words dictionary which would help him to compose his song. This time when he decides to something different, he tries to impress Kiki with the lines having some pattern. He shows <b>T </b>cases having <b>N</b> words each to Kiki to impress her. She gets impressed when she sees that each word is starting with a letter same as the ending letter of preceding word. \r\nYou have to tell whether Kiki is <b>Impressed</b> with Drake or not.",
  "explainInput": "The first line of input contain an integer <b>T</b> denoting the number of test cases.\r\nEach test case consists number of words <b>N</b> followed by space separated N words(small case) on the next line.",
  "explainOutput": "For each test case, output a single line <b>“impressed”</b> if the condition is satisfied.\r\nAnd <b>“disappointed”</b> if condition is not satisfied.",
  "constraints": "1<=T<= 1000\r\n2<=N<=50",
  "example": "<b>Input:</b>\r\n3\r\n4\r\nabcd defg qhij oklm\r\n3\r\nmcqz zqed defg\r\n3\r\nabcd klmn dejk\r\n<b>Output:</b>\r\ndisappointed\r\nimpressed\r\nimpressed",
  "explanation": "In test case 1 words <b>“abcd”</b>  &  <b>“defg”</b> satisfy the criteria but the remaining words do not satisfy hence kiki is disappointed with these words.\r\nIn test case 2 words are <b>arranged</b> in the order where the condition is satisfied hence kiki is <b>impressed</b>.\r\nIn test case 3 words can be <b>arranged</b> in order to meet the condition hence kiki is <b>impressed</b>.",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553505717823"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915761506"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d615f02ec3cc6002207e857"
  },
  "tags": [
    "math"
  ],
  "code": "SRM11A",
  "points": 100,
  "name": "Cirtangle",
  "description": "Mithil loves eating in a circular plate on a rectangular table surface. Lately he’s been visiting many places with different plate and table sizes. Mithil is happy only if the table is large enough to occupy the plate <b>completely</b>. \r\nThe dimensions of the rectangular table surface are <b>N</b> x <b>M</b>. The radius of the circular plate is <b>R</b>.\r\nCan you tell if Mithil is happy or not?\r\n",
  "explainInput": "<ul>\r\n<li>The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases is as follow:\r\n</li>\r\n<li>The first and only line of each test case contains <b>3</b> space separated integers <b>N</b>, <b>M</b> and <b>R</b>.</li>\r\n</ul>",
  "explainOutput": "For each test case, print a single line containing the string \"<b>YES</b>\" if the table is large enough to occupy the plate or else \"<b>NO</b>\" (without quotes).\r\n",
  "constraints": "1 ≤ <b>T</b> ≤ 250\r\n1 ≤ <b>N</b>, <b>M</b>, <b>R</b> ≤ 1000\r\n",
  "example": "<b>Input:</b>\r\n2\r\n8 4 1\r\n3 1 1\r\n\r\n<b>Output:</b>\r\nYES\r\nNO",
  "explanation": "<b>Example case 1:</b>\r\nThe table is large enough.\r\n<img src=\"https://i.imgur.com/HbYLn9e.png\">\r\n<b>Example case 2:</b>\r\nNo matter what, the dish is too large for the table.\r\n<img src=\"https://imgur.com/Jq3rvKB.png\">\r\n\r\n",
  "contestCode": "SRM11",
  "createdAt": {
    "$date": {
      "$numberLong": "1566642602440"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1566697554628"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d7a599fb112e300220a44d0"
  },
  "tags": [
    "adhoc",
    "cakewalk"
  ],
  "code": "SRM12A",
  "points": 100,
  "name": "Stage 1: Yusuf’s dream",
  "description": "<p><span style=\"font-weight: 400;\">Cobb, Arthur, Eames, Ariadne and Yusuf are \"extractors\": they perform corporate espionage using experimental military technology to infiltrate the subconscious of their targets and extract valuable information through a shared dream world. Their latest client, Japanese businessman Saito, has a seemingly impossible job for the team: implanting an idea in a person's subconscious, or &lsquo;inception&rsquo;. To break up the energy conglomerate of ailing competitor Maurice Fischer, Saito wants Cobb to convince Fischer's son and heir, Robert, to dissolve his father's company via an &lsquo;inception&rsquo;.</span></p>\r\n<p><span style=\"font-weight: 400;\">The job is set into motion when Maurice Fischer dies and his son accompanies his father's body from Sydney to Los Angeles. During the flight, Cobb sedates Fischer, and the team brings him into a three-level shared dream.</span></p>\r\n<p><span style=\"font-weight: 400;\">In the first level, Yusuf's dream of a rainy city, the team successfully abducts Fischer, but the team is attacked by Fischer's militarized subconscious projections, which have been trained to hunt and kill extractors.&nbsp;</span></p>\r\n<p><span style=\"font-weight: 400;\">The sedated team is travelling in a car, driven around by Yusuf. The car capable of handling a damage of at most </span><strong>X </strong><span style=\"font-weight: 400;\">points. A series of attacks is inflicted on the car by the aforementioned projections. Each successful attack on the car (denoted by a positive value </span><strong>Y</strong><span style=\"font-weight: 400;\">) inflicts a damage of amount </span><strong>Y</strong><span style=\"font-weight: 400;\">,</span> <span style=\"font-weight: 400;\">and each miss is denoted by a zero or a negative value </span><strong>Z</strong><span style=\"font-weight: 400;\">.&nbsp;</span></p>\r\n<p><span style=\"font-weight: 400;\">Can Cobb and his team survive the attack and make it to the second stage?</span></p>",
  "explainInput": "<p> The first line of input contains an integer <strong>T</strong> denoting the number of test cases.\r\nEach test case consists of two lines; the first line contains the number of infliction <strong>N</strong>, and the damage-capacity <strong>X</strong> of the car; and the next line contains the series of attacks inflicted (series of integers <strong>Y</strong> and <strong>Z</strong>). </p>",
  "explainOutput": "<p>For each test case, output a single line with the string &ldquo;successful&rdquo; or &ldquo;unsuccessful&rdquo; (without quotes).</p>",
  "constraints": "<p>1 &le; T &le; 100\r\n1 &le; N &le; 100\r\n1 &le; X &le; 10<sup>9</sup>\r\n1 &le; Y &le; 10<sup>6</sup>\r\n-10<sup>6</sup> &le; Z &le; 0\r\n</p>",
  "example": "<strong>Input:</strong>\r\n3\r\n10 1000\r\n1 2 3 4 -6 8 10 100 -12030 20\r\n6 100\r\n1001 -199 200 300 -2391 0\r\n5 500\r\n100 200 150 -2313 50\r\n\r\n<strong>Output:</strong>\r\nsuccessful\r\nunsuccessful\r\nsuccessful\r\n",
  "explanation": "Case 1:\r\nThe total damage inflicted is less than the damage-capacity of the car.\r\n\r\nCase 2:\r\nThe inflicted damage exceeds the damage-capacity of the car.\r\n\r\nCase 3:\r\nThe total damage inflicted is equal to the damage-capacity of the car.\r\n",
  "contestCode": "SRM12",
  "createdAt": {
    "$date": {
      "$numberLong": "1568279623575"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586590960694"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c9f2ade66d9c7002236765e"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "GBYE19A",
  "points": 100,
  "name": "Swedish House Mafia ⚫️⚫️⚫️",
  "description": "<b>Problem Author: Omkar Prabhu</b>\r\nLets celebrate <b>03 25 18</b>!\r\nYou are given a very long number, find if it is divisible by 03 or not.",
  "explainInput": "The first line contains T the number of test cases.\r\nEach test case contains a number N.\r\n",
  "explainOutput": "For each test case, print single line containing <b>greyhound</b> or <b>untilone</b> if number is divisible by 03 or not respectively.\r\n",
  "constraints": "1 &lt; T &lt; 100\r\n1 &lt; N &lt; 10^100 (oh yeah)",
  "example": "<b>Input:</b>\r\n2\r\n22\r\n100002\r\n\r\n<b>Output:</b>\r\nuntilone\r\ngreyhound",
  "explanation": "Listen to them here:\r\nAxwell: <a href=\"https://www.youtube.com/watch?v=R4shwJBnYEM\">In My Mind</a>\r\nSebastian Ingrosso: <a href=\"https://www.youtube.com/watch?v=I04oPxN3208\">Reload</a>\r\nSteve Angello: <a href=\"https://www.youtube.com/watch?v=P6GmT-WJR_k\">Payback</a>",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553915270768"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553921053900"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e15ed4773aedb002281070f"
  },
  "tags": [
    "math"
  ],
  "code": "SRM13B",
  "points": 200,
  "name": "So you think you can Math?",
  "description": "You are given a set consisting of <b>N</b> amount of <b>even</b> numbers and <b>M</b> amount of <b>odd</b> numbers.\r\n\r\nIn one move, you have to take any two of these numbers, delete them from the set, and store back <b>either</b> their <b>product or</b> their <b>summation</b>.\r\n\r\nYou <b>have</b> to continue this procedure until there is only one remaining element in the set.\r\n\r\nYou are supposed to tell if it is possible to make some moves in such a way that the remaining element is <b>odd</b>.\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of test cases.\r\nEach test case consists of a single line containing two space-separated integers, <b>N</b> and <b>M</b>.\r\n",
  "explainOutput": "For each test case, output a single line containing <b>yes</b> (strictly in lowercase) if it is possible to obtain an <b>odd</b> value, otherwise output <b>no</b> (strictly in lowercase)  if it is not possible.\r\n\r\n<b>Note:</b> Make sure your output is in lowercase, otherwise the compiler won’t be able to match it with the correct answer.",
  "constraints": "1 <= T <= 100\r\n0 <= <b>N</b>, <b>M</b> <= 10^9\r\n<b>N</b> + <b>M</b> >= 1",
  "example": "<b>Input:</b>\r\n2\r\n1 2\r\n0 1\r\n\r\n\r\n\r\n<b>Output:</b>\r\nyes\r\nyes\r\n",
  "explanation": "There are 2 Test Cases:\r\n\r\n<b>Test Case 1:</b>\r\nThere is 1 even number & 2 odd numbers.\r\nWe can multiply the 2 odd numbers to obtain an odd number and then add it with the even number to again obtain an odd number.\r\nHence it is possible.\r\n",
  "contestCode": "SRM13",
  "createdAt": {
    "$date": {
      "$numberLong": "1578475503669"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1578476781479"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d623acae007440022d873c0"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM11D",
  "points": 200,
  "name": "Catch-a Local",
  "description": "It’s College time and Surya is back into action. Surya needs to catch a local to reach college on time, so he wants to calculate if he could catch the train or not. \r\n\r\nThere are <b>N</b> cases where Surya describes the <b>M</b>, <b>S</b> and <b>T</b>.\r\nSurya takes <b>M</b> time to reach the station, his station number (destination) is <b>S</b> and Train takes <b>T</b> time to reach this station. Also, Train stops for <b>20</b> extra seconds at <b>each</b> station for passengers to get down / up the train. \r\n\r\nSurya is lazy , so help him in checking whether he could catch the train or not. \r\n",
  "explainInput": "First Line of Input contain an integer <b>N</b> denoting the number of test cases.\r\nEach Test case consists of one line, which contains \r\n<b>M</b> (Time taken by Surya),\r\n<b>S</b> (Sth Station is the station to be reached),\r\n<b>T</b> (Time taken by train) \r\nin order.\r\nAll time mentioned is in the format mm:ss(minutes:seconds) or mm(minutes) if the seconds part is zero/insignificant.\r\n\r\n<b>Eg</b>: 12:00 can be taken as 12 since seconds part of “12:00” is zero/insignificant, while 02:04 cannot be represented / accepted as 2:4 or 02:4 or 2:04. \r\n",
  "explainOutput": "For each test case, output a single line with the Result: “<b>+seconds</b>” or “<b>-seconds</b>”.\r\ni.e, ‘+’ for <b>catching train</b> and ‘-’ for <b>missing the train</b>, with the difference in time(seconds) taken by Surya to arrive as S and the train to depart from S .",
  "constraints": "1 <= <b>TestCases</b> <= 10^4\r\n01 <= <b>mm</b> <= 120\r\n01 <= <b>ss</b> <=59 (Seconds)\r\n1 <= <b>S</b> <= 20",
  "example": "<b>Input:</b>\r\n2\r\n12 3 21:44\r\n34 2 15:20\r\n<b>Output:</b>\r\n+644\r\n-1080\r\n",
  "explanation": "In the <b>first case</b>, Surya takes 12 minutes to reach while Train takes {21:44+Delay} time , hence, Surya catches Train with 644 seconds remaining.\r\n\r\nIn the <b>second case</b>, Surya missed train by 1080 seconds since train took (15:20+Delay} time to reach at and depart from <b>S</b> and Surya took 34 minutes to reach station. ",
  "contestCode": "SRM11",
  "createdAt": {
    "$date": {
      "$numberLong": "1566698866627"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591019063"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e2d29af533c8d0022c770fe"
  },
  "tags": [
    "adhoc",
    "greedy"
  ],
  "code": "SRM14D",
  "points": 300,
  "name": "Kakashi vs Shikamaru",
  "description": "Shikamaru is known for his amazing intellect.  <br> \r\nKakashi decided to find out the true extent of his abilities. \r\n\r\nKakashi gave him <b>N</b> cards. <br>\r\nEach of these cards had a number written on them in the order: <br>\r\n<b> A1 A2 A3 … AN </b>\r\n\r\nIn <b>one</b> move, Shikamaru is allowed to do any <b>one</b> of the following tasks: <br>\r\n<b>1)</b> Change the number on any <b>1</b> card to any other number <br>\r\n<b>2)</b> Place the last card at the start of the sequence. (More formally, A[i+1] = A[i] for 2 <= i <= N and A[1] = A[N])\r\n\r\nShikamaru is supposed to make moves on this sequence of cards in such a way that the final numbers on the cards are: <br>\r\n<b> 1 2 3 … N </b> <br>\r\nin the same order.\r\nThis should be done in the <b>minimum</b> number of moves possible.\r\n\r\nHelp Shikamaru to complete this task. \r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. <br>\r\nThe first line of each test case consists of a single integer <b>N</b>. <br>\r\nThe second line consists of <b>N</b> space-separated integers <b>A[i]</b>.\r\n\r\n",
  "explainOutput": "For each test case, print the <b>minimum</b> number of moves required in a single line\r\n",
  "constraints": "1 <= <b>T</b> <= 1000\r\n1 <= <b>N</b> <= 10^5\r\n1 <= <b>A[i]</b> <= 10^9\r\n",
  "example": "<b>Input:</b>\r\n2\r\n4\r\n5 3 9 1\r\n6\r\n2 3 4 1 6 1\r\n\r\n<b>Output:</b>\r\n3\r\n2\r\n",
  "explanation": "<b>Test case 1:</b>\r\nAfter Move 1: [1 5 3 9] <br>\r\nAfter Move 2: [1 2 3 9] <br>\r\nAfter Move 3: [1 2 3 4] <br>\r\n",
  "contestCode": "SRM14",
  "createdAt": {
    "$date": {
      "$numberLong": "1579998295207"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586381974249"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b6c42d08cab100020e963b9"
  },
  "code": "SRM01C",
  "points": 250,
  "name": "Save Dexter’s Laboratory",
  "description": "Dee Dee has caused some trouble to Dexter once again and now his whole lab is about to explode! To prevent this destruction, Dexter has to perform a simple task. He is given a sequence of N integers and a set of Q queries. In each query, he is given two integers i and j. For each query, he has to find the difference between the ith greatest integer and jth smallest integer in the given sequence.\r\n\r\nHowever, Dexter is too busy for solving this problem, as he is fighting against his arch-enemy Mandark. Can you help Dexter to save his laboratory by finding the required difference in each query?",
  "explainInput": "The first line consists of a single integer T denoting the number of testcases.  \r\nThe first line of each test case consists of a single integer N denoting the number of integers in the sequence.\r\nThe second line of the test case consists of N space-separated integers (The sequence) .\r\nThe third line of the test case consists of a single integer Q denoting the number of queries.\r\nQ lines follow:\r\nEach of these lines consists of two space-separated integers i and j.",
  "explainOutput": "Output Q lines.\r\nEach of these lines should consist of a single integer : the answer to the corresponding query, which is the difference between the ith greatest integer and the jth smallest integer in the given sequence.\r\n( ith greatest integer - jth smallest integer)",
  "constraints": "1 <= T <= 10  \r\n1 <= N <= 100000\r\n-100000 <= A(k) <= 100000 ( where A(k) is the kth element in the sequence. ( 1 <= k <= N ) )\r\n1 <= Q <= 10000\r\n1 <= i, j <= N",
  "example": "<b>Input:</b>\r\n1  \r\n5  \r\n4 10 -1 7 -3 \r\n2\r\n2 3\r\n4 5\r\n \r\n<b>Output:</b>\r\n3\r\n-11",
  "explanation": "Test Case 1:\r\n\r\nQuery 1:\r\n2nd greatest integer => 7\r\n3rd smallest integer => 4\r\nAnswer = 7 - 4 = 3\r\nQuery 2:\r\n4th greatest integer => -1\r\n5th smallest integer => 10\r\nAnswer = -1 - 10  = -11",
  "tags": [
    "math",
    "sortings"
  ],
  "contestCode": "SRM01",
  "createdAt": {
    "$date": {
      "$numberLong": "1533801848554"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591440623"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b9e6068888c06001ffabf9b"
  },
  "code": "SEPT18D",
  "points": 100,
  "name": "Nishant's Diwali Puzzle",
  "description": "The Festival of Lights is here. Nishant wants to buy a new Lantern this Diwali. He visits your shop and finds that the lanterns are arranged arbitrarily. You inform Nishant that the cost <b>C</b> of the lanterns are <em>directly proportional</em> to their size. Nishant likes puzzles and wants you to solve one.\r\nNishant lists the cost of all the lanterns. He finds that the list has some consecutive sub-sequences of Even Numbers. He wants you to make a new list consisting of the maximum number from each consecutive sub-sequence of even numbers. He expects that you find the minimum number from this new list.\r\nIf you answer it correctly, Nishant will buy the lantern of that cost from your shop. If there are no even sub-sequences, Nishant expects <b>-1</b> as the answer.\r\nSolve Nishant’s puzzle to find the cost of the lantern he will buy.\r\n",
  "explainInput": "The first line of the input is an integer <b>T</b> denoting the number of test cases.\r\nThe next <b>T</b> lines contain a sequence of space-separated integers denoting the cost <b>C</b> of lanterns.",
  "explainOutput": "Output the cost of the lantern Nishant will buy, in a single line.",
  "constraints": "1<=<b>T</b><=100\r\n1<=<b>C</b><=10^5",
  "example": "<b>Input</b>:\r\n3\r\n3 4 6 5 12 6 18 14 9 11 10\r\n2 4 6 8 1 3 5 8 10 7 9 11 12 14 16\r\n1 3 5 7 9\r\n<b>Output</b>:\r\n6\r\n8\r\n-1",
  "explanation": "<b>Case 1</b>:\r\nThe first even sub-sequence is {4, 6}. The maximum value in this sequence is 6. The next even sub-sequence is {12, 6, 18, 14}. The maximum value in this sequence is 18. The next even sub- sequence is {10}. The maximum value in this sequence is 10. Now, the new list of maximum values from each even sub-sequence is {6, 18, 10}. The minimum value in this new list is 6.\r\n<b>Case 2</b>:\r\nThe first even sub-sequence is {2, 4, 6, 8}. The maximum value in this sequence is 8. The next even sub-sequence is {8, 10}. The maximum value in this sequence is 10. The next even sub-sequence is {12, 14, 16}. The maximum value in this sequence is 16.  Now, the new list of maximum values from each even sub-sequence is {8, 10, 16}. The minimum value in this new list is 8.\r\n<b>Case 3</b>:\r\nAs there are no even terms in the sequence, we output -1",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "SEPT18",
  "createdAt": {
    "$date": {
      "$numberLong": "1537086226132"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591364103"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b96a89fe701a900207872a6"
  },
  "code": "SRM03B",
  "points": 200,
  "name": "Predict Shambhavi",
  "description": "It is the time of Cognition and Shambhavi has participated in N events numbered from 1 to N. Each of these events have a particular waiting time ( in minutes ), W(i) ( 1 <= i <= N ) for which Shambhavi has to wait for her turn in that event. However, Shambhavi doesn’t like to wait at a particular place. So she keeps moving from one event location to another, until her turn arrives.\r\n\r\nShambhavi starts visiting the events from the 1st event. \r\nIf Shambhavi is at the location of the ith ( 1 <= i <= N-1 ) event AND W(i) > 0, She will leave instantly and move to the next ( (i+1)th ) event location.\r\nIn case if i=N, she will move back to the 1st event location.\r\nIn case if Shambhavi is at the ith event location and W(i) = 0 , she will take her turn in that event. ( Here, W(i) = 0 indicates that the waiting time is over ).\r\nThe time taken by Shambhavi to move from any event location to another is exactly 1 minute.\r\n\r\nPredict the first event in which Shambhavi will enter.",
  "explainInput": "The first line of the input consists of a single integer T, denoting the number of Test Cases.\r\nThe description of T test cases follow : \r\nThe first line of each test case consists of a single integer N.\r\nThe second line of each test cases consists of N space-separated integers W(i).",
  "explainOutput": "For each test case, output a single line consisting of a single integer, the number of the first event in which Shambhavi will enter.",
  "constraints": "1 <= T <= 100\r\n1 <= N <= 10^5\r\n0 <= W(i) <= 10^9\r\n",
  "example": "Input:\r\n2\r\n4\r\n4 2 1 3\r\n6\r\n7 5 3 4 5 7\r\n\r\nOutput:\r\n3\r\n2",
  "explanation": "Test Case 1 :\r\nInitial timings -> 4 2 1 3\r\nAfter Shambhavi moves from 1 to 2 -> 3 1 0 2\r\nAfter Shambhavi moves from 2 to 3 -> 2 0 0 1\r\nHere as W(i) = 0, Shambhavi enters the 3rd event first.",
  "tags": [
    "dp",
    "math"
  ],
  "contestCode": "SRM03",
  "createdAt": {
    "$date": {
      "$numberLong": "1536580426273"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591399168"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b9e5804c81946001f697c1e"
  },
  "code": "SEPT18A",
  "points": 100,
  "name": "Who Will Break The Handi?",
  "description": "Amit, Bipin and Chetan are enjoying themselves in the festive mood of Janmashtami. They decide that they will participate in the Dahi Handi event organized in their city. However, only one of them can climb atop and break the ‘Handi’. Chetan is afraid of heights and doesn’t wish to climb atop. To help decide who should be the one to break the Handi, Chetan suggests a game of penalty shoot-out. Amit and Bipin will be the strikers and Chetan will be the goalkeeper.\r\nEnergy levels of Amit, Bipin and Chetan are denoted by <b>A</b>, <b>B</b> and <b>C</b> respectively. For every goal scored by Amit and Bipin, their energy decreases by 1. For every goal saved by Chetan, his energy decreases by 1. <em>Amit and Bipin can score goals only if Chetan’s energy is a factor of their energy, otherwise not. The game ends when Chetan’s energy reaches 1.</em>\r\nAssume that same player can repeatedly try for goals. Amit being the junior player is always favored for the penalty kick in case if both of them can score goals at the same time. The player who scores the most goals wins the game and will climb atop to break the Handi.\r\nFind who wins the game.\r\n\r\n",
  "explainInput": "The first line of input contains an input <b>T</b> denoting the number of Test cases.\r\nEach test case contains 3 space-separated integers on the same line denoting the initial energy levels <b>A</b>, <b>B</b> & <b>C</b> respectively.\r\n",
  "explainOutput": "For each Test Case, output who scored the most goals on a single line. Output “<b>Draw</b>” in case of a draw (Without the quotes).",
  "constraints": "1<=<b>T</b><=100\r\n1<=<b>A, B, C</b><=10^5",
  "example": "<b>Input</b>:\r\n2\r\n4 9 5\r\n13 10 7\r\n<b>Output</b>:\r\nA\r\nB",
  "explanation": "<b>Case 1</b>:\r\nEnergy of Chetan is 5, which is not a factor of either 4 or 9. Thus Chetan saved the goal and his energy decreases by 1. Now, Chetan’s energy is 4, which is a factor of Amit’s energy 4. Amit scores a goal and his energy decreases by 1. This goes on until Chetan’s energy reaches 1. At this point, Amit has scored 3 goals and Bipin has scored 2 goals. Amit has won and we output <b>A</b>.",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "SEPT18",
  "createdAt": {
    "$date": {
      "$numberLong": "1537084077219"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591353154"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c5072073027fa002201668a"
  },
  "tags": [
    "math"
  ],
  "code": "SRM08C",
  "points": 250,
  "name": "Mischievous Barath",
  "description": "Its exam time! Barath hates writing exams, and to postpone the exams, Barath has erased roll numbers from all desks! Mithil is happy too! No exams?!\r\nBut, this is SIES, so exams have to happen at any cost.\r\nPrincipal Sir has given Mithil the duty to quickly arrange for an immediate fix for this problem. Also, there are many classrooms, and number of benches in each row is uneven. Hence students find it difficult to find their seat. Can you help Mithil complete this task?\r\n(Only one student sits per bench. The seating fashion is first to last for first row and last to first for alternate rows)",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. Each test case consists of three lines. First line takes N for number of rows. Next line takes N space separated integers A1, A2, A3…  AN for number of benches in each row. Lastly take input for roll number R.",
  "explainOutput": "For each test case, output a single line with two space separated integers, indicating the row and bench number for given roll number.",
  "constraints": "0 < T <= 100  \r\n0 < N <= 10  \r\n0 < Ai <= 20  \r\n0 < R <= ΣAi  ",
  "example": "Input:\r\n2\r\n3\r\n4 4 4\r\n7\r\n5\r\n1 2 3 4 5\r\n9\r\nOutput:\r\n2 2\r\n4 2",
  "explanation": "1)<img src = \"https://i.imgur.com/eTfYKdh.jpg\">\r\n2)<img src = \"https://i.imgur.com/VDG7pyL.jpg\">",
  "contestCode": "SRM08",
  "createdAt": {
    "$date": {
      "$numberLong": "1548756143300"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915894387"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c9b945e6769cb002257bcb5"
  },
  "tags": [
    "graphs"
  ],
  "code": "GBYE19D",
  "points": 100,
  "name": "TE'S And Their Project Groups",
  "description": "<b>Problem Author: Pritam Negi</b>\r\nThird year Engineering students are just about to finish their term of Semester 6. As they are nearing their entry into the final year of Engineering now they have been informed to form their project groups by the end of Semester 6. \r\nNow the students want to include only those students in their project groups whom they have synergy with. Also the condition according to the university norms is that every project group must contain at least 2 members but not more than 4 members. So a project group is considered as valid if it satisfies the above condition. \r\nThe existence of synergy is mutual i.e. if student <b>i</b> has synergy with student <b>j</b> then student <b>j</b> has synergy with student <b>i</b> as well. Also the existence of synergy is transitive. This means that if student <b>i</b> is has synergy with student <b>j</b> AND student <b>j</b> has synergy with student <b>k</b>, then student <b>i</b> and student <b>k</b> will have synergy among each other.\r\nThis complicates the task for the Project Coordinator to determine the number of valid project groups that exist in the whole class. Hence she needs your help. Given the number of students and synergy list help project coordinator determine the number of valid project groups.",
  "explainInput": "The first line of the input contains a single integer <b>T</b>, denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two space-separated integers <b>N</b> and <b>M</b>, denoting the number of students and the number of synergy relations, respectively. Each of the following M lines contains two space-separated integers i and j, denoting student i and student j have synergy among themselves.",
  "explainOutput": "For each test case, output a single line containing two space separated integers, denoting the maximum number of valid project groups that can be formed.",
  "constraints": "1<= T <= 5\r\n1<= N <= 10<sup>5</sup>\r\n1<= M <= 10<sup>5</sup>\r\n1 <= i,j <= N\r\ni ≠ j\r\nFor any pair of student i and j such that 1 ≤ i < j ≤ N, at most one pair among (i, j) and (j, i) will appear in the input.",
  "example": "<b>Input:</b>\r\n2\r\n4 2\r\n1 2 \r\n2 3\r\n6 3\r\n1 2 \r\n3 4\r\n5 6\r\n\r\n<b>Output:</b>\r\n1\r\n3",
  "explanation": "<b>TEST CASE 1:</b> In this case student 1 has synergy with student 2. Student 2 in turn has synergy with student 3. Hence student 1,2,3 can form a project group of 3 members. Student 4 has synergy with no other student hence cannot be considered as a valid  project group. Hence only 1 valid project group exists in this case.\r\n\r\n<b>TEST CASE 2:</b> In this case student 1 has synergy with student 2 so they can form a form a group of 2 members. Same goes for group of students 3, 4 and 5, 6. Hence 3 valid project groups exist in this case.",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553680134750"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915697610"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d3c84697cb1120022007f30"
  },
  "tags": [
    "heap",
    "sortings"
  ],
  "code": "BETA01E",
  "points": 300,
  "name": "XOR Modification",
  "description": "You are given two arrays <b>A</b> & <b>B</b> of length <b>N</b>, \r\nA1 A2… AN &\r\nB1 B2… BN \r\n\r\nYou are supposed to do the following operation <b>N</b> times:\r\nFor the <b>(i)th</b> number of operation:\r\n<ul>\r\n<li>Pick up the current largest element from the array <b>A</b>, let’s call it <b>X</b></li>\r\n<li>Delete <b>X</b> from the array <b>A</b></li>\r\n<li>Insert (<b>X ^ Bi</b>) anywhere in the array <b>A</b> <br> ( where ^ denotes the bitwise XOR operation )</li>\r\n</ul>\r\n\r\nFinally print the final array <b>A</b> in ascending order",
  "explainInput": "The first line of the input consists of a single integer <b>T</b>, denoting the number of test cases.\r\nThe first line of each test case consists of a single integer <b>N</b>\r\nThe next line consists of <b>N</b> space-separated integers A1 A2… AN\r\nThe next line consists of <b>N</b> space-separated integers B1 B2… BN",
  "explainOutput": "For each test case, print a single line consisting of <b>N</b> space-separated integers, denoting the final array <b>A</b> sorted in ascending order.",
  "constraints": "<ul>\r\n<li>1 <= <b>T</b> <= 10</li>\r\n<li>1 <= <b>N</b> <= 10^5</li>\r\n<li>1 <= <b>Ai, Bi</b> <= 10^9</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n6\r\n2 3 5 2 6 5\r\n9 3 6 3 1 3\r\n4\r\n1 2 3 1\r\n2 4 5 5\r\n\r\n\r\n<b>Output:</b>\r\n2 2 3 5 5 11\r\n1 1 1 6\r\n",
  "explanation": "<b>Test Case 2:</b>\r\n\r\n3 ^ 2 -> 1\r\nNew array -> [ 1, 2, 1, 1 ]\r\n\r\n2 ^ 4 -> 6\r\nNew array -> [ 1, 6, 1, 1 ]\r\n\r\n6 ^ 5 -> 3\r\nNew array -> [ 1, 3, 1, 1 ]\r\n\r\n3 ^ 5 -> 6\r\nNew array -> [ 1, 6, 1, 1 ]\r\n\r\nSorted array -> [ 1, 1, 1, 6 ]\r\n",
  "contestCode": "BETA01",
  "createdAt": {
    "$date": {
      "$numberLong": "1564227345704"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591227391"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d46f3ce86031f00223f4ce7"
  },
  "tags": [
    "cakewalk",
    "math"
  ],
  "code": "SRM10A",
  "points": 100,
  "name": "Shiny Calculation",
  "description": "Red catches <b>N </b>pokemons.\r\nWhenever he catches a pokemon he documents it .\r\nIf its a not shiny he writes <b>1</b> and if shiny he writes <b>*</b>.\r\nWrite a code to find the percentage of shiny encounter for Red.\r\n<b>Note</b>: Only print the integer value of the percentage.",
  "explainInput": "The first line consists of a single integer  <b>T</b>,  the number of test cases\r\nThe second line consists of a single integer <b>N</b>, the number of Pokemon caught by Red\r\nThe third line consists of <b>N</b> characters:  1/* depending upon the catch of Red.",
  "explainOutput": "Output\r\nFor each test case, print a single <b>line</b> consisting the shiny percentage followed by “%”\r\n<b>Note:</b>\r\n3.99% will also be considered as 3% and not 4.\r\n",
  "constraints": "<p><ul>\r\n<li>0&ltT&lt=10</li>\r\n<li>0&lt=N&lt10^4</li>\r\n</ul></p>",
  "example": "<b>Input:</b>\r\n3\r\n3\r\n11*\r\n10\r\n1*11111111\r\n3\r\n*1*\r\n\r\n<b>Output:</b>\r\n33%\r\n10%\r\n66%\r\n",
  "explanation": "<b>Test case 3:</b>\r\nThere are 2 shiny Pokemon out of 3.\r\nTherefore it becomes 66.66667%\r\nSince we are supposed to only print the integer value, the answer is 66%\r\n",
  "contestCode": "SRM10",
  "createdAt": {
    "$date": {
      "$numberLong": "1564911222449"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591526331"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c506e743027fa0022016682"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM08B",
  "points": 200,
  "name": "Lecture Bunk",
  "description": "Barath and Mithil have decided to bunk lectures but they always attend first lecture, and when there is only one lecture, basically they can’t bunk. There are ‘p’ no. of lectures happening in college  \r\nand ‘s’ is the time required between two consecutive lectures to bunk the class. Ti  is the time delay, with respect to decided schedule, by teacher to reach the class\r\nand ‘i’ is the lecture number. Now each teacher extends the lecture by time Ti, again with respect to schedule. Now next teacher, if arrived before the previous one left, will wait outside the class till this lecture gets done, and then enter as soon as the previous teacher leaves.",
  "explainInput": "The first line of input contain an integer ‘T’ denoting the number of test cases. Each test case consists of two line. First line consists of two space separated integers, ‘p’ and ‘s’, where ‘p’ is number of lectures and ‘s’ is time required to bunk. Next line has ‘p’ space separated integers, ‘Ti’ indicating ith teacher’s time delay.",
  "explainOutput": "For each test case, print a new line consisting of an integer, which is the lecture number just before which they are able to escape the lecture.If they cannot bunk, print -1.",
  "constraints": "1<=t<=100\r\n1<=p<=20\r\n1<=q<=20\r\n1<=Ti<=20",
  "example": "Input:\r\n1\r\n5 3\r\n1 3 7 8 5\r\nOutput:\r\n3",
  "explanation": "For first lecture teacher came one minute late so he extended by 1 minute. Next teacher entered the class 3 minutes with respect to schedule, so we only got 2 minutes in between (3-1). Next we get 4 minutes and we are able to bunk just before 3rd lecture. Hence print 3.",
  "contestCode": "SRM08",
  "createdAt": {
    "$date": {
      "$numberLong": "1548755228673"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915883546"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d49981887a3d00022372d92"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "SRM10B",
  "points": 200,
  "name": "OH? Something is happening. ",
  "description": "Barath and Mithil are playing Pokemon Go and are currently trying to hatch eggs. They want to find out a way to get rarer Pokemon.\r\nThe more distance the egg takes to hatch the rarer the Pokemon is.\r\nThere are 3 types of eggs in the game: 2Km, 5Km and 10Km eggs.\r\nYou will be given an integer <b>E</b>, denoting the number of eggs they have and the distance required to hatch each egg,<b> D[i].</b>\r\nYou will also be given the number of trips <b>N </b>they took and distance travelled in each trip <b>B[i]</b> by Barath and <b>M[i] </b>by Mithil.\r\n10Km egg has a rarity factor of 10.\r\n5Km egg has a rarity factor of 5. \r\n2km egg has a rarity factor of 2.\r\nThey will incubate the egg with the most rarity factor first and only one egg can be incubated at at time.\r\nAlso they will not incubate an egg with lesser rarity factor when an egg with higher factor exists\r\nYou are supposed to find out who can have the higher rarity factor after <b>N </b>trips, Barath or Mithil.\r\n\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases\r\nThe first line of each test case consists of a single integer <b>E</b>\r\nThe next line consists of <b>E</b> space-separated integers <b>D[i]</b>\r\nThe next line consists of a single integer <b>N</b>, the number of trips Barath and Mithil went for\r\nThe next line will consist of the distances travelled by Barath in his <b>N </b>number of trips <b>B[i]</b>.\r\nThe next line will consist of the distances travelled by Mithil in his <b>N</b> number of trips <b>M[i]</b>.\r\n",
  "explainOutput": "For each test case,\r\nThe first line should have the name of trainer with higher rarity factor or “Draw” if both of them have the same rarity factors\r\nThe second line should have 2 space-separated integers, the rarity factors of Barath and Mithil respectively.\r\n",
  "constraints": "0&ltT&lt=40\r\n0&ltE&lt=10^4\r\nD[i]=2/5/10\r\n0&ltN&lt=10^4\r\n0&ltB[i],M[i]&lt1000.",
  "example": "Input\r\n3\r\n5\r\n2 5 10 5 2 \r\n2 \r\n2 6\r\n4 8\r\n3\r\n2 5 10\r\n2\r\n8 7\r\n6 5\r\n4\r\n10 10 5 5\r\n3\r\n2 2 1\r\n1 1 3\r\nOutput\r\nMithil\r\n0 10\r\nBarath\r\n15 10\r\nDraw\r\n0 0",
  "explanation": "<b>Test Case 1:</b>\r\nTotal distance travelled by barath -> 2 + 6 = 8\r\nSince they won’t hatch any eggs with smaller rarity factor in existence of higher ones, Barath won’t go for the eggs with rarity factors of 5\r\nHence his final rarity factor remains 0\r\n\r\nTotal distance travelled by Mithil -> 4 + 7 = 11\r\nMithil can go for the egg with rarity factor 10\r\nLater he remains with only 1 point ( 11 - 10 ), hence he stops\r\nHence his final rarity factor is 10\r\n",
  "contestCode": "SRM10",
  "createdAt": {
    "$date": {
      "$numberLong": "1565084352734"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591177413"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e2d10a1533c8d0022c770f2"
  },
  "tags": [
    "math"
  ],
  "code": "SRM14A",
  "points": 100,
  "name": "Shadow Clone Jutsu",
  "description": "Spring season is coming soon and so are the festivals in the leaf village. Houses, roads, shops all are being painted. All such missions are ‘D’ ranked missions which have to be given to the genins. So, all the genins of the Leaf village are given such small tasks. Naruto is one of them. He became upset again as the hokage gave him another easy mission.\r\n\r\nHe is given two tasks:-\r\n1. Paint the training ground\r\n2. Plant 100 trees\r\n\r\nHe wants to complete them all as soon as possible. So, he creates shadow clones to divide his work. He starts with the toughest job first which is to paint the training ground.\r\n\r\nThe ground is a square ground. Naruto uses his chakra to create <b>M</b> shadow clones. The shadow clones are given equal squares from the square ground ie the ground is divided into equal sizes of smaller squares. Out of the <b>M</b> shadow clones, only <b>X</b> shadow clones (<b>1<=X<=M</b>) can be given this job since each shadow clone is given equal sizes of squares. \r\n\r\nYou have to help Naruto calculate the maximum number of shadow clones <b>X</b> that can be given the job to paint the ground.\r\n\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nThe first line of each test case contains an integer <b>M</b> denoting the number of shadow clones generated\r\n",
  "explainOutput": "For each test case, output a single line with the integer <b>X</b> which is the maximum number of shadow clones that can be allotted the job to paint the ground.\r\n",
  "constraints": "1<=T<=10^5\r\n1<=M<=10^9\r\n",
  "example": "<b>Input:</b>\r\n2\r\n2\r\n6\r\n\r\n<b>Output:</b>\r\n1\r\n4\r\n\r\n\r\n",
  "explanation": "<b>Test Case 1:</b> <br>\r\nOut of the two shadow clones, only 1 can be given the job to paint the ground since the ground can’t be divided into 2 equal squares.\r\n",
  "contestCode": "SRM14",
  "createdAt": {
    "$date": {
      "$numberLong": "1579991881201"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586382040588"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b6c3fc08cab100020e963b8"
  },
  "code": "SRM01B",
  "points": 200,
  "name": "Scooby Doo Is In Danger",
  "description": "Shaggy and Scooby are in the middle of another magical mystery and apparently Scooby Doo’s life is in danger, he is trapped in a burning house which is locked by a magical door. Shaggy is trying to help Scooby.\r\n\r\nThe door has a word (all alphabets are lowercase) written on it. To open the door, all Shaggy needs to do is to pick some alphabets from that word ( in any order ) and try to form the word “scooby” out of them. \r\n\r\nYour task is to find out if it is possible to save Scooby Doo.",
  "explainInput": "The first line of input contains a single integer T denoting the number of test cases. ( The number of times your program will be tested / The number of questions )\r\nEach test case consists of a single line containing the initial word written on the door.",
  "explainOutput": "Output T lines.\r\nEach of these lines should contain the answer to the corresponding testcase :\r\n“yes” (without quotes, all alphabets are lowercase) if it is possible to save Scooby Doo.\r\n“no”  (without quotes, all alphabets are lowercase) if it is NOT possible to save Scooby Doo.\r\n( see example for clarification )",
  "constraints": "1 <= T <= 50\r\nLength of the input word is greater than or equal to 1 and less than or equal to 100.\r\nAll the alphabets of the input words are of lowercase.",
  "example": "<b>Input:</b>\r\n5\r\nscsobsoybysbo\r\nscoby\r\nyyyzbbbzooozcczssss\r\nscccozzbboooaaalllobbbbb\r\najsosccafsossobsyby\r\n \r\n<b>Output:</b>\r\nyes\r\nno\r\nyes\r\nno\r\nyes",
  "explanation": "The 1st , 3rd the 5th test cases have enough alphabets needed to form “scooby” from them.\r\nTest case 2:\r\nThe  word is missing one more ‘o’, so “scooby” cannot be formed.\r\nTest case 4:\r\nThe word is missing ‘y’, so “scooby” cannot be formed.",
  "tags": [
    "adhoc",
    "strings"
  ],
  "contestCode": "SRM01",
  "createdAt": {
    "$date": {
      "$numberLong": "1533801064580"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591436724"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5bae773afda1fc0021bbf24a"
  },
  "tags": [
    "math"
  ],
  "code": "SRM04A",
  "points": 100,
  "name": "Cibin Challenges Harsh",
  "description": "One fine day, Cibin was challenged by one of his peers to play this virtual game called “Skull Crusher”. Harsh is a gaming addict. He spends most of his time playing games. Cibin and Harsh are close friends. So, Cibin wanted to challenge Harsh to play the game. But since Harsh is a professional gamer, Cibin decided to give him a tougher task.\r\n            \r\nCibin will give him the minimum required points X. He has to get a minimum of X points in order to win the challenge.\r\nIn order to win this game, there will be exactly 5 trials, namely t1, t2, t3, t4, t5. If the sum of the points of these trials is greater than or equal to X, Harsh will win the challenge. Or else, he loses the Challenge. \r\n            \r\nBut since Harsh is passionate towards gaming, he wants to know the minimum points he will need to score in order to pass the given points X. \r\n \r\nThe minimum extra points that has to be scored in order to get the overall score equal to X are M. M are the extra points he needs to increase in the highest score of that attempt. \r\n",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. Each test case consists of two lines.  \r\nThe first line of each test case consists of a single integer X.\r\nThe second line of each test case consists of five space-separated integers t1 t2 t3 t4 t5 denoting the score of each trial.\r\n",
  "explainOutput": "For each test case, output the answer in one single line.\r\nIf the total score is strictly less than X, output M, which is the required additional score in the total score in order to win the challenge. \r\nOr else output “Harsh Wins” (without quotation mark).\r\n",
  "constraints": "1 <= T <= 100   \r\n1 <= X <= 10^5 \r\n-10^5 <= t1, t2, t3, t4, t5 <= 10^5\r\n",
  "example": "Input: \r\n2\r\n35\r\n-1 -2 4 6 7                \r\n2 \r\n2 5 7 1 7\r\n\r\nOutput: \r\n21 \r\nHarsh Wins\r\n",
  "explanation": "Test case 1 :\r\nTotal score is 14 < 35. So, in order to get minimum score(35), we need to add 21.\r\n  \r\n",
  "contestCode": "SRM04",
  "createdAt": {
    "$date": {
      "$numberLong": "1538140642425"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926638062"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5bae7e94fda1fc0021bbf24c"
  },
  "tags": [
    "binary search"
  ],
  "code": "SRM04C",
  "points": 300,
  "name": "Ghost Game",
  "description": "Aman is playing a computer game in which, he is inside a haunted building consisting of N floors.\r\n\r\nIn order to win the game, he is supposed to reach to the top of the building with the help of the staircases. But while climbing the staircases, everytime he hears a ghost scream, he is supposed to run to the closest floor to him from his current position at that time. In case if both the lower and the upper floors are at an equal distance from him, he dies and the game ends.\r\n\r\nAman knows the number of stairs between each two floors and the total number of stairs he has climbed so far before hearing the ghost scream.\r\nHelp him to find the closest floor to him or determine whether the game ends.\r\n\r\n",
  "explainInput": "The first line of the input consists of a single integer T denoting the number of test cases.\r\nThe description of T test cases follow :\r\n\r\nThe first line of each test case consists of a single integer N denoting the number of floors.\r\n\r\nThe second line of each test case consists of N space-separated integers. \r\nThe ith ( 1 <= i <= N ) of these integers represent the number of stairs between the (i-1)th and the ith floor. \r\n( 0th floor represents the ground floor )\r\n\r\nThe third line of each test cases consists of a single integer Q denoting the number of queries. \r\nQ lines follow :\r\nEach of these lines consists of a single integer S denoting the total number of stairs Aman has climbed so far before hearing the ghost scream.\r\n\r\n\r\n",
  "explainOutput": "For each test case, Output Q lines.\r\nEach of these Q lines should consist of the answer to the corresponding query, which is the closest floor number.\r\nIn case if both the lower and the upper floors are at an equal distance from Aman, print “game over” in a single line. \r\n\r\n",
  "constraints": "1 <= T <= 5\r\n1 <= N <= 10^6\r\n1 <= Q <= 10^5\r\n1 <= Number of stairs between each two floors <= 10^9\r\n1 <= S <= Total number of stairs in the building <= 10^14\r\n",
  "example": "Input:\r\n1\r\n4\r\n2 6 3 4\r\n3\r\n5\r\n10\r\n6\r\n\r\nOutput:\r\n1\r\ngame over\r\n2\r\n",
  "explanation": "Test Case 1 :\r\nThe building has 4 floors.\r\nNo. of stairs between 0th and 1st floor -> 2\r\nNo. of stairs between 1st and 2nd floor -> 6\r\nNo. of stairs between 2nd and 3rd floor -> 3\r\nNo. of stairs between 3rd and 4th floor -> 4\r\n\r\nNumber of Queries - 3\r\nQuery - 1 :\r\nS = 5\r\nTherefore, Aman is on the 3rd step between 1st and 2nd floor.\r\nSo he is closest to 1st floor.\r\nQuery - 2 :\r\nS = 10\r\nTherefore, Aman is on the 2nd step between 2nd and 3rd floor.\r\nSo he is equally distant from both the floors, hence game ends.\r\nQuery - 3 :\r\nS = 6\r\nTherefore, Aman is on the 4th step between 1st and 2nd floor.\r\nSo he is closest to 2nd floor.\r\n\r\n\r\n",
  "contestCode": "SRM04",
  "createdAt": {
    "$date": {
      "$numberLong": "1538142529838"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926775073"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c2c5c6cec9f5000224eef12"
  },
  "tags": [
    "adhoc",
    "strings"
  ],
  "code": "SRM05B",
  "points": 200,
  "name": "Cibin is confused between IPv4 and IPv6",
  "description": "Its the subject Computer Networks and Cibin is confused between Ipv4 and Ipv6 addresses. His teacher solved his doubts and taught him about both.\r\n\r\nFollowing were the points his teacher covered about Ipv4 addresses:\r\n    • An  IPv4 address has the following format: x . x . x . x where x  is called an octet  and must be a decimal value between 0 and 255. Octets are separated by periods. An IPv4 address must contain three periods and four octets.\r\n    • No period should start with 0 unless the period has single digit.\r\n    • The following examples are valid Ipv4 Addresses:\r\n192.168.0.1\r\n10.0.0.5\r\n1.2.3.4\r\n\r\nFollowing were the points his teacher covered about Ipv6 addresses:\r\n    • In IPv6, addresses are expressed as a series of eight 4-character hexadecimal numbers, which represent 16 bits each (for a total of 128 bits).\r\n    • Leading zeroes MUST be suppressed. For example, 1:08:1:2:3:01:ab:5 is not acceptable and must be represented as  1:8:1:2:3:1:ab:5\r\n    • The characters \"a\", \"b\", \"c\", \"d\", \"e\", and \"f\" in an IPv6 address MUST be represented in lowercase.\r\n    • The following examples are valid Ipv6 Addresses:\r\n3:ed2:5c0:d0ab:ef:9:2:f\r\n2001:db8:0:1:1:1:1:1\r\nNow, his teacher wants to check how much Cibin learnt from his efforts by taking a short assessment test.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of one line, which contains a string of address.",
  "explainOutput": "For each test case, output a single line output as ipv4 / ipv6 / invalid.",
  "constraints": "1 <= T <= 100",
  "example": "Input:\r\n4\r\n192.168.43.75\r\n2001:DB8:0111:2:1:1:1001:2008\r\n2001:db8:1234:5678:2:1:56:45\r\n192.168.AB.CD\r\n\r\nOutput:\r\nipv4\r\ninvalid\r\nipv6\r\ninvalid",
  "explanation": "In test case 1, the address is a valid IPv4 address.\r\nIn test case 2, capital letters are used and 0 is not suppressed which makes it invalid IPv6 address.\r\nIn test case 3, the address is a valid IPv6 address.\r\nIn test case 4, the address is not a valid IPv4 address due to the usage of alphabets.",
  "contestCode": "SRM05",
  "createdAt": {
    "$date": {
      "$numberLong": "1546391316376"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591286366"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b9e5d0dc81946001f697c20"
  },
  "code": "SEPT18C",
  "points": 100,
  "name": "Vishal's Journey",
  "description": "Vishal wants to visit his native place in Ratnagiri to celebrate the festival of Ganesh Chaturthi. He wants to book a railway ticket to Ratnagiri, but found that the queue at the railway stations are too long. He decided that he will book the tickets online. However, he has to register himself first.\r\nVishal needs a strong password to help finish his registration process. But, the online portal has certain conditions for validating the password. <em>The password is accepted as valid only if it follows the following set of rules</em>:\r\na. The length of the password should be between <b>8</b> & <b>20</b>, both inclusive\r\nb. The password should have at least <b>one lowercase character</b> (a-z)\r\nc. The password should have at least <b>one uppercase character</b> (A-Z)\r\nd. The password should have at least <b>one number</b> (0-9)\r\ne. The password should <b>not</b> start with a number\r\nHelp Vishal find out if his password is valid or not. Assume that <b>NO</b> special characters are used.\r\nOutput “<b>Valid</b>” if the password is valid and “<b>Invalid</b>” if it is invalid. (Do not print the quotes)",
  "explainInput": "The first line of the input is an integer <b>T</b>, denoting the number of test cases\r\nThe next <b>T</b> lines contain a string, denoting Vishal’s password.",
  "explainOutput": "<b>T</b> lines of output stating whether the given password is <b>Valid</b> or <b>Invalid</b>.",
  "constraints": "1<=<b>T</b><=100\r\n1<=<b>String length</b><=50",
  "example": "<b>Input</b>:\r\n4\r\nWelcome123\r\n123Welcome\r\nwelcome123\r\nWelc1\r\n<b>Output</b>:\r\nValid\r\nInvalid\r\nInvalid\r\nInvalid",
  "explanation": "<b>Case 1</b>:\r\nAll the conditions for the password are satisfied. Hence, it is Valid.\r\n<b>Case 2</b>:\r\nThe password starts with a number. Hence, it is Invalid.\r\n<b>Case 3</b>:\r\nThe password doesn’t contain an uppercase character. Hence, it is Invalid.\r\n<b>Case 4</b>:\r\nThe length of the password is less than 8. Hence, it is invalid.",
  "tags": [
    "strings"
  ],
  "contestCode": "SEPT18",
  "createdAt": {
    "$date": {
      "$numberLong": "1537085365715"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926827500"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c7abbd75dfcc900221e1119"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM09A",
  "points": 100,
  "name": "Grenade Matrix",
  "description": "A team of players is stuck in a building, and grenades are being thrown into the building. Hence, a matrix of size MxN is formed, with players, grenades and empty spots where the grenades are denoted by “G”, the players are denoted by “P”, and empty spots denoted by “*”. The player will die if there is a grenade in any of the 8 blocks surrounding the player. Count the number of players that survive the grenade attacks.",
  "explainInput": "The first line contains X number of test cases.\r\nThe second line contains M and N, number of columns and rows respectively.\r\nThe next N lines contains M non-spaced characters to form the matrix.",
  "explainOutput": "X lines contains number of players that survive.",
  "constraints": "1 <= X <= 1000\r\n1 <= M < N <= 1000",
  "example": "Input: \r\n1\r\n10 11\r\n<img src = \"https://i.imgur.com/IAGTqnt_d.jpg\">\r\n\r\n\r\nOutput:\r\n4",
  "explanation": "There are a total of 8 players, out of which 4 have grenades in adjacent blocks. Hence 4 players survive the blast.",
  "contestCode": "SRM09",
  "createdAt": {
    "$date": {
      "$numberLong": "1551527551899"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1577140175884"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c98edc316c4b60022cd52f1"
  },
  "tags": [
    "adhoc",
    "strings"
  ],
  "code": "GBYE19G",
  "points": 100,
  "name": "The Chat Pattern",
  "description": "<b>Problem Author: Vipul Raghuvanshi</b>\r\nIts the final year of engineering, Vipul and Yash are best friends since FE. They have a peculiar texting pattern when they chat during some exciting talks. The pattern is all the words should start with uppercase character and also ends with uppercase character following the rule of alternate uppercase and lowercase characters. In case of even word length, the two characters at the centre can have same case (uppercase / lowercase). Yash is thinking of some algorithm to convert all his text messages in the required pattern. Help Yash to write a program for this problem.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of one line, which contains a string S which denotes a text of N words with L characters each.",
  "explainOutput": "For each test case, output a single line which contains the text following pattern.",
  "constraints": "T <= 100\r\n3 <= N <= 100\r\n3 <= L <= 60 ",
  "example": "<b>Input:</b>\r\n2\r\nBohot Hard\r\nBohot Zyaada Hard\r\n\r\n<b>Output:</b>\r\nBoHoT HarD\r\nBoHoT ZyAAdA HarD",
  "explanation": "Both the output strings are following the required pattern.",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553506411266"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915774477"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c98f64b16c4b60022cd52f3"
  },
  "tags": [
    "adhoc",
    "math"
  ],
  "code": "GBYE19F",
  "points": 100,
  "name": "TML Events",
  "description": "<b>Problem Author: Shridhar Ravi</b>\r\nTML is around the corner and GSTians are excited about it. Omkar has been chosen as the Fest Coordinator this year. He has introduced a new system of participating in the events this TML. \r\nThere are <b>N</b> different events with some entry fees. With this new system of his, students can buy an <i>Entry card</i> worth Rs. <b>K</b>. But, this card is non-rechargeable and can be used exactly for 2 events, such that the entry fees of both the events are not greater than Rs. <b>K</b>. \r\nOmkar has listed all the events and their entry fees and has <b>Q</b> queries. He has specified a range of events, from <b>L</b> to <b>R</b> (both <b>L</b> and <b>R</b> inclusive). He needs your help to know how many different combinations of events a student can participate in the specified range for a card worth Rs. <b>K</b>. ",
  "explainInput": "The first line of the input contains two space-separated integers <b>N</b> and <b>Q</b>, denoting the number of events and the number of queries respectively.\r\nThe next line contains <b>N</b> space-separated integers denoting the entry fees of each event.\r\nThe next <b>Q</b> lines contain 3 space-separated integers <b>L</b>, <b>R</b>, and <b>K</b> denoting the range and worth of the entry card respectively.",
  "explainOutput": "For each query <b>Q</b>, output the integer denoting the different combinations of events possible.",
  "constraints": "1 ≤ N ≤ 10^3\r\n1 ≤ Q ≤ 10^3\r\n1 ≤ L ≤ R ≤ N \r\n1 ≤ Entry fee ≤ 10^3\r\n1 ≤ K ≤ 2*(10^3)",
  "example": "<b>Input</b>:\r\n7 3\r\n5 1 2 3 2 3 1\r\n1 4 3\r\n1 5 4\r\n2 7 3\r\n<b>Output</b>:\r\n1\r\n4\r\n5",
  "explanation": "For the 1st query, there is only one combination possible in the given range:\r\n2nd event (Fee: 1) + 3rd Event (Fee: 2)=3\r\n\r\nFor the 2nd query, there are 4 combinations possible in the given range:\r\n2nd event (Fee: 1) + 3rd Event (Fee: 2)=3 (which is less than card’s worth K=4)\r\n2nd event (Fee: 1) + 4th Event (Fee: 3)=4\r\n2nd event (Fee: 1) + 5th Event (Fee: 2)=3 (which is less than card’s worth K=4)\r\n3rd event (Fee: 2) + 5th Event (Fee: 2)=4",
  "contestCode": "GBYE19",
  "createdAt": {
    "$date": {
      "$numberLong": "1553508595525"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553920477509"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d61680dec3cc6002207e876"
  },
  "tags": [
    "math",
    "strings"
  ],
  "code": "SRM11B",
  "points": 100,
  "name": "Jagga plays TT",
  "description": "Jagadish is playing Table Tennis for the first time at our Indoor Play Area and he is interested to play this game but doesn’t know the game rules/basics. So, you’re assigned to be the assistant of Jagadish to let him know his score and status. \r\n\r\nIf Opponent does <b>incorrect service / strikes ball twice / fail to return</b>, Jagadish will get <b>+1 / 2 / 3</b>  points, <b>respectively</b>. \r\nJagadish is new to the game, so he is prone to failed services. \r\nAfter every <b>three</b> failed services, he will get a <b>foul</b> and will <b>lose all his points</b>.\r\nEvery game lasts for <b>N</b> rounds from Jagadish and his opponent.\r\n\r\n<b>Note:</b> For Every Foul by Jagadish, his score is reset to 0 and his number of failed services is also reset to 0.",
  "explainInput": "First Line of Input contain an integer <b>T</b> denoting the number of test cases.\r\nEach Test Case contains:\r\nFirst line would be <b>N</b> -> the length of string\r\nSecond line would be a string of letters where:\r\n<b>O</b> denotes Incorrect Service by opponent\r\n<b>B</b> denotes Ball striking twice by opponent\r\n<b>F</b> denotes Failed return by opponent\r\n<b>S</b> denotes Failed Service by Jagadish",
  "explainOutput": "For each test case, output a <b>single line</b> with the <b>final score</b> of Jagadish",
  "constraints": "1 &le; <b>TestCases</b> &le; 100\r\n1 &le; <b>N</b> &le; 50\r\n",
  "example": "<b>Input:</b>\r\n2\r\n11\r\nOFSBSOFFBBS\r\n8\r\nSBSSFOBS\r\n<b>Output:</b>\r\n0\r\n6\r\n",
  "explanation": "In the <b>first case</b>, Jagadish scores +17 from (2 O’s, 3 B’s, 3 F’s) but the count of S becomes 3 at the end of string , so his score is 0. \r\n\r\nIn the <b>second case</b>, Jagadish scores from (2 B’s, 1 O’s ,1 F’s) but after completion of 3 S’s, he scored FOBS(3+1+2) = 6 points\r\nScore is calculated as: (Number of O * 1) + (Number of B * 2) + (Number of F * 3) which will be equal to zero when Count of S turns to 3. When Count of S becomes 4, Count of S becomes 1 ( as it is reset to 0 after 3 failed services ) and Final Score of Jagadish is 6.\r\n",
  "contestCode": "SRM11",
  "createdAt": {
    "$date": {
      "$numberLong": "1566644917828"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1566699262866"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b72e7f9750b6100209d9f12"
  },
  "code": "SRM02A",
  "points": 100,
  "name": "Pritam Loves Discount",
  "description": "Pritam lives in a ghostly town named Lodha Heaven (not that he wishes to live there). He travels through bus to another cities that he wishes to explore. Bus fare for any location is any positive integer R but if Pritam books ticket for the round trip from the same bus then he receives 10% discount on the total incurred bus fare.\r\nPritam always seeks to save some money through his bus trips so that he can buy BTS Official Album DVD’s. As Pritam is busy planning his future bus trips, he needs your help.\r\nYour task is to find the minimum amount of bus fare Pritam will have to pay on a complete trip given the bus fare for one side journey for that trip.",
  "explainInput": "The first line of input contain an integer <b>T</b> denoting the number of test cases. Each test case consists of one line, which contains the integers <b>R</b> - the price for one side of the trip.\r\n",
  "explainOutput": "For each test case, output a single line with the integer which is minimum amount of money Pritam will incur as bus fare on a particular trip. Your answer will be considered correct if it has an absolute error less than 10<sup>-2</sup>.",
  "constraints": "1 <= T <= 10<sup>5</sup>\r\n10 <= R <= 10<sup>16</sup>\r\n",
  "example": "<b>Input:</b>\r\n2\r\n25\r\n20\r\n\r\n<b>Output:</b>\r\n45.00\r\n36.00\r\n",
  "explanation": "Test case 1: Total cost for the first trip is Rs 50. After applying 10% discount  on total price, Pritam gets Rs 5 off. So total cost of complete trip is 50 - 5 = Rs 45.00\r\n\t\r\nTest Case 2: Total cost for the first trip is Rs 40 . After applying 10% discount on total price, Pritam gets Rs 4 off. So total cost of complete trip is 40 - 4 = Rs 36.00",
  "tags": [
    "math"
  ],
  "contestCode": "SRM02",
  "createdAt": {
    "$date": {
      "$numberLong": "1534237345893"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1541926323411"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b96a51f9808fa0020a42972"
  },
  "code": "SRM03A",
  "points": 100,
  "name": "Convincing Rahul",
  "description": "Suriya is the head of an event in Cognition and he is convincing Rahul to participate in the event.\r\nBut as we all know, Rahul is very good at ignoring events. He wishes to sleep for 3 days instead of visiting the college during Cognition. But as Suriya is his friend, Rahul would participate only if Suriya solves the following puzzle.\r\n\r\nRahul has given 3 numbers A, B and C. Suriya is supposed to insert two operators between them in order to form an expression. Let the value of this expression be Y.\r\ni.e. A ( operator 1 ) B ( operator 2 ) C  =  Y\r\nThese operators can only either be addition ( + ) or multiplication ( * ).\r\nSuriya has freedom to insert any operator wherever he wishes. He is also allowed to insert the same operator twice.\r\n\r\nIn order to solve the puzzle Suriya has to find the maximum possible value of Y.\r\nHelp Suriya in solving the puzzle.\r\n\r\n( NOTE : In case where both the operators are used, use BODMAS to calculate the value of Y. i.e. Multiplication should be performed before addition. )\r\n            ",
  "explainInput": "The first line of the input consists of a single integer T, denoting the number of Test Cases. \r\nEach test case consists of a single line containing 3 space-separated integers A B and C.",
  "explainOutput": "For each test case, output a single line consisting of a single integer, the maximum possible value of Y.",
  "constraints": "1 <= T <= 1000\r\n0 <= A, B, C <= 1000",
  "example": "Input:\r\n2\r\n2 2 3\r\n3 2 4\r\n\r\nOutput:\r\n12\r\n24",
  "explanation": "Test Case 1 :\r\nThe maximum value of Y can be obtained by the following equation :\r\n2 * 2 * 3 = 12",
  "tags": [
    "adhoc",
    "math"
  ],
  "contestCode": "SRM03",
  "createdAt": {
    "$date": {
      "$numberLong": "1536579527926"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591393963"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d7a635db112e300220a44d2"
  },
  "tags": [
    "adhoc",
    "strings"
  ],
  "code": "SRM12C",
  "points": 200,
  "name": "Stage 3: Eames’ dream",
  "description": "Cobb, Eames, Ariadne, Saito and Fischer have reached the final stage of the espionage. All they gotta do is infiltrate the fortified hospital, and find Robert Fischer’s father. \r\n\r\nThe team’s fighting off the projections, providing a cover for Fischer, who’s en route to find his father inside the hospital. He finally finds the safe room where his father is waiting for him. Fischer cannot enter the safe room as it is guarded by a security question which reads as follows:\r\n\r\nGiven a string <strong>S</strong> of length <strong>N</strong>, comprising of only 0’s and 1’s, find:\r\n<ul> \r\n<li>the maximum number of 0’s that can be flipped to a 1, such that no two 1’s are adjacent in the string.</il>\r\n<li>the string <strong>S’</strong>, after flipping the bits as mentioned above. If there is a possibility of flipping either of the 0’s (while the maximum number of flips remain the same), flip the 0 that occurs first in the input string <strong>(refer case 4 for better understanding)</strong>.</li>\r\n</ul>\r\n\r\nTime is ticking away.  Help Fischer meet his father to complete espionage successfully. \r\n",
  "explainInput": "The first line of input contains an integer <strong>T</strong> denoting the number of test cases. \r\nThe first line of each test case contains a single integer <strong>N</strong>.\r\nThe next line contains a single string <strong>S</strong> with length <strong>N</strong>. It is guaranteed that the given string <strong>S</strong> does not have adjacent 1’s. ",
  "explainOutput": "For each test case, print two lines: the first line containing one integer - the maximum number of flips and second line containing the string <strong>S’</strong>.",
  "constraints": "1 &le; T &le; 1000\r\n1 &le; N &le; 10<sup>3</sup> ",
  "example": "<strong>Input:</strong>\r\n4\r\n6\r\n010001\r\n11\r\n00101010000\r\n3\r\n000\r\n6\r\n100001\r\n\r\n<strong>Output:</strong>\r\n1\r\n010101\r\n3\r\n10101010101\r\n2\r\n101\r\n1\r\n101001\r\n",
  "explanation": "Case 1:\r\nHere, only the 0 present in the 4<sup>th</sup> position can be flipped. Hence, maximum number of flips that can be made is equal to 1. The given string after the flip becomes: 010101.\r\n\r\nCase 2:\r\nHere, the 0’s present in the 1<sup>st</sup>, 9<sup>th</sup> and 11<sup>th</sup> position can be flipped. Hence, maximum number of flips that can be made = 3. The given string after the flips becomes: 10101010101.    \r\n\r\nCase 3:\r\nHere, the 0’s present in the 1<sup>st</sup> and 3<sup>rd</sup> position can be flipped. Hence, maximum number of flips that can be made = 2. The given string after the flips becomes: 101.    \r\n\r\nCase 4:\r\nHere, the 0 present in either the 3<sup>rd</sup> or 4<sup>th</sup> position can be flipped. Hence, maximum number of flips that can be made = 1. The given string after the flips becomes: 101001 as the first possible 0 is flipped.   ",
  "contestCode": "SRM12",
  "createdAt": {
    "$date": {
      "$numberLong": "1568282117921"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1568282117921"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e8065b799770c00221d371a"
  },
  "tags": [
    "strings"
  ],
  "code": "SRM16A",
  "points": 100,
  "name": "Go Corona, Corona Go",
  "description": "Since the lockdown, Mithil has been coding just to end his boredom. Mithil who is also a pro gamer, thinks to play a Game and put away coding for some time. So today, the game he’s playing is about Spoidy. Spoidy is initially at a location <b>c=0</b>.\r\nMithil can press D and U:\r\n '<b>D</b>' moves character down, setting his position to <b>c − 1</b>\r\n '<b>U</b>' moves character up, setting his position to <b>c + 1</b>\r\n\r\nBut Mithil's controller is a bit old, it crashes at some instances. Sometimes few of the button presses are <b>ignored</b> and there is <b>no change</b> in Spoidy’s position. \r\nFor example, if Mithil sends instructions \"<b>UUD</b>\", it might be interpreted as any of the following:\r\n\r\n<b>UUD, UU, U, D, UD</b>\r\n\r\nMithil is unaware of which instructions will be sent successfully beforehand. Thus, he wants to know how many <b>different</b> locations may Spoidy end up at.\r\n\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. The first and only line of each test case contains a string <b>S</b> of <b>N</b> commands, each either '<b>D</b>' or '<b>U</b>'.",
  "explainOutput": "For each test case, print a single line consisting of <b>one integer</b> denoting the number of different locations Spoidy may end up at.",
  "constraints": "1<= <b>T</b> <=100\r\n1<= <b>N</b> <= 10<sup>5</sup>\r\n",
  "example": "Input:\r\n2\r\nUUD\r\nDUDU\r\nOutput:\r\n4\r\n5\r\n",
  "explanation": "Test Case 1:\r\n<b>UUD</b> = 0+1+1-1 = 1\r\n<b>UU</b> = 0+1+1 = 2\r\n<b>U</b> = 0+1 = 1\r\n<b>D</b> = 0-1 = -1\r\n<b>UD</b> = 0+1-1 = 0\r\nSpoidy may end up anywhere between <b>-1,0,1,2</b>. Hence <b>4</b> unique locations.\r\n",
  "contestCode": "SRM16",
  "createdAt": {
    "$date": {
      "$numberLong": "1585453151144"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591135406"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b96a9e0e701a900207872a7"
  },
  "code": "SRM03C",
  "points": 250,
  "name": "Help Shweta to win The Matrix",
  "description": "The Finals of the Cognition Matrix are started . Shweta being a clever girl, has solved all the questions of the finals. Hence, she requested for a bonus question.\r\n\r\nThe event head of The Matrix, Aditya Parthasarathy is very creative. He has given a string to Shweta ( all alphabets are lowercase ). \r\nLet us call a string ( length greater than or equal to 2 ) to be “alpha-ordered” if it consists of alphabets in the standard continuous alphabetical order. For e.g. abcd, jklmno, fg.\r\n\r\nFrom the given string, Shweta is supposed to find and delete all such alpha-ordered substrings.\r\nWhile solving this question, if Shweta spots 2 or more than 2 such substrings at the same time, she should delete the leftmost substring first, and then look for any other substrings to be deleted. \r\nThe final answer should not consist of any alpha-ordered substring. \r\n\r\nBut as we all know, Shweta loves to get her work done from others. So she has requested you to help her to win The Matrix. ",
  "explainInput": "The first line of the input consists of a single integer N, denoting the number of strings given by Aditya.\r\nN lines follow :\r\nEach of these lines consists of a single string given by Aditya.",
  "explainOutput": "For each of the ith given string ( 1 <= i <= N ), output the final answer ( final string ), to the corresponding given string in one single line. ",
  "constraints": "1 <= N <= 100\r\n1 <= Input string length <= 1000\r\n( All input alphabets are lowercase )",
  "example": "Input:\r\n3\r\nhiauvz\r\nabcd\r\nababcdc\r\n\r\nOutput:\r\naz\r\n\r\nc",
  "explanation": "Test Case 2 :\r\nAs the whole string is alpha-ordered, the answer is an empty string\r\n\r\nTest Case 3 :\r\nString after deleting “ab” ->     abcdc\r\nString after deleting “abcd” ->     c\r\nFinal Answer ->     c",
  "tags": [
    "adhoc",
    "strings"
  ],
  "contestCode": "SRM03",
  "createdAt": {
    "$date": {
      "$numberLong": "1536580745322"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591405306"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c2cd2eee3e5da002279017e"
  },
  "tags": [
    "adhoc",
    "strings"
  ],
  "code": "SRM06A",
  "points": 100,
  "name": "Fifteen Million Merits",
  "description": "In the near future, most of the society must cycle on exercise bikes in order to earn currency called <b>Merits</b>. Bing is an aspiring dancer, who wishes to be featured on the show <b>Hot Shot</b>, a reality contest where winners are able to forgo the bike riding and live luxuriously. The entry fee for it is <b>M</b> Merits.\r\n\r\nEach session of cycling, (denoted by <b>C</b>) earns Bing <em>2000</em> Merits. Every time he rests (denoted by <b>R</b>), he loses <em>500</em> Merits. To keep him energized throughout his journey, he has to spend <em>200</em> Merits on food (denoted by <b>F</b>). \r\n\r\nBing initially has <em>0 Merits</em> with him. Merits shall be deducted (as mentioned above) even if there’s no credit spare (<em>negative credits</em>).\r\n \r\nYou are given a string describing Bing’s routine (denoted by <b>S</b>). Can he make it to <b>Hot Shot</b>?",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. \r\nEach test case consists of two lines; the first line is a string <b>S</b> and the next line contains an integer <b>M</b>.  ",
  "explainOutput": "For each test case, output a single line with the string <b>yes</b> or <b>no</b>.",
  "constraints": "1 &le; T &le; 100\r\n0 &le; M &le; 10<sup>6</sup>\r\n",
  "example": "Input:\r\n3\r\nCCCFCRR\r\n5000\r\nCCFFFRRRC\r\n10000\r\nRRFFFFFC\r\n30000\r\n\r\nOutput:\r\nyes\r\nno\r\nno\r\n",
  "explanation": "Case 1:\r\nHere, the total amount of merits left with Bing, after the deductions, is 6800, which is greater than the entry fee M. \r\n\r\nCase 2:\r\nHere, the total amount of merits left with Bing, after deductions, is 3900, which is lesser than the entry fee M.\r\n\r\nCase 3:\r\nHere, the total amount of merits left with Bing, after deductions, is -1000, which is lesser than the entry fee M.",
  "contestCode": "SRM06",
  "createdAt": {
    "$date": {
      "$numberLong": "1546421654630"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1547280044659"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c4ae2fd91b74800225c106e"
  },
  "tags": [
    "math"
  ],
  "code": "SRM07B",
  "points": 200,
  "name": "Nap, hack, repeat.",
  "description": "Venky, Sarthak and Sanoop have decided to participate in ByteCamp2019. They have to finish their hack within the time limit of 24 hours. As working continuously may tire them, they decided that at any given time one of them would take nap while other two will work. \r\nSo they have come up with list of timestamps and the name of person who would start napping. Venky, Sarthak and Sanoop can finish the entire work individually by X1, X2 and X3 hours respectively. Help them decide if they can complete their hack within 24 hours from start. Assume hackathon to start at 00:00 and that same person may nap again.",
  "explainInput": "The first line of input contain an integer <b>T</b> denoting the number of test cases. \r\nFirst line of each test case contains <b>N</b> denoting number of timestamps.\r\nIt is followed by a line containing 3 space separated integers <b>X1,X2</b> and <b>X3</b>.\r\nNext N lines of each test case contain time stamp(properly ordered) and name separated by space.\r\nTime stamp is in HH:MM  (24hours) format.",
  "explainOutput": "For each test case, output a single line with:\r\n“Successful Hack”(without quotes) if the list is feasible.\r\n“Oopsie Dopsie”(without quotes) for all other conditions.",
  "constraints": "0 < T < 101\r\n\r\n0 < N < 21\r\n\r\n0 < X1,X2,X3 < 1000",
  "example": "Input:\r\n2\r\n4\r\n310 409 560\r\n00:00 Sanoop\r\n04:25 Venky\r\n13:36 Venky\r\n19:08 Sarthak\r\n4\r\n24 28 20\r\n00:00 Sarthak\r\n02:00 Venky\r\n15:40 Sarthak\r\n23:08 Sanoop\r\n\r\nOutput:\r\nOopsie Dopsie\r\nSuccessful Hack",
  "explanation": "Test Case 1:\r\nThey are not able to complete 100% of the work.\r\n\r\nTest Case 2:\r\nThey can complete their work within 24hrs.",
  "contestCode": "SRM07",
  "createdAt": {
    "$date": {
      "$numberLong": "1548391845922"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915919687"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5d7a604bb112e300220a44d1"
  },
  "tags": [
    "adhoc",
    "dp"
  ],
  "code": "SRM12B",
  "points": 300,
  "name": "Stage 2: Arthur’s dream",
  "description": "Yusuf remains on the first level driving a van through the streets, while the remaining team successfully enter stage 2; Arthur's dream, taking place in a corporate hotel.\r\n\r\nThe remainder of the team is sedated, while Arthur is bestowed with the responsibility of setting up the ‘kick’. A ‘kick’ is a sudden jolt that awakens the sleeper from the dream. The ‘kick’ in this stage is a set of bombs that need to detonate in synchronization. \r\n\r\nThere are <strong>N</strong> bomb-sites, each having a detonation-value, i.e., amount of damage done when a bomb is placed at that particular site. Arthur’s objective is to place the bombs in a permutation, such that the overall detonation-value is maximized. However, placing two bombs adjacent to each other shall result in an unsynchronized detonation, which should be avoided at all costs.\r\n\r\nShoot! The projections are firing at the team. Can you help Arthur in setting up the bombs and maximizing the detonation-value,  while he takes care of the projections?\r\n",
  "explainInput": "The first line of input contains an integer <strong>T</strong> denoting the number of test cases. \r\nEach test case consists of two lines; the first line contains the number of bomb-sites <strong>N</strong>, and the next line contains a series of detonation-values (<strong>a<sub>i</sub></strong>) of the bomb-sites.",
  "explainOutput": "For each test case, output a single line with the maximum possible detonation value.",
  "constraints": "1 &le; T &le; 100\r\n1 &le; N &le; 10<sup>3</sup>\r\n0 &le; a<sub>i</sub> &le; 10<sup>3</sup>",
  "example": "<strong>Input:</strong>\r\n2\r\n6\r\n1 5 10 100 10 5\r\n4\r\n12 9 7 33\r\n\r\n<strong>Output:</strong>\r\n110\r\n45\r\n",
  "explanation": "Case 1:\r\nHere, by adding a[1] + a[3] + a[5] we get the maximum detonation-value as 110.\r\n\r\nCase 2:\r\nHere, by adding a[0] + a[3] we get the maximum detonation-value as 45.\r\n",
  "contestCode": "SRM12",
  "createdAt": {
    "$date": {
      "$numberLong": "1568281331975"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586590968994"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e6cb4e245fd530022f5ad68"
  },
  "tags": [
    "brute force",
    "math"
  ],
  "code": "SRM15B",
  "points": 200,
  "name": "Anand hacks Aditya’s Laptop",
  "description": "Aditya insulted Anand in front of everyone in the classroom. Anand decided to take revenge from Aditya, so he designed a plan to get Aditya's laptop for some time and hack into it and get all the important documents which he needs to blackmail him but the documents are password protected.\r\nPassword is <b>4</b> spaces long which consist of digits only, ranging from <b>1 to 5</b>, Anand is using brute force attack to unlock the documents.\r\n<b>D</b> is the no. of documents to be unlocked, <b>T</b> is the time after which Aditya will return, in that time you have to unlock one document and you have given the correct password, so you have to tell Anand whether it is possible to hack into Aditya's laptop before he comes.\r\n<b>1 sec</b> is required for each attempt. Your attack should start form <b>1111</b>. The hack is successful even if it takes exactly <b>T</b> seconds.\r\nAs Anand helps you in doing all class assignments, you should help him in hacking into Aditya’s laptop.",
  "explainInput": "The first line of the input consists of a single integer <b>D</b> denoting the number of documents to be unlocked.\r\nFor each <b>D</b> there are two lines which give you time <b>T</b> in seconds, followed by the correct password.",
  "explainOutput": "For each document, print a single line with “<b>YES</b>” if it is possible to hack the document and “<b>NO</b>” otherwise without the quotes.\r\n",
  "constraints": "<ul>\r\n<li>1 <= <b>D</b> <= 10<sup>5</sup></li>\r\n<li>1 <= <b>T</b> <= 1000</li>\r\n</ul>",
  "example": "Input:\r\n2\r\n40\r\n1234\r\n68\r\n1345\r\nOutput:\r\nYES\r\nNO\r\n",
  "explanation": "For the first document brute force attack will start from \r\n1111  1 sec\r\n1112  2 sec\r\n1113  3 sec\r\n1114  4 sec\r\nAnd so on….\r\nFor 1234 it takes <b>39</b> sec which is less than <b>40</b> sec.\r\nTherefore it prints <b>YES</b>.\r\nFor the second document, it takes <b>70</b> sec which is greater than <b>68</b>.\r\nTherefore it prints <b>NO</b>.\r\n\r\n",
  "contestCode": "SRM15",
  "createdAt": {
    "$date": {
      "$numberLong": "1584162698463"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586382135653"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e6e0be659366b002223786e"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM15C",
  "points": 300,
  "name": "Mercy and her kill list",
  "description": "Mercy Rodgers is the deadliest hitwomen the darknet world has ever known. With over 430 brutal murders, neither has she ever missed her mark nor has she been caught even once. But one thing is very specific about Mercy, all her victims are people who had ill-treated women or children. Since she too had once been a victim of abuse, she carries every mission with full sense of revenge. \r\nOnce she is given <b>N</b> targets, she researches and analyses the severity of each <b>ith</b> target’s (<b>1</b> <= <b>i</b> <= <b>N</b>) misdeeds <b>M[i]</b>, strength and security around the target which she has to break <b>S[i]</b> and the probable number of witnesses at the scene of murder <b>W[i]</b>.\r\nMercy comes up with a way to calculate vengeance <b>V[i]</b> for her targets. It is\r\n<center><b>V[i] = M[i] + S[i] – W[i]</b></center>\r\nHigher the value of <b>V</b>, more difficult is the execution of the target and lower the <b>V</b>, easier is the execution.\r\nShe has decided that she would start by killing the <b>easiest</b> target followed by the <b>toughest</b> target and then followed by the <b>2nd easiest</b> target and so on.However, the following characteristics of Mercy must be taken into consideration:\r\n<ol>\r\n<li>Since Mercy still has some mercy, she spares targets who have her vengeance level V[i] as multiples of 5. </li>\r\n<li>She gains additional confidence when she kills targets who had V[i] as multiples of 3 and not 5, so she chooses a difficult target next even if it alters the sequence.</li>\r\n<li>If V[i] is a multiple of both 3 and 5, she spares the target.</li>\r\n<li>In case multiple targets have equal level of her vengeance, the one with earlier position is executed.</li>\r\n</ol>\r\nSince Mercy is short of time and high on urge for revenge, you being her personal assistant help her write the order in which she has to assassinate her targets.\r\n\r\n",
  "explainInput": "The first line of input is <b>T</b> which denotes the number of test cases.\r\nThe first line of each test case is <b>N</b> which denotes the total numbers of targets.\r\nThe 2nd, 3rd and 4th line of each test case is a series of space separated numbers which is <b>M[i]</b>, <b>S[i]</b> and <b>W[i]</b> respectively of the targets.\r\n",
  "explainOutput": "Each test case should output a series of integers on new line each denoting the target’s position on the kill list.",
  "constraints": "1<= <b>T</b> <= 100\r\n1<= <b>N</b> <= 10<sup>5</sup>\r\n1<= <b>M[i]</b> <= 10<sup>9</sup>\r\n1<= <b>S[i]</b> <= 10<sup>9</sup>\r\n1<= <b>W[i]</b> <= 2*10<sup>9</sup>\r\n<b>V[i]</b> >= 1\r\n",
  "example": "Input\r\n3\r\n5\r\n5 3 3 6 7 \r\n23 22 21 19 15\r\n2 5 8 4 3\r\n4\r\n3 4 8 10\r\n3 4 8 7\r\n2 2 2 2\r\n4\r\n3 4 8 10\r\n3 4 8 10\r\n2 2 2 2\r\nOutput\r\n3\r\n1\r\n5\r\n4\r\n1\r\n2\r\n3\r\n1\r\n4\r\n3\r\n2\r\n",
  "explanation": "<b>Test Case 1:</b>\r\n<img src=\"https://i.imgur.com/UuBahgh.png\">\r\nThe easiest target at 3rd position on the list, the toughest at 1st, 2nd easiest at 5th , 2nd toughest chapter at 4th, and the 2nd target is spared.",
  "contestCode": "SRM15",
  "createdAt": {
    "$date": {
      "$numberLong": "1584250510276"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1584258858343"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e80968d99770c00221d371e"
  },
  "tags": [
    "math"
  ],
  "code": "SRM16C",
  "points": 300,
  "name": "Secret Info",
  "description": "Cibin, is the head of an intelligence agency. Since there is a lot of fake information, he wants to share some highly confidential information <b>S</b> to all the defense officials regarding this pandemic.\r\nHere the message to be sent is in a single word consisting of only lowercase English letters. For the confidentiality of the information he decides to encrypt the message. He makes a string <b>M</b> of length <b>N</b>, such that after deleting a substring of <b>non-zero</b> length from <b>M</b>, the remaining string is <b>S</b>. He needs your help to find out the number of all such possible ways he can form the string <b>M</b>.\r\n<b>Note:</b> The string <b>M</b> can be a combination of <b>lowercase</b> English letters.",
  "explainInput": "First line contains the number of test cases <b>T</b>. \r\nFor each test case there is a single line which contains a space separated integer, <b>N</b> and a string <b>S</b>.\r\n",
  "explainOutput": "For each test case, output the number of possible strings modulo <b>10^9+7</b>.",
  "constraints": "1≤ <b>T</b> ≤ 1000\r\n1≤ <b>N</b> ≤10^18\r\n1≤ <b>|S|</b> ≤100\r\n<b>S</b> contains only lowercase English letters.",
  "example": "<b>Input:</b>\r\n3\r\n2 a\r\n3 a\r\n3 ab\r\n<b>Output:</b>\r\n51\r\n1326\r\n76\r\n",
  "explanation": "Following are some examples of 2 lettered words:\r\naa, ab, az, zz, bd, etc.\r\nWe can form <b>26*26 = 676</b> such words but only <b>51</b> out of them contain at least one ‘a’ so that we can form the string <b>S</b>. \r\nEg: We can get <b>‘a’</b> from <b>‘ab’</b> after removing the substring <b>‘b’</b>.\r\n       But we can’t get <b>‘a’</b> from <b>‘cd’</b> or <b>‘tf’</b>.\r\n",
  "contestCode": "SRM16",
  "createdAt": {
    "$date": {
      "$numberLong": "1585465653055"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1585470009460"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5b9e444fc81946001f697c1d"
  },
  "code": "SEPT18E",
  "points": 100,
  "name": "Aarya Celebrates Dussehra",
  "description": "Celebration of the festival of Dussehra in Bengal and eastern India is indeed unique. No other  festival anywhere can match the Pooja season in grandeur, rituals, expression of family bonds and sheer size of mass participation. Our friend Aarya is also excited for Dussehra this year. \r\n\r\nDuring Dussehra, all of her <b>N</b> family members join her. Out of these <b>N</b> family members only <b>M</b> know each other very well and they share about everything with each other.  We know these <b>N</b> distinct family members and also about their <b>M</b> strong bond and relationships.\r\n\r\nBut when all of these family members come together, one of the family member <b>S</b> starts a rumour. This is an yearly tradition. This year, Aarya wants to find out who will be the first person and the last person of the family to know. She also knows that <em><b>S</b> only tells this rumour to his friendly family members alphabetically and once S tells his first friendly family member that friendly family member tells his immediate first friendly family member alphabetically and it goes on simultaneously like fire.(here each of the family member tells the rumour to their immediate alphabetically first friendly family member, e.g. If A has bond with X Y Z, A will first tell it to X, then Y and then Z but will spread at the same time and be counted equally. But there is also a chance that X has a bond with C and C has a bond with Y then, in this case Y will receive rumour before it comes to him/her from A and will be counted last).</em>\r\nSince Aarya is busy in a lot of decoration work, she needs your help.\r\n\r\nHint: Rumour spreads like Depth First Fire.",
  "explainInput": "The first line of the input is an integer <b>T</b>, denoting the number of test cases.\r\nEach test case starts with two integers denoting <b>N</b> and <b>M</b> as mentioned above.\r\nNext line contains <b>N</b> characters with a space between each of them denoting the family members.\r\nNext <b>M</b> lines contains <b>X</b> and <b>Y</b> two characters denoting a friendship among them.\r\nNext line contains <b>S</b> the character of the family member who starts the rumour.",
  "explainOutput": "For each test case, output two characters <b>AX</b> and <b>AY</b> in a single line with a space\r\nbetween them. Here AX will be the first person to know the secret (also alphabetically\r\ntoo if there are multiple characters with the same time) and AY will be the last person to\r\nknow (also alphabetically last if there are multiple characters with same time).",
  "constraints": "1 <= <b>T</b> <= 10.\r\n2 <= <b>N, M</b> <= 26\r\nAll characters are uppercase and in range from A to Z.\r\nX and Y will be any two characters from N given characters.",
  "example": "<b>Input</b>:\r\n2\r\n4 4\r\nA B O Z\r\nA B\r\nA Z\r\nB Z\r\nB O\r\nO\r\n6 7\r\nA B C X Y Z\r\nA Z\r\nA X\r\nA Y\r\nY C\r\nX C\r\nX B\r\nB Z\r\nX\r\n<b>Output</b>:\r\nB Z\r\nA C",
  "explanation": "<b>Case 1</b>:\r\n<center><img src=\"https://i.imgur.com/lttpzkn.png\" align=\"center\"></center>\r\nSecret is shared by O to B first.\r\nSo traversal is: B->A->Z. \r\nSo B is first and Z is last.\r\n<b>Case 2</b>:\r\n<center><img src=\"https://i.imgur.com/WyuhcYn.png\" align=\"center\"></center>\r\nSecret is shared by X to A first.\r\nSo traversal is: A->Y->C and A->Z->B. \r\nBoth Y and Z are reached at same time and B and C are reached at same time.\r\nBut alphabetically C comes next to B so C is the answer.\r\nSo A is first and C is last.",
  "tags": [
    "graphs",
    "strings"
  ],
  "contestCode": "SEPT18",
  "createdAt": {
    "$date": {
      "$numberLong": "1537079031510"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586591333549"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c39f1023646190022847c62"
  },
  "tags": [
    "math"
  ],
  "code": "UNI05",
  "points": 0,
  "name": "Distance Finder",
  "description": "Find the distance between two points.",
  "explainInput": "The first line of input contain an integer T denoting the number of test cases. Each test case consists of one line, which contains 2 points in the format (x1, y1) (x2, y2).",
  "explainOutput": "Print the distance between the points (upto 2 decimal places) on new line.\r\n",
  "constraints": "1 <= T<= 100\r\nx1, y1, x2, y2 will be integers.\r\nDistance can be a floating value.",
  "example": "Input:\r\n2\r\n(1,2) (2,3)\r\n(0,0) (-1,0)\r\nOutput:\r\n1.41\r\n1.00",
  "explanation": "1) Our coordinates are x1=1,y1=2,x2=2,y2=3. We calculate the distance between these points by known methods one of which is using Euclidean distance formula, √((x2-x1)2+(y2-y1)2). ",
  "contestCode": "UNIVERSE",
  "createdAt": {
    "$date": {
      "$numberLong": "1547281322344"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1586646407358"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5c7ac9bc5dfcc900221e112d"
  },
  "tags": [
    "dp"
  ],
  "code": "SRM09C",
  "points": 300,
  "name": "Aditya Loves PUBG",
  "description": "“The early bird gets the first worm, but the wisest bird gets the fastest one.”\r\n\r\nAditya is really fond of playing PUBG. He is constantly finding ways to improve his game so that he can beat his friends Rohan and Raghav. Rohan and Raghav have been playing  PUBG since a year. So, both of them know how to win through practice. Aditya, on the other hand is a newbie. But, Aditya is smart. So, he is finding smart ways to win. \r\n\r\nThe game has started. Aditya has to collect guns from various scattered places. \r\nYou are being given the directions to collect the guns. Aditya has limited space in his bag. He has to follow the directions till the end and return back to the beginning to collect the guns. He has to choose the appropriate gun in order to maximise his killing efficiency.\r\n\r\nA set of directions consists of several instructions. The first instruction is of the form \"Start on XYZ\", indicating the street that the route begins on. The next instruction is of the form “Left on abc” indicating the next road after collecting the gun.\r\n\r\nCan you help Aditya figure out the best guns he can collect?",
  "explainInput": "The first line of the input consists of a single integer T denoting the number of test cases.\r\nThe second line consists of an integer M which denotes the maximum weight of gun he can carry , an integer Z which denotes the total number of roads he has been to and integer N which denotes the total number of guns.\r\nThe third line contains N inputs of weights of the gun wt[i] and the fourth line contains corresponding power of those guns p[i]. \r\nThe following Z lines give instructions showing his route:-\r\nFirst line consists of the first road. The second line consists of the second road (along with change in direction).\r\nSimilar lines follow.",
  "explainOutput": "Print Z lines containing his way back to the beginning road with the last traversed road as the first road and vice versa.\r\nAnd the last line = Sum of the power of guns he can carry in horsepower. ",
  "constraints": "1 <= T <= 10^2\r\n1 <= M <= 10^2\r\n1 <= Z <= 10^3\r\n1 <= N <= 10^4\r\n1 <= wt[i] <= 10^2\r\n1 <= p[i] <= 10^3\r\n1 <= Length[roadname] <= 10^3",
  "example": "Input:\r\n1\r\n50 4 3\r\n10 20 30\r\n60 100 120\r\nStart on xyz\r\nLeft on abc\r\nRight on efg\r\nLeft on hgf\r\n\r\nOutput:\r\nStart on hgf\r\nRight on efg\r\nLeft on abc\r\nRight on xyz\r\n220",
  "explanation": "The directions given are to be traced back in the opposite direction and printed.\r\nThe maximum weight he can carry is 50. So, the best way possible is to carry the guns with weights 20 and 30. So, total power is 100+120 = 220. \r\n\r\n<img src = \"https://i.imgur.com/5aY5aOx.jpg\">",
  "contestCode": "SRM09",
  "createdAt": {
    "$date": {
      "$numberLong": "1551531108945"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1553915816237"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e987904773965002294ebf1"
  },
  "tags": [
    "math"
  ],
  "code": "GBYE20A",
  "points": 100,
  "name": "Social Distancing",
  "description": "<p  style = \"text-align: center\">Author: <a href = \"http://arena.siesgst.ac.in/profile/5b6541b064290b0020a9594a\" style = \"color : #0000FF\" >Venkhatesh Arunachalam</a></p>\r\n<i>Social Distancing is the only defensive option to fight coronavirus.</i>\r\n\r\nRecently, the Government has detected a covid19 case in one of its offices. Now, they are trying to trace the people who came in contact with the patient. Government has found timestamps of entry and exit of workers. \r\n\r\nNow it’s your duty to find the possible covid19 victims. Find the <b>total number of people</b> whose time overlaps with the <b>affected worker</b>.\r\n",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <b>T</b>, denoting the number of test cases.</li>\r\n<li>The 1st line of each test case consists of an <b>entry</b> and <b>exit</b> time of an <b>affected</b> worker.</li>\r\n<li>The 2nd line of each test case consists of a single integer <b>N</b>, denoting the number of workers.</li>\r\n<li> <b>N</b> more lines follow. The <b>i</b><sup>th</sup> of these lines (counting from 1) contains two space-separated integers <b>En</b><sub>i</sub> (Entry time) and <b>Ex</b><sub>i</sub> (Exit time) (in minutes). </li>\r\n</ul>",
  "explainOutput": "<ul>\r\n<li><b>If</b> there is atleast 1 possible victim, print \"<b>Isolate</b>\" (without quotes) followed by a space and <b>X</b> (the number of possible victims) </li> \r\n<li><b>else</b> print “<b>Safe</b>” (without quotes) if there are no possible victims.</li>\r\n<li>Note that you are supposed to print the output exactly as mentioned above</li>\r\n<li><b>Note</b> - Worker that exits at time <b>t</b> is considered to overlap with another worker who enters at time <b>t</b>.</li>\r\n</ul>",
  "constraints": "<ul>\r\n<li>1 <= <b>T</b> <= 150</li>\r\n<li>1 <= <b>N</b> <= 10<sup>5</sup></li>\r\n<li> 0 <= times stamps <= 10000 </li>\r\n</ul>\r\n",
  "example": "<b>Input</b>:\r\n2\r\n200 400\r\n3\r\n300 400\r\n600 700\r\n800 900\r\n100 200\r\n3\r\n300 400\r\n300 400\r\n500 600\r\n\r\n<b>Output</b>:\r\nIsolate 1\r\nSafe\r\n",
  "explanation": "<b>Sample Case 1</b> - notice worker with 300 and 400 as entry and exit time overlaps with the affected person’s entry and exit time. So, he should be isolated and the total number of workers whose time overlaps is <b>1</b>.\r\n\r\n<b>Sample Case 2</b> - Notice there are no workers whose time overlaps with the affected person’s time. So, everyone is safe\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587030956624"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587033468492"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e988a5f773965002294ebf2"
  },
  "tags": [
    "brute force",
    "math"
  ],
  "code": "GBYE20B",
  "points": 100,
  "name": "Ashish’s Playlist",
  "description": "<p  style = \"text-align: center\">Author: <a href = \"http://arena.siesgst.ac.in/profile/5b6480fa58d190002048aabf\" style = \"color : #0000FF\" >Ashish Kedarisetti</a></p>\r\nAshish is getting bored because of the lockdown imposed by the government. He loves to listen to music and he has a playlist in the order of the artists (He would listen to all the songs of one artist and then he would move to another artist). After the last song of the playlist is over, the first one in the playlist starts to play.\r\n\r\nGiven are the names of <b>N</b> artists (<b>P</b><sub>1</sub>, <b>P</b><sub>2</sub>,...., <b>P</b><sub>N</sub> ) along with the number of songs of each artist (<b>S</b><sub>1</sub>, <b>S</b><sub>2</sub>,..., <b>S</b><sub>N</sub>) respectively. \r\n\r\nNow Ashish has <b>Q</b> queries for you to answer. <br>\r\nFor each query, you are given an integer <b>N</b><sub>q</sub> denoting that Ashish is currently listening to the <b>N</b><sub>q</sub><sup>th</sup> song. <br>\r\nFind the name of the artist of that song.  \r\n",
  "explainInput": "<ul>\r\n<li>The first line of input contains an integer <b>T</b> denoting the number of test cases. </li>\r\n<li> The first line of each test case consists of two spaced integers <b>N</b> and <b>Q</b> respectively. <b>N</b> represents the number of artists and <b>Q</b> represents the number of queries. </li>\r\n<li>The second line consists of the <b>N</b> space-separated artist's names in the playlist in that specific order</li>\r\n<li>The third line consists of the number of songs of each artist respectively</li>\r\n<li> <b>Q</b> lines follow. Each of these lines consists of a single integer <b>N</b><sub>q</sub> </li>\r\n</ul>\r\n",
  "explainOutput": "<li> For each query, output the answer, that is the name of the artist in a single line </li>",
  "constraints": "<ul>\r\n<li>1 <= <b>T</b> <= 150</li>\r\n<li> 1 <= <b>N</b> <= 1000</li>\r\n<li> 1 <= <b>Q</b> <= 100 </li> \r\n <li> 1 <= <b>S</b><sub>i</sub> <= 1000 </li>\r\n<li> <b>P</b><sub>i</sub> = string of lowercase english alphabets and digits </li>\r\n<li> 1 <= <b>N</b><sub>q</sub> <= 10<sup>9</sup></li>\r\n</ul>\r\n",
  "example": "<b>Input</b>:\r\n1\r\n4 2\r\ncamila shawn charlie maroon5\r\n6 7 10 4\r\n8\r\n30\r\n\r\n<b>Output</b>:\r\nshawn\r\ncamila\r\n",
  "explanation": "<b>There is 1 test case which has 2 queries</b>\r\n\r\nFor the <b>first query</b>, <b>N</b><sub>q</sub> is 8. So, the 8th song will be by shawn (6 songs by Camila, followed by 2 songs by Shawn). Hence, output is shawn.\r\n\r\nFor the<b> second query</b>, <b>N</b><sub>q</sub> is 30. The playlist consists of 6+7+10+4=27 songs. After 27 songs are played. The first one of the playlist plays again. So, 30-27=3, 3rd song on the playlist will be the 30th song. Hence the output will be camila.\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587035399521"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587104481283"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e98a5f03af9550022fc130c"
  },
  "tags": [
    "greedy",
    "math"
  ],
  "code": "GBYE20C",
  "points": 100,
  "name": "Teaming up against Covid-19",
  "description": "<p  style = \"text-align: center\">Author: <a href = \"http://arena.siesgst.ac.in/profile/5b9658517a85c60020f98a6d\" style = \"color : #808080\" >Sowmik Sunil</a></p>\r\nSowmik has been given a task to form a team of <b>k</b> doctors to tackle the ongoing pandemic, Covid-19. He is supposed to select the doctors based on the performance rating of those particular set of doctors.  <br> <br>\r\nThere are <b>n</b> doctors numbered from <b>1</b> to <b>n</b> and two arrays: <b>efficiency</b> and <b>rate</b>, where <b>efficiency[i]</b> and <b>rate[i]</b> represent the efficiency and the rate of reduction of efficiency for the <b>i</b><sup>th</sup> doctor respectively. <br> <br>\r\nYou are also given an integer <b>d</b> denoting the number of days. At the <b>end</b> of each <b>i</b><sup>th</sup> day, the doctors’ efficiency <b>reduces</b> by <br> <b>[ ( i &#247 (rate &#215 i) ) &#215 current_efficiency ]</b>. <br> <br>\r\nThe performance rating of a team is the <b>sum</b> of each doctors' <b>cumulative efficiency</b> for <b>d</b> days.  <br> <br>\r\nFind the <b>maximum</b> possible performance rating of the team of <b>k</b> doctors. <br> <br>\r\n<b>Note : </b> You are supposed to print the answer only upto the <b>integer</b> part. That is, after making a <b>floor</b> operation on the answer\r\n",
  "explainInput": "<ul>\r\n<li>The first line of input consists of a single integer <strong>T</strong>, denoting the number of test cases.</li>\r\n<li>The first line of each test case consists of a single integer <strong>n</strong>, denoting the number of doctors present.</li>\r\n<li>The second line consists of <strong>n</strong> space-separated integers denoting the <strong>initial efficiency</strong> of the corresponding doctor.</li>\r\n<li>The third line consists of <strong>n</strong> spaced integers denoting the <strong>rate</strong> of the corresponding doctor.</li>\r\n<li>The fourth line consists of a single integer <strong>k</strong>, denoting the team size of the doctors.</li>\r\n<li>The fifth line consists of a single integer <strong>d</strong>, denoting the number of days.</li>\r\n</ul>\r\n",
  "explainOutput": "<ul>\r\n<li>For each test case, output a single line containing an <strong>integer,</strong>&nbsp;the maximum&nbsp;<strong><em>performance rating </em></strong>of a team composed of&nbsp;<strong>at most</strong> <strong>k</strong>&nbsp;doctors.</li>\r\n<li>Output should strictly be in an <strong>integer</strong> format (<strong>floor</strong> value)</li>\r\n</ul>\r\n",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>n</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>efficiency[i]</strong> &lt;= 10<sup>5</sup></li>\r\n<li>2 &lt;= <strong>rate[i]</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>k</strong> &lt;= <strong>n</strong></li>\r\n<li>1 &lt;= <strong>d</strong> &lt;= 100</li>\r\n<li> Sum of <b>n</b> over all test cases doesn't exceed 10<sup>6</sup> </li>\r\n</ul>\r\n",
  "example": "<strong>Input:</strong> <br>\r\n2<br />6<br />2 10 3 1 5 8 <br />5 4 3 9 7 2 <br />2<br />5<br />6<br />2 10 3 1 5 8<br />5 4 3 9 7 2<br />3<br />2\r\n<p>&nbsp;</p>\r\n<strong>Output:</strong> <br>\r\n49<br />38\r\n",
  "explanation": "<p><strong>Test Case 1</strong>:</p>\r\n<p>Given, we have to find the maximum sum of the cumulative efficiencies of 2 doctors over the period of 5 days.</p>\r\n<p>Accordingly, we have the maximum performance rating of the team by selecting doctor 2 (with efficiency = 10 and rate = 4) and doctor 5 (with efficiency = 5 and rate = 7).</p>\r\n<p>Thus their performance rating = (10 + 7.5 + 5.625 + 4.2187 + 3.1640) + (5 + 4.285 + 3.672 + 3.147 + 2.697) = 49.3087 = 49 (Taken floor of the final answer)</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Test Case 2</strong>:</p>\r\n<p>Given, we have to find the maximum sum of the cumulative efficiencies of 3 doctors over the period of 2 days.</p>\r\n<p>Accordingly, we have the maximum performance rating of the team by selecting doctor 2 (with efficiency = 10 and rate = 4), doctor 5 (with efficiency = 5 and rate = 7) and doctor 6 (with efficiency = 8 and rate = 2). Thus their performance rating = (10 + 7.5 ) + (5 + 4.285) + (8 + 4) =&nbsp;38.785 = 38 (Taken floor)</p>\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587042456915"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587106848663"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e98b2ae3af9550022fc1311"
  },
  "tags": [
    "data structures",
    "greedy"
  ],
  "code": "GBYE20D",
  "points": 100,
  "name": "Partners In Crime",
  "description": "<p style=\"text-align: center;\">Author: <a style=\"color: #008000;\" href=\"http://arena.siesgst.ac.in/profile/5b6eec1626d9950020e72ba0\">Shantanu Ghar</a></p>\r\n<p>Sachin and Viru are known to have established themselves as one of the best opening partners in the world. Their secret lies in their mutual understanding. To be precise, they rely on sharing information regarding the bowlers they face while they&rsquo;re on the pitch. They successfully put together a 100 run partnership if they face the <strong>same set of bowlers</strong> <strong>&amp; each bowler the same number of times throughout a match.</strong></p>\r\n<p>Every bowler <strong>X</strong> in the set (represented by an integer) <strong>alternately</strong> bowls to Sachin and Viru whenever they&rsquo;re brought into the attack. (i.e A Bowler <strong>X</strong> bowls his <strong>1<sup>st</sup></strong> over to <strong>Sachin</strong>, ans his <strong>2<sup>nd</sup></strong> over to <strong>Viru</strong> and so on)</p>\r\n<p>Given the bowling lineup <strong>[ B1,B2, &hellip;...BN ]</strong> of the opposite team, your task is to predict whether Sachin and Viru will establish a successful 100 run partnership.</p>\r\n",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases.</li>\r\n<li>In each test case, the first line of input is a single integer <strong>N</strong>, denoting the number of overs bowled by the bowling lineup.</li>\r\n<li>The second line of each test case consists of <strong>N</strong> space separated integers, with each number representing a bowler.</li>\r\n</ul>\r\n",
  "explainOutput": "<p>The output for every test case should be a <strong>single line</strong> containing \"<strong>successful\"</strong> or \"<strong>unsuccessful\" </strong>(Without the quotes)&nbsp;depending on whether Sachin and Viru can put together a 100 run partnership.]</p>\r\n<p><strong>Note: </strong><span style=\"font-weight: 400;\">Ensure that the output is strictly in lowercase.</span></p>\r\n\r\n",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>B</strong><sub>i</sub> &lt;= 10<sup>9</sup></li>\r\n<li> Sum of <b>N</b> over all test cases doesn't exceed 10<sup>6</sup> </li>\r\n</ul>\r\n",
  "example": "<b>Input</b>: <br>\r\n3<br>\r\n6<br>\r\n1 2 2 1 1 1<br>\r\n7<br>\r\n1 2 3 3 1 2 1<br>\r\n6<br>\r\n1 2 3 3 1 2<br>\r\n\r\n<br>\r\n<b>Output</b>: <br>\r\nsuccessful<br>\r\nunsuccessful<br>\r\nsuccessful",
  "explanation": "<p><strong>Testcase 1:- </strong><span style=\"font-weight: 400;\">Bowler 1 bowls an equal number of times to Sachin and Viru. Similarly Bowler 2 also bowls an equal number of times to Sachin and Viru. Since they face every bowler an equal number of times, they&rsquo;re successful</span><span style=\"font-weight: 400;\">.</span></p>\r\n<p><span style=\"font-weight: 400;\"><strong>Process</strong>:</span></p>\r\n<p><span style=\"font-weight: 400;\">B<sub>1&nbsp;</sub>bowls to Sachin,&nbsp;B<sub>2</sub> bowls to Sachin,&nbsp;B<sub>3&nbsp;</sub>bowls to Viru (Since B<sub>3&nbsp;</sub>is 2 and bowler 2 has already bowled to Sachin), B<sub>4&nbsp;</sub>bowls to Viru (Since 1 has already bowled to Sachin), B<sub>5&nbsp;</sub>bowls to Sachin (Since 1 had previously bowled to Viru), B<sub>6&nbsp;</sub>bowls to Viru</span></p>\r\n<p>&nbsp;</p>\r\n<p><strong>Testcase 2:-</strong><span style=\"font-weight: 400;\"> Sachin and Viru face Bowler 2 and Bowler 3 an equal number of times, but Sachin faces Bowler 1 twice compared to Viru facing him only once. Hence they&rsquo;re unsuccessful.</span></p>\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587045718956"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587117757144"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e98ba9d3af9550022fc1315"
  },
  "tags": [
    "adhoc",
    "implementation"
  ],
  "code": "GBYE20E",
  "points": 100,
  "name": "Professors’ schedule",
  "description": "<p style=\"text-align: center;\">Author: <a style=\"color: #0000ff;\" href=\"http://arena.siesgst.ac.in/profile/5b659a0c64290b0020a95960\">Sanoop Menon</a></p>\r\n<p>Far far away on a planet called Kepler-452b, the college management has messed up. Professors have been scheduled to give multiple lectures simultaneously. Cloning themselves has taken a toll on their body. Colleges in Kepler work <strong>7 hours</strong> for <strong>5 days</strong> a week. A <strong>theory session lasts for 1</strong> hour while a <strong>practical takes 2 hours</strong>.&nbsp;</p>\r\n<p>When the professors started to revolt, the management gave them a file containing many different schedules to choose from. Checking each and every schedule manually would take a lot of time. Help them by letting them know the <strong>serial numbers</strong> of all possible schedules where they wont need to clone themselves.</p>\r\n",
  "explainInput": "<li>First line contains <b>T</b>, the total number of schedules.</li>\r\n<li><b>For each T</b>:</li>\r\n<li>First line contains space separated integers <b>C&nbsp;</b>(number of classes) and <b>N&nbsp;</b>(number of professors).</li>\r\n<li>Next <b>C * 8</b> lines contains details for each class (<b>8</b> lines for each class).</li>\r\n<li><b>For each class:</b></li>\r\n<li>First line contains space separated integers <b>S&nbsp;</b>(number of theory lectures) and<b>&nbsp;P&nbsp;</b>(number of practicals).</li>\r\n<li>Second line contains professorID (<b>pid</b>) for each theory lecture <b>s<sub>0</sub></b>, <b>s<sub>1</sub></b> and so on.</li>\r\n<li>Third line contains professorID (<b>pid</b>) for each practical <b>p<sub>0</sub></b>, <b>p<sub>1</sub></b> and so on.</li>\r\n<li>Next five lines contain codes for practical and theory of 7 hours in sequence for each working day.</li>\r\n",
  "explainOutput": "Print the serial numbers of the schedules satisfying the requirement, one in each line. (1-based)\r\n",
  "constraints": "<ul>\r\n<li>0 &lt; <strong>T</strong> &lt;= 500</li>\r\n<li>0 &lt; <strong>C</strong> &lt; 100</li>\r\n<li>0 &lt; <strong>N</strong> &lt; 100</li>\r\n<li>0 &lt; <strong>S</strong></li>\r\n<li>0 &lt; <strong>P</strong></li>\r\n<li>0 &le; <strong>pid</strong> &lt; N</li>\r\n</ul>\r\n",
  "example": "<strong>Input</strong>: <br>\r\n2<br />2 10<br />7 3<br />6 1 5 2 8 0 3<br />8 1 3<br />s1 s2 s3 s4 s5 s5 s1<br />p0 s5 s6 p0 s1<br />s5 s5 s2 s5 p1 s3<br />s6 s0 p1 p1 s5<br />s3 p0 s0 p1 s1<br />7 3<br />7 6 8 0 5 2 3<br />4 6 2<br />s6 p2 p1 s6 s5<br />s2 s4 s3 s6 p2 s1<br />s5 s2 s5 s3 s6 s3 s3<br />s0 p2 s1 p1 s0<br />p1 s6 s4 p1 s5<br />1 10<br />9 5<br />8 0 6 4 2 3 1 5 7<br />1 7 8 2 3<br />s6 s7 p4 s1 p3<br />s3 s5 p0 s8 p0<br />p4 s4 p3 s1 s0<br />p2 p3 s1 s2 s2<br />s8 s3 s0 p1 p1\r\n<p>&nbsp;</p>\r\n<strong>Output</strong>: <br>\r\n2\r\n",
  "explanation": "In the above example there are 2 schedules:<br /> &nbsp;<br /> Schedule 1 has 2 classes.<br /> For class 1, s3 is taken by pid 2<br /> and for class 2, p2 is taken by pid 2.<br /> Both of this clash on day1 of week<br /> &nbsp;<br /> Schedule 2 has only 1 class thus there are no clashes.<br /> So we print 2.\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587047749289"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587047870015"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e98bde83af9550022fc1316"
  },
  "tags": [
    "adhoc",
    "constructive",
    "implementation"
  ],
  "code": "GBYE20F",
  "points": 100,
  "name": "That Beautiful Moment! 🏵️",
  "description": "<p style=\"text-align: center;\">Author: <a style=\"color: #0000ff;\" href=\"http://arena.siesgst.ac.in/profile/5b65571764290b0020a95951\">Arvindraj Thangaraj</a></p>\r\n<p>What's college life without having a crush on someone?</p>\r\n<p>After quite a lot of time having a crush on her, I decided it was finally time to say it, with a bunch of hand-crafted flowers! In the time I talked with her, I got to know of the colors she'd potentially like to have in these flowers, and the color she loves the most! (preferred color)</p>\r\n<p>Let&rsquo;s craft some flowers, for that beautiful moment with her!</p>\r\n<p>I have a set of colored papers crafted into flower petals, and a few rated designs I can craft from these petals. A flower looks better when it's made from a pair of colors which look good together, i.e. have a <strong>higher affinity value</strong>.</p>\r\n<p><strong><em>Help me in determining what would be the highest possible beautifulness rating of all the crafted flowers together!</em></strong></p>\r\n<p>Flowers are made by using the colored paper petals in any of the designs specified below:</p>\r\n<p><strong>D1: Rating 30</strong> - 8 petals each of two different colors, placed in a nested manner</p>\r\n<p><strong>D2: Rating 20</strong> - 4 petals each of two different colors, placed in a alternating manner</p>\r\n<p><strong>D3: Rating 10</strong> - 5 petals of the same color</p>\r\n<p>Beautifulness Rating = &sum; (Design Rating &times; Affinity value)</p>\r\n<p>Here are some conditions though:</p>\r\n<ol>\r\n<li>No two flowers should have the same type of design</li>\r\n<li>No color should be used in multiple flowers</li>\r\n<li>Preferred color must be used once&nbsp;<em>(which implies at least one flower should be crafted)</em></li>\r\n</ol>",
  "explainInput": "<ul>\r\n<li>First line consists of the no. of test cases <strong>T</strong></li>\r\n<li>For each test case <strong>T<sub>i</sub></strong>:</li>\r\n<li>First line consists of a single integer <strong>N </strong>denoting the number of colors</li>\r\n<li>Second line of input consists of the preferred color&rsquo;s index <strong>P&nbsp;</strong>(0-based)</li>\r\n<li>Third line of input consists of the number of petals available for each color <strong>N<sub>i</sub></strong>&nbsp;</li>\r\n<li>The next <strong>N </strong>lines consists of the affinity matrix <strong>A</strong>, with <strong>A<sub>ij</sub></strong> = <strong>A<sub>ji</sub>,</strong> being the affinity value for the pair of colors <strong>i</strong> and&nbsp;<strong>j</strong></li>\r\n<li><strong>A<sub>ii</sub> = 1.0</strong></li>\r\n<li>It is guaranteed that the affinity values in the input have a fixed precision of 1 place after the decimal point.</li>\r\n</ul>\r\n",
  "explainOutput": "Print a single <b>integer</b> the <b>maximum</b> beautifulness rating for each test case in a single line. <br>\r\n<b>Note : </b> It is possible to prove that the answer can always be an integer value",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 1000</li>\r\n<li>5 &lt;= <strong>N</strong> &lt;= 300&nbsp;</li>\r\n<li>0 &lt;= <strong>P</strong> &lt;= N-1</li>\r\n<li>0 &lt; <strong>A<sub>ij</sub></strong> &lt; 2 for all <strong>i</strong>, <strong>j</strong> (floating point)&nbsp;</li>\r\n<li><strong>A<sub>ii</sub></strong> = 1.0</li>\r\n<li>4 &lt;= <strong>N<sub>i</sub></strong> &lt;= 20</li>\r\n<li>Sum of <strong>N<sup>2</sup></strong> for all test cases doesn&rsquo;t exceed 10<sup>6</sup></li>\r\n</ul>\r\n",
  "example": "<b>Input</b>: <br>\r\n1<br>\r\n6<br>\r\n3<br>\r\n10 6 4 5 8 6<br>\r\n1.0 0.7 0.5 0.4 0.8 1.8<br>\r\n0.7 1.0 1.7 1.5 0.8 1.8<br>\r\n0.5 1.7 1.0 1.2 1.8 0.2<br>\r\n0.4 1.5 1.2 1.0 1.8 0.5<br>\r\n0.8 0.8 1.8 1.8 1.0 0.2<br>\r\n1.8 1.8 0.2 0.5 0.2 1.0\r\n<br>\r\n<br>\r\n<b>Output</b>: <br>\r\n70\r\n",
  "explanation": "<p>Considering the conditions given in the problem</p>\r\n<p>&nbsp;</p>\r\n<p>Design 1 would be made by using colors <strong>0 and 4</strong> with <strong>affinity 0.8</strong></p>\r\n<p>Beautifulness Rating = 30 * 0.8 = <strong>24</strong></p>\r\n<p>Design 2 would be made by using colors <strong>1 and 5</strong> with <strong>affinity 1.8</strong></p>\r\n<p>Beautifulness Rating = 24 + (20 * 1.8) = <strong>60</strong></p>\r\n<p>Design 3 would be made by using <strong>color 3 (preferred color)</strong></p>\r\n<p>Beautifulness Rating = 60 + 10 = <strong>70</strong></p>\r\n<p><br /><br /></p>\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587048592460"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587107639573"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5e98c4f63af9550022fc1317"
  },
  "tags": [
    "dp"
  ],
  "code": "GBYE20G",
  "points": 100,
  "name": "So many bucks, soo little time",
  "description": "<p style=\"text-align: center;\">Author: <a style=\"color: #808080;\" href=\"http://arena.siesgst.ac.in/profile/5b647abb58d190002048aaba\">Chinmay Chandak</a></p>\r\n<p>Our friend Ankita wants to get from the railway station to college. Ankita being the Treasurer is very fond of counting, especially, money! So while paying the fare, she started thinking in how many ways can she pay the fare with the multiple denominations available with her? She has to pay Rupees N for the travel, and she has 7 denominations, some coins of Rs 1, Rs 2, Rs 5, Rs 10 each and some notes of Rs 20, Rs 50 and Rs 100 each. But as Ankita is, still, not that good with computers, she wants our help in finding the number of ways in which she can pay the fare.</p>\r\n",
  "explainInput": "<ul>\r\n<li>The first line of input contains an integer <strong>T</strong> denoting the number of test cases.</li>\r\n<li>For each test case <strong>T<sub>i</sub>:</strong></li>\r\n<li>First line contains an integer <strong>N</strong> denoting the amount to be paid.</li>\r\n<li>The second line contains <strong>7</strong> space separated integers(<strong>M<sub>1</sub></strong> to <strong>M<sub>7</sub></strong>) denoting the number of coins/notes of each currency denomination Ankita has.</li>\r\n</ul>\r\n",
  "explainOutput": "<ul>\r\n<li>For each test case, output the total number of ways in which the total amount can be paid.&nbsp;</li>\r\n<li>Since this number can be very large, output it <strong>modulo 10<sup>9</sup>&nbsp;+ 7</strong> (1000000007)</li>\r\n</ul>\r\n",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 10<sup>3</sup></li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>0 &lt;= <strong>M<sub>i</sub></strong>&nbsp;&lt;= 10<sup>3</sup></li>\r\n<li>Sum of <strong>N</strong> over all test cases does not exceed 10<sup>6</sup></li>\r\n</ul>",
  "example": "<b>Input</b>: <br>\r\n2 <br>\r\n8 <br>\r\n3 3 0 0 1 2 0 <br>\r\n10 <br>\r\n3 3 2 1 1 0 0 <br> <br>\r\n\r\n<b>Output</b>: <br>\r\n1 <br>\r\n4\r\n",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p>Given 3 coins of 1 denomination and 3 of 2 denomination and as all other denominations are greater than 8 there is only one possible way to make a total sum of 8 which is 2+2+2+1+1=8</p>\r\n<p><strong>Test Case 2:</strong></p>\r\n<p>possible cases are:-</p>\r\n<p>10</p>\r\n<p>5+5</p>\r\n<p>5+2+2+1</p>\r\n<p>5+2+1+1+1</p>\r\n",
  "contestCode": "GBYE20",
  "createdAt": {
    "$date": {
      "$numberLong": "1587050398141"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1587108232662"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f3523bc72b45b0022f74c55"
  },
  "tags": [
    "greedy , sorting"
  ],
  "code": "SRM17B",
  "points": 100,
  "name": "Jack wants help",
  "description": "<p>Lately Jack is working as a food-delivery guy. Due to global pandemic, ordering power of people is very high so Jack is having quite busy days now. Due to a large number of orders Jack is facing difficulty. Help Jack to deliver all orders.</p>\r\n<p>On a street there are <strong>10</strong><strong>^9</strong> houses in a row, all these houses are identical to each other. The houses are numbered from <strong>1 to 10</strong><strong>^9</strong>.</p>\r\n<p>Jack is supposed to deliver <strong>N </strong>orders in some of these houses.</p>\r\n<p>As all houses are identical Jack is confused. Help Jack by finding the correct house by telling him the <strong>minimum</strong> number of houses he should skip in order to deliver to the next house after each delivery.</p>\r\n<p>I.e Help him to deliver the orders in such a way as to <strong>minimize</strong> the number of skips needed.</p>\r\n<p>Note:&nbsp;Jack starts delivery from the smallest house number.</p>",
  "explainInput": "The first line of input contains an integer <strong>T </strong>denoting the number of test cases. Each test case consists of two lines,\r\nThe first line contains <strong>N (no. of orders)</strong>.\r\nThe second line contains <strong>N-spaced integers from 1-10</strong><strong>^</strong><strong>9</strong> representing the number of the houses at which the order is to be delivered.",
  "explainOutput": "For each test case, output a <strong>single line</strong> with the integer which is, the total number of houses needed to be skipped by Jack.",
  "constraints": "<ul><li>1 &lt;= <strong>T </strong>&lt;= 100</li><li>1 &lt;= <strong>N</strong> &lt;= 10^5</li><li>Sum of <strong>N </strong>over all test cases doesn&rsquo;t exceed 10^6</li></ul>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>3</p>\r\n<p>5</p>\r\n<p>1 4 5 9 12</p>\r\n<p>3</p>\r\n<p>1 2 1</p>\r\n<p>3</p>\r\n<p>4 3 6</p>\r\n<p><br /><br /></p>\r\n<p><strong>Output: </strong></p>\r\n<p>7</p>\r\n<p>0</p>\r\n<p>1</p>",
  "explanation": "<p><strong> Case 1</strong>:</p>\r\n<p>Jack has to deliver to houses 1,4,5,9,12.</p>\r\n<p>Now between 1-4 he needs to skip 2,3</p>\r\n<p>And so on.</p>\r\n<p>Total houses skipped are 7.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Case 2</strong>:</p>\r\n<p>Jack has to deliver to houses 1,2,1.</p>\r\n<p>Now between 1-2 he needs to skip 0.</p>\r\n<p>And so on.</p>\r\n<p>Total houses skipped are 0.</p>\r\n<p><strong>Case 3:</strong></p>\r\n<p>&nbsp;Jack has to deliver to houses 4,3,6.</p>\r\n<p>Now between 4-6 he needs to skip 5.</p>\r\n<p>And so on.</p>",
  "contestCode": "SRM17",
  "createdAt": {
    "$date": {
      "$numberLong": "1597298276398"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1597565041796"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f35262e72b45b0022f74c56"
  },
  "tags": [
    "greedy",
    " adhoc"
  ],
  "code": "SRM17C",
  "points": 200,
  "name": "Max Discount",
  "description": "To recover from the losses faced during the lockdown period, a clothing store &lsquo;M&amp;H&rsquo; is providing discount coupons to people. There are 3 types of coupons which offer ₹800, ₹400, and ₹200 off.\r\nChef has <strong>P, Q, R </strong>number of coupons of ₹800, ₹400, and ₹200 off respectively. The prices of <strong>N</strong> products the chef wants to buy are given as an array, let's call it <strong>K</strong>. The condition for using any coupons is that the price of the product on which the coupon is being used should at least be <em>twice</em> the coupon value and only one coupon should be applied to a single product.\r\nEg: In order to use the ₹800 off coupon the price of the product should be at least ₹1600.\r\n<br />Your task is to help the chef determine the <strong>maximum</strong> discount he can get.",
  "explainInput": "The first line of input contains an integer <strong>T</strong> denoting the number of test cases.\r\nEach test case consists of two lines.\r\nFirst-line contains space-separated integers <strong>N, P, Q, R </strong>respectively.\r\nSecond-line will contain an array <strong>K </strong>of length <strong>N </strong>containing the prices of the products.",
  "explainOutput": "For each test case print a single line containing one integer, the <strong>maximum</strong> discount the chef can get.",
  "constraints": "1 &lt;= <strong>T</strong> &lt;= 50\r\n0 &lt;= <strong>P</strong>, <strong>Q</strong>, <strong>R</strong> &lt;= 200\r\n1 &lt;= <strong>N</strong> &lt;= 500\r\n1 &lt;= <strong>K</strong>[<strong>i</strong>] &lt;= 3000",
  "example": "Input:\r\n2  \r\n7 3 2 1  \r\n500 800 1200 2400 200 1000 700  \r\n5 1 0 1  \r\n1600 1000 100 1500 250  \r\n\r\nOutput:\r\n1800  \r\n1000  ",
  "explanation": "For the first test case, we can apply one ₹800 coupon to 2400, two ₹400 coupons to 1200 and 1000, and one ₹200 coupon to 500.  \r\n800 + 400 + 400 + 200 = 1800. \r\n",
  "contestCode": "SRM17",
  "createdAt": {
    "$date": {
      "$numberLong": "1597298902190"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1597472536877"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f353ac472b45b0022f74c5f"
  },
  "tags": [
    "brute force",
    "constructive"
  ],
  "code": "SRM17D",
  "points": 300,
  "name": "Weird Operations",
  "description": "You are given an array of length <strong>N </strong>\r\n<strong>A1 A2 A3 &hellip;. AN</strong>\r\nYou are allowed to do<strong> any</strong> of the following operations <strong>any</strong> number of times:\r\n<ul><li>Swap the element at first position with the element at the last position, i.e. <strong>Swap(A1, AN)</strong></li>\r\n<li>Right-Rotate the array <strong>even </strong>number of times. For e.g. if A = [ 3, 4, 5, 1, 6, 2 ], a Right-Rotate operation 2 times would result in A = [ 6, 2, 3, 4, 5, 1 ]</li></ul>\r\nYou are supposed to determine if it is possible to sort the given array in <strong>non-decreasing</strong> order ( i.e. A1 &lt;= A2 &lt;= A3 .&hellip;&hellip; &lt;= AN )",
  "explainInput": "<ul><li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li><li>The first line of each test case consists of a single integer <strong>N</strong></li><li>The second line of each test case consists of <strong>N </strong>space-separated integers <strong>A1 A2 A3 &hellip;.. AN</strong></li></ul>",
  "explainOutput": "For each test case print <strong>YES </strong>in a <strong>single line</strong> if it is possible to sort the array in non-decreasing order. Otherwise print <strong>NO </strong>\r\n<strong>Note : </strong>Make sure the output is in the same format as it is case-sensitive\r\n",
  "constraints": "<ul><li>1 &lt;= <strong>T</strong> &lt;= 100</li><li>1 &lt;= <strong>N</strong> &lt;= 1000</li><li>-10<sup>6</sup> &lt;= <strong>A</strong><strong>i </strong>&lt;= 10<sup>6</sup></li><li>Sum of <strong>N</strong> over all test cases doesn&rsquo;t exceed 1000</li></ul>",
  "example": "Input:  \r\n2   \r\n6  \r\n3 4 5 1 6 2  \r\n4  \r\n3 -1 5 2  \r\n\r\nOutput:\r\nYES  \r\nYES  \r\n",
  "explanation": "<strong>Test Case 1:&nbsp;</strong>\r\nWe can sort the array with the following operations:\r\n<ul><li>Right-Rotate 2 times -&gt; 6 2 3 4 5 1</li><li>Swap(A1, AN) -&gt; 1 2 3 4 5 6</li></ul>",
  "contestCode": "SRM17",
  "createdAt": {
    "$date": {
      "$numberLong": "1597304172129"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1597472793755"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f368132d83e600022d1b148"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM17A",
  "points": 100,
  "name": "Tallest Pair of Buildings",
  "description": "There are <strong>T</strong> numbers of blocks in an area. <strong>N</strong> is the number of buildings in the block and <strong>a</strong><strong>1</strong><strong>, a</strong><strong>2</strong><strong>, ..., a</strong><strong>N</strong> are the number of floors in each building. Print the number of floors of the tallest and the second tallest buildings respectively.\r\n<br />{You are given a sequence <strong>a</strong><strong>1</strong><strong>, a</strong><strong>2</strong><strong>, ..., a</strong><strong>N</strong>. Find the largest possible value of <strong>a</strong><strong>i</strong> , <strong>a</strong><strong>j</strong>, where 1 &le; <strong>i</strong> &lt; <strong>j</strong> &le; <strong>N</strong>.}",
  "explainInput": "The first line of the input contains an integer <strong>T</strong> denoting the number of blocks. The description of <strong>T</strong> blocks follows.\r\nThe first line of each description consists of a single integer <strong>N</strong> which denotes the number of buildings.\r\nThe second line of each description contains <strong>N</strong> space separated integers which denotes the number of floors in a building - <strong>a</strong><strong>1</strong><strong>, a</strong><strong>2</strong><strong>, ..., a</strong><strong>N</strong> respectively.\r\n\r\n<b>Note:</b> Large input file.",
  "explainOutput": "For <strong>each block</strong>, output a <strong>single line</strong> containing the number of floors of buildings - the largest and the second largest possible values of floors respectively separated by a space.\r\n<strong>Note: </strong>Print the answer for each block on a separate line",
  "constraints": "1 <= <strong>T</strong> <= 1000\r\n2 <= <strong>N</strong> <=1000\r\n1 <= <strong>ai</strong> <= 10000",
  "example": "Input:\r\n1\r\n4\r\n1 5 4 3\r\nOutput:\r\n5 4",
  "explanation": "Here we pick <strong>a2</strong> and <strong>a3</strong>. The largest number of floors equal to <b>5 4</b>.",
  "contestCode": "SRM17",
  "createdAt": {
    "$date": {
      "$numberLong": "1597387738093"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1597473012605"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6ad8a34bf84b0022982aff"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SEPT20B",
  "points": 200,
  "name": "I See You",
  "description": "<b>Skyler:</b>  Walt! Walt! Are you there? Open the door!\r\n<b>Walt:</b>  Yeah Sky just a minute\r\n<b>Skyler:</b>  Everyone is waiting for you Walt! What are you doing?\r\n<b>Walter Jr:</b>  Ddad! Ddad! Is everything okayy?\r\n<b>Hank:</b>  Hey buddy! Come on will ya?\r\n<b>Walt to Jesse:</b>  I have told you everything. Please don’t call me again.\r\n\r\nJesse has bought a locker to store methylamine. Walt had changed the password of the locker by changing the integer <b>K</b> and the binary string <b>S</b> displayed on the locker. To open the locker Jesse has to use the integer <b>K</b> given by Walt to generate the password to unlock the locker. \r\n\r\nInstructions given by Walt to Jesse:\r\nThe locker will display a string <b>S</b>. Start counting the number of 1’s in the string. When the number of 1’s encountered is <b>K</b>, reverse the current substring encountered, add it to the final string and remove it from <b>S</b>. You have to repeat this operation till you reach the last character of the string. The final string is the required password <b>P</b>.\r\n\r\nIt is not necessary for string <b>S</b> to be empty after all operations are performed.\r\n\r\nThere is a last try left and Jesse has used up all 19 tries. He doesn't want to mess this up so he asks for your help. Can you help him by giving him the password?\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases\r\nThe first line of each test case consists of an integer <b>K</b>\r\nThe second line of each test case consists of a binary string <b>S</b>",
  "explainOutput": "For each test case print a single line consisting of the password <b>P</b>. ",
  "constraints": "1 <= <b>T</b> <= 10<sup>3</sup>\r\n1 <= <b>|S|</b> <= 10<sup>5</sup>\r\n1 <= <b>K</b> <= 10<sup>5</sup>\r\n1 <= <b>|P|</b> <= <b>|S|</b>",
  "example": "<b>Input:</b>\r\n2\r\n2\r\n01001001101111\r\n1\r\n01\r\n\r\n<b>Output:</b>\r\n10010110011011\r\n10\r\n",
  "explanation": "<b>Test case 1:  </b>\r\nStarting from the first character, at the 5th character the total number of 1’s is 2. So, reversing the string, deleting it and adding it to the final string gives us:-\r\nS = 001101111\r\nFinal string = 10010\r\n\r\nSimilarly after parsing string S completely, S will be empty and final string will be 10010110011011\r\n",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600837795668"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1601036055503"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6ad96e4bf84b0022982b00"
  },
  "tags": [
    "math"
  ],
  "code": "SEPT20C",
  "points": 300,
  "name": "This… is not Math",
  "description": "Walt and Jesse were chilling on a beach after an intense session of cooking\r\n\r\n<b>Jesse:</b>  Yo beach, this is so relaxing\r\n<b>Walt:</b>  I have an amazing puzzle for you\r\n<b>Jesse:</b>  Yo! We've got a mathematician here, beach!\r\n<b>Walt:</b>  This... is not Math\r\n\r\nYou will be given a number <b>N</b>. Tell me the value obtained by multiplying the total number of factors of each factor of <b>N</b>. As the result can be very large, you should tell me the value modulo <b>10<sup>9</sup> + 7</b> (the remainder when divided by <b>10<sup>9</sup> + 7</b>).\r\n\r\nJesse is too tired to solve so he asks you to help him. Can you tell him the value?\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases\r\nThe first line of each test case consists of integer <b>N</b> ",
  "explainOutput": "For each test case print a single line consisting of the value obtained",
  "constraints": "1 <= <b>T</b> <= 10<sup>4</sup>\r\n1 <= <b>N</b> <= 10<sup>6</sup>",
  "example": "<b>Input:</b>\r\n3\r\n24\r\n12\r\n16\r\n\r\n<b>Output:</b>\r\n9216\r\n288\r\n120\r\n",
  "explanation": "<b>Test case 1:</b>  \r\n\r\nFactors of 24 are 1, 2, 3, 4, 6, 8, 12 and 24.\r\nNumber of factors of all factors of 24 are 1, 2, 2, 3, 4, 4, 6 and 8 respectively. Multiplying all factors modulo 10<sup>9</sup> + 7 gives us 9216.",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600837998152"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1601036741784"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6ae4ad4bf84b0022982b01"
  },
  "tags": [
    "greedy,data structures"
  ],
  "code": "SEPT20D",
  "points": 300,
  "name": "Salud   ",
  "description": "<p>Jesse: So I don't get to vote in this matter?</p>\r\n<p>Mike: I'll give you this: either all of us or none of us are going home</p>\r\n<p>Jesse needs to cook the perfect crystal to save the situation, however he runs into some trouble. Can you save him from the Eye of the Pink Teddy?</p>\r\n<p>Jesse has a sequence of <strong>N</strong> compounds having <strong>special values</strong> ranging from <strong>1</strong> to <strong>N </strong>which are all <strong>distinct</strong>.</p>\r\n<p>Let us denote this sequence as <strong>A</strong><strong><sub>1</sub></strong><strong> A</strong><strong><sub>2</sub></strong><strong> A</strong><strong><sub>3</sub></strong> &hellip; <strong>A</strong><strong><sub>N</sub></strong></p>\r\n<p>Jesse also has Walt&rsquo;s perfect sequence which is a permutation of the sequence <strong>A</strong>.</p>\r\n<p>Let us denote this sequence as <strong>B</strong><strong><sub>1</sub></strong><strong> B</strong><strong><sub>2</sub></strong><strong> B</strong><strong><sub>3</sub></strong> &hellip; <strong>B</strong><strong><sub>N</sub></strong></p>\r\n<p>In<strong> one move</strong>, Jesse can do the following in order:</p>\r\n<ol>\r\n<li>Select <strong>one </strong><strong>prefix </strong>of both the sequences of <strong>equal length</strong>.</li>\r\n<li>Rearrange the selected prefix of <strong>A</strong> such that it completely matches with the prefix of <strong>B</strong></li>\r\n<li>Delete &amp; remove both the prefixes from <strong>A</strong> &amp; <strong>B</strong></li>\r\n</ol>\r\n<p>This <strong>one move </strong>increase the purity of Jesse&rsquo;s crystal by <strong>1</strong></p>\r\n<p><br />Find the <strong>maximum purity</strong> Jesse can get out of these sequences, i.e. find the <strong>maximum</strong> number of such <strong>moves</strong> Jesse can make.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong></li>\r\n<li>The second line of each test case consists of <strong>N</strong> space-separated integers <strong>A</strong><strong><sub>1</sub></strong> to <strong>A</strong><strong><sub>N</sub></strong></li>\r\n<li>The third line of each test case consists of <strong>N</strong> space-separated integers <strong>B</strong><strong><sub>1</sub></strong> to <strong>B</strong><strong><sub>N</sub></strong></li>\r\n</ul>",
  "explainOutput": "<ul>\r\n<li>Print the answer (<strong>maximum</strong> possible purity) for each test case in a <strong>single line</strong>.</li>\r\n</ul>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 1000</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>A</strong><strong><sub>i</sub></strong>, <strong>B</strong><strong><sub>i</sub></strong> &lt;= <strong>N</strong></li>\r\n<li>All values of the sequence <strong>A </strong>are <strong>distinct</strong></li>\r\n<li>All values of the sequence <strong>B </strong>are <strong>distinct</strong></li>\r\n<li>Sum of <strong>N</strong> over all test cases doesn&rsquo;t exceed 10<sup>6</sup></li>\r\n</ul>",
  "example": "<b>Input</b>:  \r\n3    \r\n5    \r\n4 2 5 3 1  \r\n5 4 2 1 3  \r\n8  \r\n1 2 3 4 5 6 7 8   \r\n1 2 3 4 5 6 7 8  \r\n6  \r\n1 2 3 4 5 6  \r\n6 5 4 3 2 1  \r\n\r\n<b>Output</b>:\r\n2  \r\n8  \r\n1\r\n",
  "explanation": "<p><strong>Test case 1:&nbsp;</strong></p>\r\n<p>A : [4, 2, 5, 3, 1]</p>\r\n<p>B : [5, 4, 2, 1, 3]</p>\r\n<p>In the <strong>first move</strong> we can select a prefix of length 3:</p>\r\n<p>[4, 2, 5] &amp; [5, 4, 2]</p>\r\n<p>Rearranging the first prefix, we get</p>\r\n<p>[5, 4, 2] &amp; [5, 4, 2]</p>\r\n<p>Now we can delete both these prefixes.</p>\r\n<p>Resultant sequences :</p>\r\n<p>A : [3, 1]</p>\r\n<p>B : [1, 3]</p>\r\n<p>Similarly, in the <strong>second move</strong> we can select a prefix of length 2.</p>\r\n<p>Hence the answer is <strong>2</strong> moves, which is the maximum possible.</p>",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600840877483"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1600841332438"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6ae8654bf84b0022982b02"
  },
  "tags": [
    "greedy,data structures"
  ],
  "code": "SEPT20E",
  "points": 300,
  "name": "Half Measures",
  "description": "<p>Mike:I chose a half measure, when I should have gone all the way. I&rsquo;ll never make that mistake again. No more half measures.</p>\r\n<p>Saul: S&rsquo;all good, man. Calm down, these are just line segments.</p>\r\n<p>Mike stares at Saul with Dead Mackerel Eyes &amp; threatens him of breaking his legs if he doesn&rsquo;t solve this problem:</p>\r\n<p>You are given <strong>N </strong>line segments which all lie on the X-axis.</p>\r\n<p><strong>i</strong><sup><strong>th</strong></sup> of these segments start at <strong>L</strong><sub><strong>i</strong></sub> &amp; end at <strong>R</strong><sub><strong>i</strong></sub>&nbsp;</p>\r\n<p>It is guaranteed that all the values of <strong>L</strong><sub><strong>i</strong></sub> &amp; <strong>R</strong><sub><strong>i</strong></sub> together are <strong>distinct</strong>.</p>\r\n<p>A <strong>half-measured pair</strong> of line segments is defined as a pair (<strong>a</strong>, <strong>b</strong>) which follows the condition :- <strong>L</strong><sub><strong>a</strong></sub> &lt; <strong>L</strong><sub><strong>b</strong></sub> &lt; <strong>R</strong><sub><strong>a</strong></sub> &lt; <strong>R</strong><sub><strong>b</strong></sub></p>\r\n<p>Specifically the pairs which follow the condition <strong>L</strong><sub><strong>a</strong></sub> &lt; <strong>R</strong><sub><strong>a</strong></sub> &lt; <strong>L</strong><sub><strong>b</strong></sub> &lt; <strong>R</strong><sub><strong>b&nbsp;</strong></sub>or<strong> L</strong><sub><strong>a</strong></sub> &lt; <strong>L</strong><sub><strong>b</strong></sub> &lt; <strong>R</strong><sub><strong>b</strong></sub> &lt; <strong>R</strong><sub><strong>a&nbsp;</strong></sub>are <strong>not</strong> half-measured pairs.</p>\r\n<p>Help Saul to find out if there are any half-measured pairs present.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong></li>\r\n<li>The second line of each test case consists of <strong>N</strong> space-separated integers <strong>L</strong><sub><strong>1</strong></sub> to <strong>L</strong><sub><strong>N</strong></sub></li>\r\n<li>The third line of each test case consists of <strong>N</strong> space-separated integers <strong>R</strong><sub><strong>1</strong></sub> to <strong>R</strong><sub><strong>N</strong></sub></li>\r\n</ul>",
  "explainOutput": "<ul>\r\n<li>For each test case print <strong>YES </strong>in a single line if there is any presence of a <strong>half-measured pair</strong>.</li>\r\n<li>Otherwise print <strong>NO</strong> in a single line.</li>\r\n<li>The output is case-sensitive</li>\r\n</ul>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 1000</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>L</strong><sub><strong>i</strong></sub>, <strong>R</strong><sub><strong>i</strong></sub> &lt;= 10<sup>9</sup></li>\r\n<li>All values of <strong>L</strong><sub><strong>i</strong></sub> &amp; <strong>R</strong><sub><strong>i</strong></sub> together are <strong>distinct</strong></li>\r\n<li>Sum of <strong>N</strong> over all test cases doesn&rsquo;t exceed 10<sup>6</sup></li>\r\n</ul>",
  "example": "<b>Input</b>:\r\n2  \r\n4  \r\n13 3 10 5  \r\n20 8 17 6  \r\n5  \r\n1 2 5 7 8  \r\n4 3 6 10 9  \r\n\r\n\r\n<b>Output</b>:\r\nYES  \r\nNO  \r\n",
  "explanation": "<p><strong>Test case 1: </strong></p>\r\n<p>Line segment 3 (10, 17) &amp; Line segment 1 (13, 20) satisfies the condition of a half-measured pair (10 &lt; 13 &lt; 17 &lt; 20)</p>\r\n<p>This is the only half-measured pair present in this test case</p>\r\n<p><strong>Test case 2:</strong></p>\r\n<p>There are no half-measured pairs present</p>",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600841829744"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1601132263616"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6c59f08cc9c4002205a871"
  },
  "tags": [
    "implementation, maths"
  ],
  "code": "SEPT20A",
  "points": 100,
  "name": "Cancer Man",
  "description": "<p>Jesse: I&rsquo;m just saying, if you ever...saw your way clear to...you know, you and I...cooking a little more.\r\nWalter: Get the hell out of my property.\r\nJesse: What? I&rsquo;m just saying.\r\nWalter: Go and don&rsquo;t come back. Now!</p>\r\n<p>Jesse decides to impress Walter by showing his puzzle solving skills. So, Walter gave him a puzzle to solve which is as follows:</p>\r\n<p>Given an array&nbsp;<strong>A<sub>1</sub>, A<sub>2</sub></strong><strong>, &hellip;, A<sub>N</sub></strong>&nbsp;of length&nbsp;<strong>N</strong>&nbsp;and an integer&nbsp;<strong>X</strong>.</p>\r\n<p>Find&nbsp;<strong>(A<sub>1</sub></strong><strong>^X) + (A<sub>2</sub></strong><strong>^X) + &hellip; + (A<sub>N</sub></strong><strong>^X)</strong>, where&nbsp;<strong>(A<sub>i</sub>^X) denotes XOR of A<sub>i</sub></strong><strong>&nbsp;with X</strong>.\r\nFormally, you have to find&nbsp;<strong>&sum;</strong><strong>(A<sub>i</sub>^X) for i=1 to N</strong>.</p>\r\n<p>You have to help Jesse solve the puzzle or else Walter is gonna kick him out of his property.</p>",
  "explainInput": "<ul>\r\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">The first line of the input consists of a single integer </span><strong>T</strong><span style=\"font-weight: 400;\"> denoting the number of test cases.</span></li>\r\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">The first line of each test case consists of two space separated integers </span><strong>N</strong><span style=\"font-weight: 400;\">,</span><strong> X</strong><span style=\"font-weight: 400;\">.</span></li>\r\n<li><span style=\"font-weight: 400;\">The second line of each test case consists of </span><strong>N</strong><span style=\"font-weight: 400;\"> space separated integers </span><strong>A<sub>1</sub></strong><strong>, A<sub>2</sub></strong><strong>, &hellip;, A<sub>N</sub></strong><span style=\"font-weight: 400;\">.</span></li>\r\n</ul>",
  "explainOutput": "<p>Print the answer for each test case in a <strong>single line</strong>.</p>",
  "constraints": "<ul>\r\n<li>1 &lt;=<strong> T</strong> &lt;= 20</li>\r\n<li>0 &lt;= <strong>X</strong> &lt;= 10<sup>9</sup></li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 2*10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>A<sub>i</sub></strong>&nbsp;&lt;= 10<sup>9</sup></li>\r\n</ul>",
  "example": "<strong>Input:</strong>\r\n1\r\n5 6\r\n1 2 3 4 5\r\n\r\n<strong>Output:</strong>\r\n21",
  "explanation": "<p><strong>Test case 1:&nbsp;</strong>\r\n(1^6) + (2^6) + (3^6) + (4^6) + (5^6) = 21</p>",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600936432397"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1600941745833"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f6c60908cc9c4002205a872"
  },
  "tags": [
    "dfs, dsu"
  ],
  "code": "SEPT20F",
  "points": 350,
  "name": "Stay Out Of My Territory",
  "description": "<p>Walter: We have to move our production bulk wholesale now. How do we do that ?\r\nJesse: What do you mean? To like a distributor?\r\nWalter: Yes. Yes, that&rsquo;s what we need. We need a distributor now. Do you know anyone like that?</p>\r\n<p>Jesse needs to find a distributor who can spread the crystal to everyone in the city. Since he is busy shopping for ingredients, help him find one.</p>\r\n<p>There are <strong>N</strong> people in the city <strong>numbered from 1 to N</strong> and there are <strong>M</strong> business groups. Each group has <strong>K</strong> members.\r\nPeople in each group buy/sell the goods among themselves. Also, <strong>one person can be in multiple groups or no groups at all</strong>.</p>\r\n<p>If a person <strong>X</strong> gets the crystal from Jesse then he can spread it to the groups he is part of and one of the other group members can spread it to their groups and so on.</p>\r\n<p>We have to tell how many people in the city can get the crystal if Jesse deals with person <strong>X</strong> to be a distributor.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases.</li>\r\n<li>The first line of each test case consists of three space separated integers <strong>N</strong>, <strong>M</strong>, <strong>K.</strong></li>\r\n<li>The next <strong>M</strong> lines consists of K space separated integers denoting the members of each group.</li>\r\n</ul>",
  "explainOutput": "<p>Print a single line containing <strong>N</strong> space separated integers where the <strong>i</strong><sup><strong>th</strong></sup> integer is equal to the no. of people who can get the meth(including <strong>i</strong>) if Jesse deals with the <strong>i</strong><sup><strong>th</strong></sup>person to be the distributor.</p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 20</li>\r\n<li>1 &lt;= <strong>N</strong>,<strong> M, K</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>M*K</strong> &lt;= 2*10<sup>5</sup></li>\r\n<li><strong>K </strong>&lt;= <strong>N</strong></li>\r\n</ul>",
  "example": "<strong>Input:</strong>\r\n1\r\n10 3 3\r\n1 2 3\r\n3 4 5\r\n6 7 8\r\n\r\n<strong>Output:</strong>\r\n5 5 5 5 5 3 3 3 1 1",
  "explanation": "<p><strong>Test case 1: </strong>\r\nThere are 10 people in the city and groups with 3 members each.\r\nIf Jesse makes a deal with person 1 then he&rsquo;ll spread the crystal to 2 &amp; 3. 3 will then spread it to 4 &amp; 5. Thus, from person1 it can spread to 5 people.\r\nSimilarly, from 2 &amp; 3 it can spread to 5 people as well.\r\nNow 6, 7, 8 are in a group so they can spread it among themselves. Thus, 6, 7 &amp; 8 can spread it to 3 people.\r\n9 &amp; 10 are not in any group thus they will keep the goods to themselves.</p>",
  "contestCode": "SEPT20",
  "createdAt": {
    "$date": {
      "$numberLong": "1600938128224"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1601038536842"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f81693ae5737600220575c1"
  },
  "tags": [
    "adhoc,strings"
  ],
  "code": "GSL01A",
  "points": 100,
  "name": "Joey learns French",
  "description": "Joey has got a chance to play the male lead role in a French play. But unfortunately, Joey doesn’t know French. Phoebe decides to teach Joey French. After teaching him the French alphabets, she gives him an assignment to differentiate between French and English alphabets and to count the number of French alphabets in a given sequence of alphabets. French alphabets consist of <b>two or more</b> characters.\r\n\r\nGiven <b>N</b> alphabets find the number of occurrences of the French alphabets.\r\n\r\nJoey is finding it difficult and needs your help to complete this assignment.\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case consists of a single integer <b>N</b>.\r\nThe second line of each test case consists of <b>N</b> space separated lower case alphabets.\r\n",
  "explainOutput": "Print the number of occurrences of French alphabets for each test case in a single line.\r\n",
  "constraints": "1 <= <b>T</b> <= 10<sup>3</sup>\r\n1 <= <b>N</b> <= 10<sup>5</sup> \r\n1 <= <b>|alphabet|</b> <= 12\r\n",
  "example": "<b>Input:</b>\r\n3\r\n6\r\nah h bay i m kah\r\n5\r\np n oo eff l\r\n4\r\nm z u i\r\n\r\n<b>Output:</b>\r\n3\r\n2\r\n0\r\n",
  "explanation": "In the first test case, there are 3 French alphabets - ah, bay, kah.\r\nIn the second test case, there are 2 French alphabets - oo and eff.\r\nIn the third test case, there are no French alphabets.\r\n",
  "contestCode": "GSL01",
  "createdAt": {
    "$date": {
      "$numberLong": "1602316602928"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1602321164278"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f817795e5737600220575c2"
  },
  "tags": [
    "dp"
  ],
  "code": "GSL01C",
  "points": 250,
  "name": "Smelly Cat",
  "description": "<b>Rachel:</b>   Well now! How come you guys have never played poker with us?\r\n<b>Phoebe:</b>   Yeah what is that like some kind of a guy thing? Like it’s poker so only guys can play.\r\n<b>Ross:</b>   No! Women are welcome to play.\r\n<b>Phoebe:</b>   Oh okay! So then what is it? Some kind of you know.. like some kind of you know like..\r\n<b>Phoebe:</b>   Alright. What is it?\r\n\r\nThe guys are teaching the girls to play another card game after playing poker. The players will be given <b>N</b> cards. Each card has two sides. The value on the front side of the card is <b>A[i]</b> and <b>-A[i]</b> on its back. The player will be given <b>Q</b> queries. Each query consists of <b>L</b> and <b>R</b> such that all cards from indices <b>L</b> to <b>R</b> (including <b>L</b> and <b>R</b>) will be switched to the opposite side. \r\n\r\nInitially all cards are kept such that the positive side is facing the player. The player can see the cards only once at the beginning. The player has to give the sum of the values on the cards after performing all queries. \r\n\r\nNow it is your turn to play the game. Phoebe is willing to sing the iconic song “Smelly Cat” for you if you win this game. Wouldn’t you like to hear her sing?\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. \r\nThe first line of each test case consists of two integers <b>N</b> and <b>Q</b>. \r\nThe second line of each test case consists of <b>N</b> space separated integers <b>A<sub>1</sub>, A<sub>2</sub>, …, A<sub>n</sub>.</b>\r\nIn the next <b>Q</b> lines, each line contains two indices <b>L</b> and <b>R</b>.\r\n",
  "explainOutput": "For each test case, output a single line containing the final sum of the array\r\n",
  "constraints": "1 <= <b>T</b> <= 10<sup>3</sup>\r\n1 <= <b>N</b> <= 10<sup>5</sup>\r\n1 <= <b>Q</b> <= 10<sup>5</sup>\r\n1 <= <b>A[i]</b> <=10<sup>5</sup>\r\n1 <= <b>L</b> <= <b>R</b> <= <b>N</b>\r\n",
  "example": "<b>Input:</b>\r\n2\r\n3 3\r\n20 10 11\r\n1 2\r\n1 3\r\n2 3\r\n4 2\r\n2 5 12 17\r\n1 3\r\n2 4\r\n \r\n<b>Output:</b>\r\n21\r\n-2\r\n",
  "explanation": "<b>Test Case 1:</b>\r\nThe elements of the array after the execution every query\r\nAfter the 1st query -> { -20 , -10 , 11 }\r\nAfter the 2nd query -> { 20 , 10 , -11 }\r\nAfter the 3rd query -> { 20 , -10 , 11 }\r\nHence, the sum of all the elements is <b>21</b>.\r\n\r\n",
  "contestCode": "GSL01",
  "createdAt": {
    "$date": {
      "$numberLong": "1602320277416"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1602330624678"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f828e1a253e190022125d37"
  },
  "tags": [
    "adhoc"
  ],
  "code": "GSL01B",
  "points": 200,
  "name": "Joey doesn’t share food!",
  "description": "Joey and Sarah are on a dinner date again and much to Joey’s annoyance, Sarah is eyeing on his stuffed clams yet again. Now, Joey needs to safeguard his clams for the maximum amount of time. Sarah wants to get hold of his clams as soon as possible. They play a strange version of chess to decide how fast Sarah can get hold of his clams. \r\nThey are sitting at a chessboard table of size 8x8. Sarah always plays as white and Joey as black.\r\nWhite has <b>2 rooks</b> to play with (and no king) while black only has a <b>king</b>. White always plays first. In one second only one piece can be moved. \r\nJoey is further handicapped by not allowing him to kill any <b>rooks</b>.\r\nJoey will be unsuccessful in sharing his food once the king has been <b>check-mated</b> or <b>stale-mated</b>.\r\nThe pieces are positioned at start such that the two rooks will always be anywhere in the two rightmost columns <b>a</b> or <b>b</b> and the king in the leftmost column <b>h</b>. But later they are free to move to any other position.\r\nGiven the initial positions of the chess pieces on the chessboard can you predict the <b>maximum time </b>(in seconds) for which Joey will be successful in not sharing his food?\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases. Each test case has a single line containing 3 space-separated strings denoting the position of the <b>2 white rooks</b> and <b>1 black king</b> in order.\r\nThe first character of the position is a <b>lowercase</b> english character denoting the <b>column</b> and the second character is a <b>digit</b> denoting the <b>row</b>. It is guaranteed that all 3 positions do not coincide.\r\n",
  "explainOutput": "For each test case in a single line, print the minimum time taken by Sarah to <b>check-mate</b> or <b>stale-mate</b> Joey.\r\n",
  "constraints": "1<= <b>T</b> <=10<sup>4</sup>\r\n<b>King</b> can never be in <b>check</b> initially.\r\n",
  "example": "<b>Input:</b>\r\n2\r\na1 b2 h5\r\na1 a3 h2\r\n\r\n<b>Output:</b>\r\n3\r\n1\r\n",
  "explanation": "<b>For test case 1 -</b>\r\n<img src=\"https://imgur.com/WFX8tAI.png\" width=\"400\" height=\"400\">\r\n\r\nRook moves from b2 -> g2\r\nKing moves from h5 -> h4\r\nRook moves from a1 -> h1\r\nResulting in a checkmate in <b>3</b> moves.\r\n\r\n<b>For test case 2 -</b>\r\n<img src=\"https://imgur.com/OeJ6t0r.png\" width=\"400\" height=\"400\">\r\n\r\na1 -> g1\r\nThe king is not in check and also cannot move anywhere.\r\nResulting in a stalemate in <b>1</b> move.\r\n\r\n",
  "contestCode": "GSL01",
  "createdAt": {
    "$date": {
      "$numberLong": "1602391578844"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1602491520666"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f9b1c991f59c70022ee5f45"
  },
  "tags": [
    "strings"
  ],
  "code": "SRM18A",
  "points": 100,
  "name": "Hulk’s Keyboard",
  "description": "Hulk bashed at his keyboard and now some keys do not work. He types each key exactly once from A to Z (all caps) and stores the text that is displayed on the screen in a string <b>S</b>. These are the keys that work.\r\nFind if he can type out another string <b>P</b> on his keyboard.",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case consists of string <b>S</b>.\r\nThe next line consists of string <b>P</b>.",
  "explainOutput": "Print “YES” if it is possible to type the string <b>P</b>, otherwise print “NO”.",
  "constraints": "1  <= <b>T</b> <= 1000\r\n1 <= <b>|S|</b> <= 26\r\n1 <= <b>|P|</b> <= 100\r\n",
  "example": "Input:\r\n2\r\nSPIDERMAN\r\nSUPERMAN\r\nCHESBOARD\r\nROADRASH\r\n\r\nOutput:\r\nNO\r\nYES",
  "explanation": "Test case 1:\r\nThe ‘U’ key is broken.\r\nTest case 2:\r\nAll required keys are working fine.",
  "contestCode": "SRM18",
  "createdAt": {
    "$date": {
      "$numberLong": "1604000921308"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1604000953555"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f9bc7e84a081b0022c2d44d"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM18B",
  "points": 200,
  "name": "Typical Parker Luck",
  "description": "<p>Oscorp is under attack and Gwen Stacy is stuck in the building. Spidey needs to reach Oscorp quickly. The problem is, Spidey&rsquo;s jump power is different for different blocks. So, Spidey should smartly decide which block to land so that he can save Gwen.&nbsp;</p>\r\n<p>There are <strong>N</strong> blocks numbered <strong>1-N</strong> that spidey has to cover before reaching Oscorp, these <strong>N</strong> blocks have different power levels<strong>P</strong><strong>1</strong><strong>, P</strong><strong>2</strong><strong>, P</strong><strong>3</strong><strong>, &hellip; , P</strong><strong>N</strong>which represents Spidey&rsquo;s jump power on each block. For example, if Spidey is on 3rd block and P3=5, then he can jump to anywhere in between 4th block and 8th block.</p>\r\n<p>Oscorp is located on the <strong>Nth</strong> block.</p>\r\n<p>Help spidey by finding the minimum number of jumps required to reach Oscorp.</p>",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases.\r\nThe first line of each test case consists of integer N.\r\nThe second line consists of N space-separated integers P1, P2, P3, … , P",
  "explainOutput": "<p>For each test case, output a single line with the integer which is the minimum number of jumps required.</p>",
  "constraints": "<p>&nbsp;1&lt;= T &lt;= 500</p>\r\n<p>&nbsp;1&lt;= N &lt;= 1e5</p>\r\n<p>&nbsp;1&lt;= Pi &lt;= 1000</p>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>1</p>\r\n<p>5</p>\r\n<p>2 3 1 1 4</p>\r\n<p><strong>Output:</strong></p>\r\n<p>2</p>",
  "explanation": "<p>Minimum number of jumps required are 2. Jump 1 from block 1 to block 2, jump 2 from block 2 to last block.</p>\r\n<p><br /><br /><br /></p>",
  "contestCode": "SRM18",
  "createdAt": {
    "$date": {
      "$numberLong": "1604044776363"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1604467840247"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f9d08ccf6afbe00225d2aa0"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM18C",
  "points": 200,
  "name": "POINTBREAK",
  "description": "<p>Thor is stuck in Sakar and wants to get off it. He finds Tony&rsquo;s quinjet which is voice command protected. Thor eventually figures out that his activation command is Point Break but still Tony has another security in place which is a problem and Thor is running out of patience, so help him solve the problem before God of thunder gets angry.</p>\r\n<p>Given an array of integers [A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, &hellip;&hellip;. ,A<sub>N</sub>] of length N and Q queries with integers L and R representing the range of index of the subarray. You have to find which of the given subarrays has the maximum number 1&rsquo;s when the integer elements of the subarray are represented in binary form and output the number of 1&rsquo;s in it.</p>",
  "explainInput": "<p>The first line of the input consists of a single integer T denoting the number of test cases.</p>\r\n<p>The first line of each test case consists of two space-separated integers N, Q.</p>\r\n<p>The second line of each test case consists of N space-separated integers A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub>, &hellip;&hellip;. ,A<sub>N</sub>.</p>\r\n<p>The next Q lines of each test case consist of two space-separated integers L, R.</p>",
  "explainOutput": "Print a single integer answer for each test case in a single line.",
  "constraints": "<p>1 &lt;= T &lt;= 100</p>\r\n<p>2 &lt;= N &lt;= 10<sup>5</sup></p>\r\n<p>O &lt;= Ai &lt;= 1e9</p>\r\n<p>1 &lt;= Q &lt;= 10<sup>5</sup></p>\r\n<p>1 &lt;= L &lt; R &lt;= N</p>",
  "example": "Input:\r\n1\r\n6 3\r\n2 4 3 5 1 2\r\n1 3\r\n4 6\r\n3 5\r\n\r\nOutput:\r\n5",
  "explanation": "For [1, 3] the numbers in binary form are [10, 100, 11], number of 1’s = 4.\r\nFor [4, 6] the numbers in binary form are [101, 1, 10], number of 1’s = 4.\r\nFor [3, 5] the numbers in binary form are [11, 101, 1], number of 1’s = 5.\r\nThe maximum is 5.",
  "contestCode": "SRM18",
  "createdAt": {
    "$date": {
      "$numberLong": "1604126924051"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1604126924051"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5f9d0adef6afbe00225d2aa1"
  },
  "tags": [
    "dp"
  ],
  "code": "SRM18D",
  "points": 300,
  "name": "14000605",
  "description": "<p>Ironman, Dr. Strange, and others are on Titan waiting for Thanos to arrive, in the meantime Dr. Strange uses the time stone to see all the possible outcomes of the upcoming fight.</p>\r\n<p><strong>Tony Stark:</strong> Strange, we alright?</p>\r\n<p><strong>Tony Stark:</strong> You're back. You're alright.</p>\r\n<p><strong>Peter Parker:</strong> Hey, what was that?</p>\r\n<p><strong>Stephen Strange:</strong> I went forward in time to view alternate futures. To see all the possible outcomes of the coming conflict.</p>\r\n<p><strong>Tony Stark:</strong> How many did we win?</p>\r\n<p><strong>Stephen Strange:</strong><em>[Pause]</em> &hellip;&hellip;. !</p>\r\n<p>Thanos has health H, Avengers have N attacks, each with a unique damage D<sub>1</sub>, D<sub>2</sub>, D<sub>3</sub>, &hellip; , D<sub>N</sub>. They can perform each attack multiple times.</p>\r\n<p>The avengers win the fight if the health of thanos strictly reaches 0 after some finite number of attacks.</p>\r\n<p>It cannot go below 0.</p>\r\n<p>You have to help Dr. Strange count the number of times Avengers win so that he can answer Tony&rsquo;s question.</p>\r\n<p>As the answer can be rather large print it modulo 1000000007 (10<sup>9</sup>&thinsp;+&thinsp;7).</p>",
  "explainInput": "<p>The first line of the input consists of a single integer T denoting the number of test cases.</p>\r\n<p>The first line of each test case consists of two space-separated integers H, N.</p>\r\n<p>The second line of each test case consists of N space-separated integers D<sub>1</sub>, D<sub>2</sub>, D<sub>3</sub>, &hellip;&hellip;. ,D<sub>N</sub>.</p>",
  "explainOutput": "<p>Output a single integer &mdash; the number of times the avengers win modulo 1000000007 (10<sup>9</sup>&thinsp;+&thinsp;7).</p>",
  "constraints": "1 <= T <= 100\r\n1 <= H <= 101\r\n1 <= N <= 6\r\n1 <= D <= H+1",
  "example": "Input:\r\n2\r\n5 3\r\n2 3 5\r\n10 2\r\n7 4\r\n\r\nOutput:\r\n3\r\n0",
  "explanation": "Test case 1:\r\nPossible chain of attacks are:\r\n5\r\n2 3\r\n3 2\r\nThe answer is 3 % (10<sup>9</sup> + 7) = 3.",
  "contestCode": "SRM18",
  "createdAt": {
    "$date": {
      "$numberLong": "1604127454977"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1604238653899"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fae67ab77dd8c0022cb042f"
  },
  "tags": [
    "math"
  ],
  "code": "SRM19C",
  "points": 150,
  "name": "Dual Divisibility",
  "description": "You will be given two integers <strong>A</strong> &amp; <strong>B</strong> <br/>\r\nYou are supposed to find the <strong>greatest </strong>integer <strong>X</strong> such that <br/>\r\nboth of the following conditions are met\r\n<ul>\r\n<li><strong>A</strong> % <strong>X</strong> == 0</li>\r\n<li><strong>X</strong> % <strong>B</strong> == 0</li>\r\n</ul>\r\nHere % represents the modulo operator <br/>\r\nIn simple words you are supposed to find the <strong>greatest</strong> integer such that it divides <strong>A </strong>&amp; is divisible by <strong>B</strong> <br/>\r\n<br />If there is no such integer possible, print <strong>-1</strong>",
  "explainInput": "<ul>\r\n<li>The first line of each test case consists of a single integer <strong>T </strong>denoting the number of test cases</li>\r\n<li>Each test case consists of a line containing 2 space-separated integers <strong>A</strong> &amp; <strong>B</strong> respectively</li>\r\n</ul>",
  "explainOutput": "<p>For each test case, if the answer exists, print <strong>X</strong>. <br />Else print <strong>-1 </strong>in a single line</p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>A</strong>, <strong>B</strong> &lt;= 10<sup>18</sup></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2    \r\n6 3    \r\n4 6  \r\n\r\n<b>Output:</b>\r\n6   \r\n-1    \r\n  ",
  "explanation": "<p><strong>Test Case 1:</strong><br />It can be proved that no integer greater than 6 satisfies both the conditions together<br /><br /><strong>Test Case 2:</strong><br />There is no such integer possible which satisfies both the conditions together</p>",
  "contestCode": "SRM19",
  "createdAt": {
    "$date": {
      "$numberLong": "1605265323560"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1605265323560"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fae6cea77dd8c0022cb0432"
  },
  "tags": [
    "greedy,data structures"
  ],
  "code": "SRM19E",
  "points": 300,
  "name": "Goofy meets Miu",
  "description": "<p>Goofy is a humble dog who believes in everything the humans say about the greatness of binary search. It was a great coincidence when he came across Miu - The smart cat who hates humans who overkill easy problems with binary search &amp; also just humans in general</p>\r\n<p>Miu gives Goofy an array of <strong>N</strong> integers <strong>A</strong><sub><strong>1</strong></sub><strong> A</strong><sub><strong>2</strong></sub> &hellip;. <strong>A</strong><strong><sub>N</sub>&nbsp;</strong><br />For each element in the array <strong>A</strong><sub><strong>i</strong></sub> : Miu asks him to find <strong>L</strong><sub><strong>i&nbsp;</strong></sub>which is the <strong>closest position</strong> to the <strong>left</strong> of <strong>A</strong><sub><strong>i</strong></sub> such that <strong>A</strong><sub><strong>L</strong><sub><strong>i</strong></sub></sub>&gt;<strong> A</strong><strong><sub>i</sub>&nbsp;</strong><br />If there is no such element to the left of <strong>A</strong><sub><strong>i</strong></sub> print -1. <br />Similarly, she also asks him to find <strong>R</strong><sub><strong>i&nbsp;</strong></sub>which is the <strong>closest position</strong> to the <strong>right</strong> of <strong>A</strong><sub><strong>i</strong></sub> such that <strong>A</strong><sub><strong>R<sub>i</sub></strong></sub>&gt;<strong> A</strong><strong><sub>i</sub>&nbsp;</strong><br />If there is no such element to the right of <strong>A</strong><sub><strong>i</strong></sub> print -1</p>\r\n<p>Read examples &amp; explanation for clarification</p>",
  "explainInput": "<ul>\r\n<li>The first line of each test case consists of a single integer <strong>T </strong>denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong></li>\r\n<li>The second line of each test case consists of <strong>N </strong>space-separated integers <strong>A</strong><sub><strong>1</strong></sub><strong> A</strong><sub><strong>2</strong></sub> &hellip;. <strong>A</strong><sub><strong>N</strong></sub></li>\r\n</ul>",
  "explainOutput": "<p>For each test case:</p>\r\n<ul>\r\n<ul>\r\n<li>The first line should consist of <strong>N </strong>space-separated integers <strong>L</strong><sub><strong>1</strong></sub><strong> L</strong><sub><strong>2</strong></sub> &hellip;. <strong>L</strong><sub><strong>N</strong></sub></li>\r\n<li>The second line should consist of <strong>N</strong> space-separated integers&nbsp;<strong><strong>R</strong><sub><strong>1</strong></sub><strong> R</strong><sub><strong>2</strong></sub> &hellip;. <strong>R</strong><sub><strong>N</strong></sub></strong></li>\r\n</ul>\r\n</ul>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 1000</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>A</strong><sub><strong>i </strong></sub>&lt;= 10<sup>9</sup></li>\r\n<li>Sum of <strong>N </strong>overall test cases doesn&rsquo;t exceed 10<sup>6</sup></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2    \r\n5  \r\n2 5 10 4 9   \r\n6  \r\n3 5 2 1 4 5  \r\n\r\n<b>Output:</b>\r\n-1 -1 -1 3 3  \r\n2 3 -1 5 -1  \r\n-1 -1 2 3 2 -1  \r\n2 -1 5 5 6 -1  \r\n",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p>For the array <strong>L</strong>:</p>\r\n<p><strong>A</strong><sub><strong>1</strong></sub> = 2: There is no element greater than 2 to the left of A<sub>1</sub><br /><strong>A</strong><sub><strong>2</strong></sub> = 5: There is no element greater than 5 to the left of A<sub>2</sub><br /><strong>A</strong><sub><strong>3</strong></sub> = 10: There is no element greater than 10 to the left of A<sub>3</sub><br /><strong>A</strong><sub><strong>4</strong></sub> = 4: A<sub>3</sub> is the closest element to the left of A<sub>4</sub> which is strictly greater than A<sub>4</sub> (10 &gt; 4)<br /><strong>A</strong><sub><strong>5</strong></sub> = 9: A<sub>3</sub> is the closest element to the left of A<sub>5</sub> which is strictly greater than A<sub>5</sub> (10 &gt; 9)</p>\r\n<p>For the array <strong>R</strong>:</p>\r\n<p><strong>A</strong><sub><strong>1</strong></sub> = 2: A<sub>2</sub> is the closest element to the right of A<sub>1</sub> which is strictly greater than A<sub>1</sub> (5 &gt; 2) <br /><strong>A</strong><sub><strong>2</strong></sub> = 5: A<sub>3</sub> is the closest element to the right of A<sub>2</sub> which is strictly greater than A<sub>2</sub> (10 &gt; 5) <br /><strong>A</strong><sub><strong>3</strong></sub> = 10: There is no element to the right of A<sub>3</sub> which is greater than A<sub>3</sub><br /><strong>A</strong><sub><strong>4</strong></sub> = 4: A<sub>5</sub> is the closest element to the right of A<sub>4</sub> which is strictly greater than A<sub>4</sub> (9 &gt; 4) <br /><strong>A</strong><sub><strong>5</strong></sub> = 9: There is no element to the right of A<sub>5</sub> which is greater than A<sub>5</sub></p>",
  "contestCode": "SRM19",
  "createdAt": {
    "$date": {
      "$numberLong": "1605266666741"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1605267395186"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fae92e8a9b4ba002281a81e"
  },
  "tags": [
    "adhoc,strings "
  ],
  "code": "SRM19B",
  "points": 100,
  "name": "Keys for the Keyboard",
  "description": "Eve has an unusual keyboard with keys denoting lowercase Latin letters denoted by string <b>S</b>. She wants to type a string <b>A</b> by using each key not more than once. Anticipating the characters required, she puts <b>X</b>$ into her pocket and leaves. Suddenly she doubts if she has the right amount required to pay for which she needs your help.\r\n\r\nCan you tell her the price she will have to pay if each character costs 1$?\r\n",
  "explainInput": "The first line of each test case consists of a single integer <b>T</b> denoting the number of test cases  \r\nThe first line of each test case consists of a string <b>S</b>\r\nThe second line of each test case consists of a string <b>A</b>",
  "explainOutput": "For each test case , print the price she will have to pay in dollars.\r\n",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>|S|</b> <= 10<sup>5</sup>\r\n1 <= <b>|A|</b> <= 10<sup>5</sup>",
  "example": "<b>Input:</b>\r\n2\r\nabcde\r\nhello\r\nefghi\r\nijkle\r\n\r\n\r\n\r\n<b>Output:</b>\r\n4\r\n3\r\n",
  "explanation": "<b>Test Case 1:</b>\r\n\r\nExcept ‘e’, all the other characters have to be bought.\r\n",
  "contestCode": "SRM19",
  "createdAt": {
    "$date": {
      "$numberLong": "1605276392746"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1605428707149"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fae9698a9b4ba002281a820"
  },
  "tags": [
    "bitwise,math,dp"
  ],
  "code": "SRM19D",
  "points": 200,
  "name": "XORXORXOR",
  "description": "You are given an array of <b>N</b> integers <b>A<sub>1</sub>, A<sub>2</sub>, …., A<sub>N</sub></b> and a value <b>K</b> (1<=<b>K</b><=<b>N</b>) .\r\n\r\nCalculate the xor of the xors of all subarrays of size <b>K</b>.\r\n",
  "explainInput": "The first line of each test case consists of a single integer <b>T</b> denoting the number of test cases  \r\nThe first line of each test case consists of a two integers <b>N</b> and <b>K</b>\r\nThe second line of each test case consists of <b>N</b> space-separated integers <b>A<sub>1</sub> A<sub>2</sub> …. A<sub>N</sub></b>\r\n",
  "explainOutput": "For each test case , print the xor of xors of all subarrays of size <b>K</b> \r\n",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N</b> <= 10<sup>5</sup>\r\n1 <= <b>K</b> <= <b>N</b>\r\n1 <= <b>A[i]</b> <= 10<sup>9</sup>\r\n",
  "example": "<b>Input:</b>\r\n3\r\n8 4\r\n2 3 4 5 6 8 7 4\r\n6 4\r\n1 3 8 4 3 6\r\n5 1\r\n3 5 9 8 7 \r\n\r\n<b>Output:</b>\r\n10\r\n11\r\n0\r\n",
  "explanation": "<b>Test Case 1:</b>\r\n\r\nXor of all subarrays -\r\n{2,3,4,5} ->  0\r\n{3,4,5,6} ->  4\r\n{4,5,6,8} -> 15\r\n{5,6,8,7} -> 12\r\n{6,8,7,4} -> 13\r\n\r\nXor of these values gives us 10.\r\n",
  "contestCode": "SRM19",
  "createdAt": {
    "$date": {
      "$numberLong": "1605277336938"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1605277422265"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fb0bdc8b5538800223c1c96"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM19A",
  "points": 100,
  "name": "The intelligent investor",
  "description": "Growmore brokerage firm launched a DIWALI SPECIAL offer of 50% off on the total amount invested. \r\nThis limited time offer is valid from 10-16 November.\r\nHurry and invest for your future.\r\nSo you decide to invest all your money and purchase all of their shares. Can you find out how much money will you need to make the purchase?\r\n",
  "explainInput": "The first line of the input contains an integer <b>T</b> denoting the number of test cases. The description of <b>T</b> test cases follows.\r\nFirst line of each test case has a single integer <b>N</b>.\r\nSecond line of each test case has <b>N</b> space separated integers, which are the costs of shares.",
  "explainOutput": "For each test case, output a single line with the total amount that you will be paying after availing the 50% discount, <b>exactly with one digit after the decimal point</b>.",
  "constraints": "1 <= <b>T</b> <= 1000\r\n1 <= <b>N</b> <= 1000\r\n1 <= Cost of share <= 1000",
  "example": "Input:\r\n2\r\n3\r\n2 3 4\r\n4\r\n11 2 3 4\r\nOutput:\r\n4.5\r\n10.0",
  "explanation": "<b>Test Case 1:</b>\r\nTotal Cost = 2+3+4 = 9\r\nAfter availing 50% discount = 9 * (50/100) = 4.5\r\n ",
  "contestCode": "SRM19",
  "createdAt": {
    "$date": {
      "$numberLong": "1605418440533"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1605437103339"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbf99a59296860022aa89da"
  },
  "tags": [
    "string"
  ],
  "code": "NOV20A",
  "points": 100,
  "name": "Fun With Pangrams!",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b66d36591c77d0020b63d0b\">Shridhar Ravi</a></p>\r\nVipul recently learned in school about ‘Pangrams’. A pangram is a word or sentence if all the characters of that language are used in it at least once. Vipul and his partner have been assigned a task to find out if the string <b>S</b> is a pangram for the given language <b>L</b>. Vipul has chosen you as your partner. Help Vipul to finish the task.\r\n",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of test cases.\r\nEach test case has 2 lines as follows:\r\nThe first line of each test case contains the given language <b>L</b>\r\nThe second line of each test case contains the string <b>S</b>  \r\nAll characters include only lowercase and uppercase english alphabets\r\n",
  "explainOutput": "For each test case:\r\n•\tprint “YES” (without the quotes) if the string <b>S</b> is a Pangram\r\n•\tprint “NO” (without the quotes) if the string <b>S</b> is NOT a Pangram\r\n",
  "constraints": "Constraints:\r\n1 <= <b>T</b> <= 1000\r\n2 <= <b>|L|</b> <= 52\r\n2 <= <b>|S|</b> <= 1000",
  "example": "Input:\r\n2\r\nGsTARENa\r\ngstARENa\r\nGSTARENa\r\nSiesGSTARENa\r\n\r\nOutput:\r\nNO\r\nYES\r\n",
  "explanation": "<b>Test Case 1:</b> The string is missing ‘G’ and ‘T’.\r\n<b>Test Case 2:</b> All required characters are present in the string.",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606392229965"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606479251631"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbf9d829296860022aa89db"
  },
  "tags": [
    "adhoc"
  ],
  "code": "NOV20B",
  "points": 150,
  "name": "Harshad Analyses Profits",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b5d756b37392f89933e7515\">Vipul Raghuvanshi</a></p>\r\nHarshad Mehta is a very clever shopkeeper and he always wants to make more profit. He has a habit of analysing his sales everytime. For <b>N</b> days, he writes his profits which are strictly in increasing order or decreasing order separately for simplicity of his analysis.\r\nIf the profits of 10 days are 1,2,6,4,2,3,1,8,9,7 then, Harshad groups them as [1,2,6] which is increasing, [6,4,2] which is decreasing, [2,3] which is increasing, [3,1] which is decreasing, [1,8,9] which is increasing and [9,7] which is decreasing.\r\nHelp Harshad to group these profits.\r\nNote: You have to start from 1st day and move ahead to pick the most continuous increasing or decreasing array and print it i.e if [1,2,3] is an increasing sequence then you <b>should not</b> print [1,2] and [2,3] separately.\r\n",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. The description of each test case follows:\r\nFirst line of each test case contains <b>N</b> the number of days and the second line contains N numbers P[1] to P[n] where P[i] denotes profit for day i.  \r\n\r\nNote: Profits of no two consecutive days are equal.\r\n",
  "explainOutput": "For each test case, output all groups of profits either in increasing or decreasing order in separate lines in the given order.",
  "constraints": "1 <= T <= 100\r\n2 <= N <= 100\r\n1 <= P[i] <= 10,000",
  "example": "Input:\r\n1\r\n10\r\n1 2 6 4 2 3 1 8 9 7\r\n\r\nOutput:\r\n1 2 6\r\n6 4 2\r\n2 3\r\n3 1\r\n1 8 9\r\n9 7\r\n",
  "explanation": "The groups of [1 2 6 4 2 3 1 8 9 7] are [1,2,6], [6,4,2], [2,3], [3,1], [1,8,9] and [9,7]. Which are printed in separate lines.\r\n",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606393218151"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606393309595"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbf9f6f9296860022aa89dc"
  },
  "tags": [
    "math"
  ],
  "code": "NOV20C",
  "points": 200,
  "name": "Following the Trail",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b647abb58d190002048aaba\">Chinmay Chandak</a></p>\r\n\r\nDetective Byomkesh Bakshi is investigating a case where he comes across a puzzle. The rules of the puzzle are defined as:\r\n\r\n1. Start with a given integer N\r\n2. N<sub>new</sub> → N<sub>old</sub>/2, when N<sub>old</sub> is even\r\n3. N<sub>new</sub> → 3N<sub>old</sub> + 1, when N<sub>old</sub> is odd\r\n4. Sequence stops at N = 1\r\n\r\nAnswer to the puzzle is the number of terms in the sequence (N through 1). Help Detective Byomkesh solve the puzzles while he further investigates the crime scene.\r\n",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases.\r\nNext T lines have a single integer N.\r\n<b>Note:</b> It is guaranteed that all the input numbers converge to 1 after some number of operations\r\n",
  "explainOutput": "For each test case, output the length of the chain.",
  "constraints": "1 <= T <= 10^5\r\n1 <= N <= 10^5",
  "example": "Input:\r\n2\r\n13\r\n8\r\n\r\nOutput:\r\n10\r\n4\r\n",
  "explanation": "Case 1: 13\r\n\t13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1\r\n\t13 through 1 i.e. 10 terms\r\n\tCase 2: 8\r\n\t8 → 4 → 2 → 1\r\n\t8 through 1 i.e 4 terms\r\n",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606393711819"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606393866819"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbfa1179296860022aa89dd"
  },
  "tags": [
    "bruteforce"
  ],
  "code": "NOV20D",
  "points": 200,
  "name": "Spidey-Senses, tingling!",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b65571764290b0020a95951\">Arvindraj Thangaraj</a></p>\r\n\r\nIn Earth-1048, after the events of Miles Morales evolving as the other Friendly Neighborhood Spider-Man, Taskmaster is hired yet again by [redacted] in an attempt to keep Miles in check. He successfully lures Miles into an Abandoned Roxxon Lab for possible NuForm presence, and challenges him for a duel.\r\n\r\nFor the uninitiated, Taskmaster has photographic reflexes, i.e. he can identify repeating patterns in an attack sequence and aggressively counter it, although he has an aggressiveness limit A which is the maximum length of repeating patterns he can identify.\r\n\r\nWith Miles being inexperienced, and Taskmaster prepped-up for Miles’ Venom (Shock) Powers, Miles has to rely on his Spidey-Sense (you!) which tingles on repeating fight patterns, and successfully defeat Taskmaster.\r\nNote:\r\nDon’t consider repeating attack sequences of length = 1.\r\nDon’t consider overlapping attack sequences for repetition criteria.\r\n\r\n♪ (Woo!) I’m Ready, I’m Ready, *Spidey-Sense tingling!* I’m very much reaaaady! ♪\r\n",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. Each test case consists of two lines:\r\nThe first line contains the integers N, A\r\nThe second line contains a string of attack sequences, consisting of alphabets A-Z as the attack set.\r\n",
  "explainOutput": "For each test case, output a single line with the integer which is the number of times the Spidey-Sense would be tingling.\r\n",
  "constraints": "1 <= T <= 100\r\n1 <= N <= 100\r\n2 <= A <= 10\r\n",
  "example": "Input:\r\n1\r\n10 3\r\nAABCAABBAC\r\n\r\nOutput:\r\n3\r\n",
  "explanation": "Given the aggressiveness limit A = 3, Spidey-Sense tingles on the following attack subsequences\r\n1. AA\r\n2. AB\r\n3. AAB\r\n",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606394135972"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606394135972"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbfa2779296860022aa89de"
  },
  "tags": [
    "data structures, greedy"
  ],
  "code": "NOV20F",
  "points": 300,
  "name": "Bull Fight - Jallikattu",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b6541b064290b0020a9594a\">Venkhatesh Arunachalam</a></p>\r\nJallikattu is a traditional event in which a bull is released into a crowd of people, and multiple human participants attempt to grab the large hump on the bull’s back with both arms and hang on to it while the bull attempts to escape.\r\n\r\n\r\nThere are a total of N participants (bulls and men both included) arranged in a straight line one after the other in the given order. You are given  the strengths of each participant where strength of man is represented as positive and strength of a bull is represented as negative. All men are moving towards right and bulls are moving towards left from their current position.\r\n\r\nIf a bull and a man collide with each other, the one with lesser absolute strength will lose and move aside of the track. If both bull and man have the same strengths, they both lose. Everyone moves at the same speed.\r\n\r\nNote: Only the magnitude of the participant’s strength is to be considered in a collision\r\n\r\n\r\n",
  "explainInput": "First line of input contains an Integer T denoting the number of test cases.\r\nEach test case consists of two lines.\r\nFirst line contains a single integer N.\r\nNext line contains N space separated integers denoting strengths.\r\n",
  "explainOutput": "For each test case output space separated positions of participants who survive the brawl on a new line, sorted in ascending order. If none of the participants survive, output the word NULL in a single line.\r\n",
  "constraints": "1 <= T <= 1000\r\n1 <= N <= 10^5\r\n-10^9 <= strength[i] <= 10^9\r\nstrength[i] != 0\r\n",
  "example": "Input: \r\n3\r\n3\r\n5 10 -5\r\n2\r\n8 -8\r\n4\r\n-2 -1 1 2\r\n\r\nOutput:\r\n1 2\r\nNULL\r\n1 2 3 4\r\n",
  "explanation": "Test Case 1: The 10 and -5 collide resulting in 10. \r\nThe 5 and 10 never collide.\r\nTest Case 2: 8 and -8 collide each other resulting in both losing.\r\nTest Case 3: -2 and -1 both moving left and 1 and 2 both moving right. Therefore they never collide.\r\n",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606394487829"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606473696769"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "5fbfa34b9296860022aa89df"
  },
  "tags": [
    "adhoc"
  ],
  "code": "NOV20E",
  "points": 250,
  "name": "All or Nothing",
  "description": "<p  style = \"text-align: center\">Author: <a href=\"http://arena.siesgst.ac.in/profile/5b6eec1626d9950020e72ba0\">Shantanu</a></p>\r\n\r\nJose Mourinho, head coach of Spursy FC has been binge watching “All or Nothing” on Amazon Prime and has hence incorporated an All-or-Nothing mentality, which in footballing terms means that over a course any “P” consecutive matches (P here, is a general term), he wants his team to either score more than the opposition, or score less than them in total, because he believes having an equal number of goals scored/conceded compared to his opposition violates the All-or-Nothing mentality, and stagnates the team.\r\n\r\nYou are the assistant coach of the team, and given the goal difference for each match (Goals scored – goals conceded), your task is to help Jose find out whether the team has exhibited the All-or-Nothing mentality for any possible set of P consecutive matches.\r\n\r\n",
  "explainInput": "The first line of input contains an integer T denoting the number of test cases. Each test case consists of two lines.\r\nThe first line contains an integer “N” denoting the number of matches in a season.\r\nThe second line contains “N” space separated integers A1, A2… An, each representing the goal difference in a match.\r\n",
  "explainOutput": "For each test case, output a single line “ALLORNOTHING” if the team exhibits the All-or-nothing mentality, else print “STAGNATION”.\r\n",
  "constraints": "1 <= T <= 1000\r\n1 <= N <= 10^5\r\n -10^9 <= Ai <= 10^9\r\n",
  "example": "Input:\r\n4\r\n3\r\n1 2 -4\r\n5\r\n1 -2 -3  4 -1\r\n8  \r\n19 1 2 3 -1 -2 -3 100\r\n7\r\n1 2 3 100 -1 -2 -3\r\n\r\nOutput:\r\nALLORNOTHING\r\nSTAGNATION\r\nSTAGNATION\r\nALLORNOTHING\r\n",
  "explanation": "<b>Test Case 1:</b>The team scores more than or less than the opposition over the course of any combination of P consecutive matches.\r\n<b>Test Case 2:</b>The team violates the All-or-nothing mentality over the course of the first 4 matches of the season ( 1 + (-2) + (-3) + 4 = 0)\r\n<b>Test Case 3:</b>The team violates the All-or-nothing mentality in the subarray [1, 2, 3, -1, -2, -3]\r\n<b>Test Case 4:</b>The team scores more than or less than the opposition over the course of any combination of P consecutive matches.\r\n",
  "contestCode": "NOV20",
  "createdAt": {
    "$date": {
      "$numberLong": "1606394699857"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1606394699857"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f504deb158c002271b467"
  },
  "tags": [
    "math"
  ],
  "code": "REC21B",
  "points": 150,
  "name": "Concentrick",
  "description": "There are <b>N</b> concentric circles. You are given their radii. None of the circles overlap.\r\nArrange the circles in the ascending order of their areas.\r\nAdd and subtract every alternative circle’s area such that you get <b>A<sub>1</sub> - A<sub>2</sub> + A<sub>3</sub> - A<sub>4</sub> + A<sub>5</sub> - ...</b> and so on for all circles.\r\nFind if this result is positive or negative.",
  "explainInput": "<ul>\r\n<li>The first line of each test case consists of a single integer <b>T</b> denoting the number of test cases  \r\n<li>First line of each test case consists of a single integer <b>N</b> denoting the number of circles.\r\n<li>Second line of each test case consists of <b>N</b> space separated integers denoting the radii of each circle. \r\n</ul>\r\n",
  "explainOutput": "For each test case, print <b>1</b> if the result is positive or <b>-1</b> if the result is negative.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N</b> <= 10<sup>3</sup>\r\n1 <= R<sub>i</sub> <= 10<sup>4</sup>\r\n",
  "example": "Input:\r\n2\r\n5\r\n3 6 1 10 2\r\n4\r\n1 2 3 4\r\n\r\nOutput:\r\n1\r\n-1",
  "explanation": "<b>Test Case 1:</b>\r\nAreas = { 28.26, 113.04, 3.14, 314, 12.56 }\r\nAreas after sorting = { 3.14, 12.56, 28.26, 113.04, 314 }\r\nSum = 3.14 - 12.56 + 28.26 - 113.04 + 314 = 219.80\r\nSum is positive\r\n\r\n<b>Test Case 2:</b>\r\nAreas = {3.14, 12.56, 28.26, 50.24}\r\nAreas are already sorted\r\nSum = 3.14 - 12.56 + 28.26 - 50.24 = -31.40\r\nSum is negative\r\n",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613713485103"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613717520893"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f5084eb158c002271b468"
  },
  "tags": [
    "adhoc"
  ],
  "code": "REC21C",
  "points": 150,
  "name": "Array Recovering",
  "description": "<p>There was originally an array <strong>A</strong> of length <strong>N</strong> consisting of <strong>positive</strong> integers</p>\r\n<p>A new array <strong>S</strong> was created where for 1 &lt;= <strong>i </strong>&lt;= <strong>N</strong>, <strong>S</strong>[<strong>i</strong>] represented the sum of first <strong>i</strong> elements in array <strong>A</strong></p>\r\n<p>Yet another new array <strong>P</strong> was created by shuffling the order of the elements in array <strong>S</strong></p>\r\n<p>You will be given the array <strong>P</strong> from which you are needed to recover the array <strong>A</strong></p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases (Queries) you need to process</li>\r\n<li>The first line of each test case consists of single integer <strong>N</strong></li>\r\n<li>The second line of each test cases consists of N space-separated integers which represent the array&nbsp;<strong>P</strong></li>\r\n</ul>",
  "explainOutput": "<p>For each test case print <strong>N</strong> space-separated integers on single line representing the array&nbsp;<strong>A</strong></p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 100000</li>\r\n<li>1 &lt;= <strong>P</strong>[<strong>i</strong>] &lt;= 10<sup>9</sup></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n4\r\n3 12 4 6\r\n3\r\n1 2 3\r\n\r\n<b>Output:</b>\r\n3 1 2 6\r\n1 1 1\r\n",
  "explanation": "-",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613713540590"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613713540590"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f525deb158c002271b469"
  },
  "tags": [
    "adhoc,implementation"
  ],
  "code": "REC21D",
  "points": 200,
  "name": "Validation",
  "description": "<p>You will be given an array <strong>A</strong> of size <strong>N.</strong></p>\r\n<p>If any of the elements in this array is <strong>strictly smaller</strong> than <strong>L</strong> OR <strong>strictly greater</strong> than <strong>U</strong>, it will <strong>violate the constraints</strong>.</p>\r\n<p>Also, if there is an <strong>extra space</strong> at the end of the line of the array input, it will violate the <strong>extra spacing</strong> rule.</p>\r\n<p>You need to find if the input array violates any of these rules</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases (Queries) you need to process</li>\r\n<li>The first line of each test case consists of three space-separated integers <strong>N</strong>, <strong>L</strong> &amp; <strong>U</strong> respectively</li>\r\n<li>The second line of each test cases consists of N space-separated integers which represent the array&nbsp;<strong>A</strong></li>\r\n</ul>",
  "explainOutput": "<p>For each test case:</p>\r\n<ul>\r\n<li>If none of the rules are violated print <strong>SAFE</strong></li>\r\n<li>If both the rules are violated print <strong>VCES</strong></li>\r\n<li>If there is only an extra space but the constraints on array elements are satisfied print <strong>ES</strong></li>\r\n<li>If there is no extra space but the constraints are violated print <strong>VC</strong></li>\r\n</ul>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 10000</li>\r\n<li>-10<sup>9</sup> &lt;= <strong>A</strong>[<strong>i</strong>], <strong>L</strong>, <strong>U</strong> &lt;= 10<sup>9</sup></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n4\r\n5 10 50\r\n13 19 12 11 50\r\n5 -15 26\r\n-14 19 -16 25 21\r\n5 1 10\r\n2 3 4 5 6&nbsp;\r\n5 1 10\r\n-2 -3 -4 -5 -6&nbsp;\r\n\r\n<b>Output:</b>\r\nSAFE\r\nVC\r\nES\r\nVCES\r\n",
  "explanation": "<p><strong>Test Case 1:</strong> No rules were violated</p>\r\n<p><strong>Test Case 2: </strong>-16 &lt; -15</p>\r\n<p><strong>Test Case 3: </strong>An extra space exists after the array input</p>\r\n<p><strong>Test Case 4: </strong>An extra space exists after the array input &amp; all elements are strictly smaller than 1</p>",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613714013837"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613714099418"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f53f4eb158c002271b46a"
  },
  "tags": [
    "graphs"
  ],
  "code": "REC21E",
  "points": 300,
  "name": "Partition",
  "description": "<p>You will be given an <strong>undirected</strong> graph <strong>G</strong> of <strong>N</strong> vertices &amp; <strong>M</strong> edges</p>\r\n<p>You need to figure out if the vertices of this graph can be partitioned into 2 sets <strong>S</strong><sub><strong>1</strong></sub> &amp; <strong>S</strong><sub><strong>2</strong></sub> such that:</p>\r\n<ul>\r\n<li>Each vertex belongs to exactly one set</li>\r\n<li>Each set contains at least one vertex</li>\r\n<li>If the vertices of <strong>S</strong><sub><strong>1</strong></sub> have any neighbours they can only be from the set <strong>S</strong><sub><strong>2</strong></sub></li>\r\n<li>If the vertices of <strong>S</strong><sub><strong>2</strong></sub> have any neighbours they can only be from the set <strong>S</strong><sub><strong>1</strong></sub></li>\r\n</ul>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases (Queries) you need to process</li>\r\n<li>The first line of each test case consists of a two space-separated integers <strong>N </strong>and <strong>M</strong> respectively</li>\r\n<li>The next <strong>M</strong> lines of each test case consists of two space-separated integers <strong>U</strong> &amp; <strong>V</strong>, which represents an undirected edge between vertex <strong>U</strong> and vertex <strong>V</strong> (1-based indexing)</li>\r\n</ul>",
  "explainOutput": "<p>For each test case print <strong>YES</strong> if such a partition exists, else print <strong>NO</strong></p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>2 &lt;= <strong>N</strong> &lt;= 10000</li>\r\n<li>1 &lt;= <strong>M</strong> &lt;= 100000</li>\r\n<li>1 &lt;= <strong>U</strong>, <strong>V </strong>&lt;= <strong>N</strong></li>\r\n<li><strong>U</strong> is not equal to&nbsp;<strong>V</strong></li>\r\n</ul><ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>2 &lt;= <strong>N</strong> &lt;= 10000</li>\r\n<li>1 &lt;= <strong>M</strong> &lt;= 100000</li>\r\n<li>1 &lt;= <strong>U</strong>, <strong>V </strong>&lt;= <strong>N</strong></li>\r\n<li><strong>U</strong> is not equal to&nbsp;<strong>V</strong></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n7 7\r\n1 2\r\n4 2\r\n4 5\r\n2 3\r\n2 6\r\n5 6\r\n5 7\r\n4 6\r\n1 2\r\n2 4\r\n4 3\r\n3 1\r\n1 4\r\n2 3\r\n\r\n<b>Output:</b>\r\nYES\r\nNO\r\n",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p>One possible partition is:</p>\r\n<p>S<sub>1</sub> -&gt; { 1, 3, 4, 6, 7 }</p>\r\n<p>S<sub>2</sub> -&gt; { 2, 5 }</p>\r\n<p><strong>Test Case 2:&nbsp;</strong></p>\r\n<p>No such partition is possible</p>",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613714420172"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613714420172"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f54d1eb158c002271b46b"
  },
  "tags": [
    "graphs"
  ],
  "code": "REC21F",
  "points": 300,
  "name": "The Perfect Tree",
  "description": "You are given a binary tree consisting of <b>N</b> nodes in the form of an array <b>A</b> where the root node is the first element of the array. A perfect tree is a tree where the value of a node is never less than its descendants. You are required to check if the tree is perfect.\r\n\r\nLeaf nodes do not have any descendants.\r\nIf the index of the root node is 1, the left child of this node will be on the 2nd index and the right child will be on the 3rd index.\r\n",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case consists of an integer <b>N</b> denoting the number of vertices of the tree.\r\nThe second line of each test case consists of an array <b>A</b> with <b>N</b> space separated integers.",
  "explainOutput": "If the tree is perfect, print “PERFECT” otherwise print “IMPERFECT”",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N</b> <= 10<sup>5</sup>\r\n1 <= <b>A<<sub>i</sub></b> <= 10<sup>9</sup>",
  "example": "Input:\r\n3\r\n11\r\n10 5 8 3 4 6 7 1 2 2 3 \r\n6\r\n2 1 5 7 3 2\r\n5\r\n15 10 4 1 9\r\n\r\nOutput:\r\nPERFECT\r\nIMPERFECT\r\nPERFECT\r\n",
  "explanation": "<b>Test case 3:</b>\r\n<img src=\"https://i.imgur.com/4pC8pwl.png\">\r\n15 is greater than all its descendants 10, 4, 1 and 9\r\n10 is greater than all its descendants 1 and 9\r\nHence, the tree is perfect.\r\n",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613714641611"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613714641611"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "602f5e6aeb158c002271b46c"
  },
  "tags": [
    "adhoc"
  ],
  "code": "REC21A",
  "points": 100,
  "name": "Twice Elements",
  "description": "You are given an integer <b>N</b> followed by an array of size <b>2*N</b>.\r\nFind if the array contains all elements from <b>1 to N at least twice</b>.",
  "explainInput": "The first line of each test case consists of a single integer <b>T</b> denoting the number of test cases.\r\nEach test case consists of two line:\r\nThe first line contains an integer <b>N</b>.\r\nThe second line contains an array of integers <b>A<sub>i</sub></b> of size <b>2*N</b>.\r\n",
  "explainOutput": "For each test case, if the given array contains each element from <b>1 to N</b> exactly twice, print <b>YES</b> else print <b>NO</b>.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N</b> <= 10<sup>5</sup>\r\n1 <= <b>A<sub>i</sub></b> <= <b>N</b>",
  "example": "Input:\r\n2  \r\n3\r\n1 2 3 2 1 3\r\n4\r\n1 2 3 2 1 2 3 4\r\n\r\nOutput:\r\nYES\r\nNO",
  "explanation": "<b>Test Case 1:</b>\r\nHere,\r\n1 is present twice in the array.\r\n2 is present twice in the array.\r\n3 is present twice in the array.\r\nThus,\r\nAll elements from 1 to N are present twice in the array and so the output is <b>YES</b>.\r\n\r\nTest Case 2:\r\nHere,\r\n1 is present twice in the array.\r\n2 is present thrice in the array.\r\n3 is present twice in the array.\r\n4 is present only once in the array.\r\nThus,\r\nAll elements from 1 to N are not present twice in the array and so the output is <b>NO</b>.\r\n\r\n",
  "contestCode": "REC21",
  "createdAt": {
    "$date": {
      "$numberLong": "1613717098491"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1613720200662"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "604a67a16350fa0022ce1c6d"
  },
  "tags": [
    "maths"
  ],
  "code": "SRM20B",
  "points": 100,
  "name": "Shuffling",
  "description": "<p>Vedant has 14 cousins. They all went to an event, and at that event, there is a game of numbers, Anand has been given a number <strong>N</strong> and he has to create another number by rearranging the digits of the given number, and chocolates equivalent to that number will be given to him. You have to help Vedant to form the highest number such that all chocolates can be equally divided among all of his cousins including him.\r\nYou have to rearrange the digits of the given number to create one which has the highest possible value and is divisible by 15.</p>\r\n<strong>Note: </strong>The given number can have leading zeros.</p>",
  "explainInput": "<p>The first line consists of a single integer <strong>T </strong>denoting the number of test cases.\r\nEach test case has only one line of input <strong>N.</strong></p>",
  "explainOutput": "<p>If such a number can be formed print the number else print -1.</p>",
  "constraints": "<p>1 &lt;= T &lt;= 200\r\n0 &lt;= N &lt;= (10^20 - 1)</p>",
  "example": "<p><strong>Input:</strong>\r\n3\r\n15\r\n0312978\r\n7</p>\r\n<p><strong>Output:</strong>\r\n15\r\n9873210\r\n-1</p>",
  "explanation": "<p><strong>Test Case 1:</strong>\r\n15 is the largest number possible that can be formed which is divisible by 15.</p>\r\n<p><strong>Test Case 3:</strong>\r\nNo number can be formed that is divisible by 15.</p>",
  "contestCode": "SRM20",
  "createdAt": {
    "$date": {
      "$numberLong": "1615488929954"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1615691918733"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "604a6ad46350fa0022ce1c6e"
  },
  "tags": [
    "geometry"
  ],
  "code": "SRM20D",
  "points": 200,
  "name": "Triangular geometry",
  "description": "<p>Steve is working on his personal project, but he has geometry homework that needs to be done right now. But Steve is not very good at it and he is busy, so he asks you to help him solve the problem.\r\nGiven endpoints of 3 line segments <strong>(X</strong><strong>i</strong><strong>, Y</strong><strong>i </strong><strong>), </strong>you need to find out if these 3 line segments form a triangle or not.</p>\r\n<p><strong>Note:&nbsp;</strong>No three lines are concurrent, i.e. all three lines do not interest at a single point.</p>",
  "explainInput": "<p>The first line of input consists of a single integer <strong>T </strong>denoting the number of test cases.\r\nEach test case has 3 input lines, each line having 4 integers, the endpoints of each line segment.</p>\r\n<p><strong>x</strong><strong>1</strong><strong> y</strong><strong>1</strong><strong> x</strong><strong>2</strong><strong> y</strong><strong>2 </strong>(endpoints of line segment 1)\r\n<strong>x</strong><strong>3</strong><strong> y</strong><strong>3</strong><strong> x</strong><strong>4</strong><strong> y</strong><strong>4 </strong>(endpoints of line segment 2)\r\n<strong>x</strong><strong>5</strong><strong> y</strong><strong>5</strong><strong> x</strong><strong>6</strong><strong> y</strong><strong>6 </strong>(endpoints of line segment 3)</p>",
  "explainOutput": "<p>For each test case, if the line segments form a triangle print &ldquo;<strong>YES</strong>&rdquo; else print &ldquo;<strong>NO</strong>&rdquo;.</p>",
  "constraints": "<p>1 &lt;= T &lt;= 100\r\n-200 &lt;= X, Y &lt;= 200</p>",
  "example": "<p><strong>Input:</strong>\r\n2\r\n1 2 5 2\r\n1 1 5 5\r\n4 0 4 5\r\n1 1 5 2\r\n2 1 7 1\r\n2 5 7 7</p>\r\n<p><strong>Output:</strong>\r\nYES\r\nNO</p>",
  "explanation": "<p><strong>Testcase 1:</strong></p>\r\n<img src=\"https://i.imgur.com/pUB3BOx.png\" width=\"300\" height=\"250\" />\r\n<p>Since a triangle is formed, the output is &ldquo;YES&rdquo;.</p>\r\n<p><strong>Testcase 2:</strong></p>\r\n<img src=\"https://i.imgur.com/Pgn6DyH.png\" width=\"300\" height=\"250\" />\r\n<p>Since it forms no triangle, the output is &ldquo;NO&rdquo;.</p>",
  "contestCode": "SRM20",
  "createdAt": {
    "$date": {
      "$numberLong": "1615489748540"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1615733499582"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "604ba7dfc244c800220fc499"
  },
  "tags": [
    "sorting",
    "greedy"
  ],
  "code": "SRM20A",
  "points": 100,
  "name": " Efficient Sam",
  "description": "Sam is given a series of assignments from college. Each assignment has its own difficulty level. Sam needs exactly one hour to finish one assignment also to begin with the very first assignment he needs one hour for preparation and arranging his stuff. Sam needs to prioritize his assignments efficiently. <br>\r\nIn order to do so help sam find the number of hours <strong>H</strong> required to start with a particular assignment. Remember the assignment with the highest difficulty level needs to finish first. Also if some assignments have the same difficulty level then the assignment which is ahead in the series needs to be given preference.\r\n",
  "explainInput": "The first line consists of a single integer <strong>T</strong> denoting the number of test cases  \r\nThe first line of each test case consists of an integer <strong>N</strong>\r\nThe second line of each test case consists of N space-separated hours as integers <strong>A1 A2 …. AN</strong>",
  "explainOutput": "For each test case, print the series of the number of hours <b>H</b>.\r\n",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n1 <= <strong>N</strong> <= 1000\r\n1 <=<strong> A<sub>i</sub></strong> <= 1000\r\n",
  "example": "<strong>Input</strong>\r\n4\r\n5\r\n2 3 5 3 4\r\n3\r\n2 2 2\r\n6\r\n2 10 3 3 2 10\r\n4\r\n8 9 8 9\r\n\r\n<strong>Output:</strong>\r\n5 3 1 4 2\r\n1 2 3\r\n5 1 3 4 6 2\r\n3 1 4 2\r\n",
  "explanation": "<strong>Test Case 1:</strong>\r\nAssignment number 3 has the highest difficulty level. Therefore, before starting this assignment Sam needs to prepare his stationery and other things and gets the assignment started immediately after. Task 5 has the next highest difficulty level, so it's next. Sam needs an hour to get started with this assignment as his earlier assignment is in progress. In total, task 5 needs 2 hours to get started with. After that, both task 2 and 4 have an equal difficulty level, but task 2 is ahead in the queue, so task 2 is approached next, followed by task 4, and then finally task 1.\r\n\r\n<strong>Test Case 2:</strong>\r\nAll three assignments have the same difficulty level, so they are approached according to their position in the queue. Task 1first, followed by task 2, and then task 3.\r\n",
  "contestCode": "SRM20",
  "createdAt": {
    "$date": {
      "$numberLong": "1615570911823"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1615710026871"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "604bab0ec244c800220fc49a"
  },
  "tags": [
    "string, palindrome"
  ],
  "code": "SRM20C",
  "points": 200,
  "name": "Scrabble",
  "description": "Two friends decided to play Scrabble. However, in order to make things more interesting, they changed some rules instead of forming meaningful words they need to check whether the string formed is a palindrome.\r\nA and B are two players who are given two strings <strong>R</strong> and <strong>S</strong> respectively. They’ll one by one place the letters from their string. The one who is successful in making the string palindrome wins(Palindromes of length 1 aren't valid). If both have the same strings or there is a draw situation then by default B wins.\r\n",
  "explainInput": "The first line e consists of a single integer <strong>T</strong> denoting the number of test cases  \r\nThe first line of each test case consists of a string <strong>R</strong>.\r\nThe second line of each test case consists of a string <strong>S</strong>.\r\n",
  "explainOutput": "For each test case , print the winner that is either <strong>“A”</strong> or <strong>“B”</strong> .\r\n",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n1 <= <strong>Len(S)</strong> <= 1000\r\n1 <= <strong>Len(R)</strong> <= 1000\r\n",
  "example": "<strong>Input:</strong>\r\n3\r\nab\r\nab\r\naba\r\ncde\r\nab\r\ncd\r\n\r\n\r\n<strong>Output:</strong>\r\nB\r\nA\r\nB\r\n",
  "explanation": "<strong>Test Case 1:</strong>\r\n\r\nIf A adds 'a' in the first move, B can add 'a' and make the string \"aa\",                  which is a palindrome, and hence win. Similarly, you can show that no matter what A plays, B can win. Hence the answer is B.\r\n\r\n<strong>Test Case 1:</strong>\r\n\r\nA moves with 'a', player B can put any of the characters 'c', 'd' or 'e', Now A can create a palindrome by adding 'a'.\r\n",
  "contestCode": "SRM20",
  "createdAt": {
    "$date": {
      "$numberLong": "1615571726996"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1615654802952"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6055b8213d00c8002293e4ce"
  },
  "tags": [
    "mathtag"
  ],
  "code": "SRM21A",
  "points": 100,
  "name": "Crack the Code",
  "description": "Cooper sees dust fall into a specific pattern in his daughter's room. He knows its code to some secret location . But the numbers in the code are not in correct order. Help him arrange the numbers in correct order to get coordinates of the secret NASA location.\r\nThere are total <strong>N</strong> numbers and a key value <strong>K</strong><strong>. </strong>If <strong>K</strong> is even, arrange all even numbers to the right side and all odd numbers to the left, and vice versa.<br>\r\nDo Not change the order of occurrence of the numbers.",
  "explainInput": "The first line of input contains an integer<strong> T</strong> denoting the number of test cases. Each test case consists of two lines.\r\nThe first line of each test case contains two space separated integers<strong> N</strong> and<strong> K</strong>.\r\nAnd the second line contains <strong>N</strong> space separated integers denoting <strong>A</strong><strong>i</strong>.",
  "explainOutput": "For each test case, output a single line with the correct pattern of the given numbers.",
  "constraints": "1&lt;=<strong> T</strong>&lt;=100\r\n1 &lt;= <strong>K,N</strong>&lt;= 1000\r\n1 &lt;= <strong>A</strong><strong>1</strong><strong>,A</strong><strong>2</strong><strong>,A</strong><strong>3</strong><strong>,..,A</strong><strong>N</strong>&lt;= 10000<br>",
  "example": "2\r\n5 2\r\n1 2 3 4 5\r\n4 1\r\n4 17 5 6\r\n<strong>Output:</strong>\r\n1 3 5 2 4\r\n4 6 17 5&nbsp;",
  "explanation": "In the first test case, the value of K is even, hence all even numbers are arranged to the right and odd to the left . Also note the order of occurrence is same as in , if 2 occurred before 4 it remains that way in the answer also",
  "contestCode": "SRM21",
  "createdAt": {
    "$date": {
      "$numberLong": "1616230433090"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1616335640633"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6055b90e3d00c8002293e4cf"
  },
  "tags": [
    "geometry, math, permutation and combination"
  ],
  "code": "SRM21D",
  "points": 300,
  "name": "Ship Docking",
  "description": "After Mann has betrayed Cooper and Brand he tries to escape and makes his way towards mothership leaving Cooper and Brand behind, luckily they have a secondary ship in which they chase Mann but he reaches the mothership first and tries to escape with it, in this attempt he blows one part of the mothership and as a result, he dies and mothership starts rotating. Now to dock with the mothership Cooper and Brand need to spin in the same orientation as the mothership i.e clockwise rotation, due to some damage in their ship they can't just rotate their ship so you need to help them to plot a path that has clockwise orientation. Given <strong>3-X</strong> coordinates (x1, x2, x3) and <strong>3-Y</strong> coordinates (y1, y2, y3) find out how many paths are possible which have clockwise orientation.\r\n\r\n<strong>Note</strong>: All coordinates would be unique. For plotting the path, you <strong>can't change the order of X coordinates</strong> and <strong>Y coordinates can't be repeated</strong> i.e. (x1,y1; x2,y1; x3,y1) is <strong>not allowed</strong>.",
  "explainInput": "The first line of input contains an integer <strong>T</strong> denoting the number of test cases.\r\nEach test case consists of two lines, the first line consists of 3 unique <strong>X</strong> coordinates and the second line contains 3 unique <strong>Y</strong> coordinates.",
  "explainOutput": "For each test case, output a single line with the integer which is the <strong>number of clockwise orientations</strong> for the given coordinates.",
  "constraints": "1<= <strong>T</strong> <=1000\r\n-10<sup>4</sup><= <strong>X,Y</strong> <=10<sup>4</sup>",
  "example": "<strong>Input</strong>:\r\n2\r\n4 3 5\r\n2 6 7\r\n4 8 2\r\n5 6 1\r\n\r\n<strong>Output</strong>:\r\n2\r\n4",
  "explanation": "<strong>Test case 1</strong>:\r\nNo of 3 ordered points trios:\r\nx1=4, x2=3, x3=5. (order of X coordinates can’t be changed)\r\nOut of these only 2 trios have clockwise orientation:\r\nA)4 2; B) 3 6; C) 5 7\r\nThese 3 ordered points - ABC have a clockwise orientation\r\n<img src=\"https://i.imgur.com/NOQYodP.png\" height=\"300\" width=\"300\">\r\nSimilarly, these 3 ordered points also have the clockwise orientation \r\n4 2; 3 7; 5 6\r\nHence the answer is <strong>2</strong>.\r\n\r\n<strong>Test case 2</strong>:\r\nSimilarly,\r\n4 5; 8 6; 2 1\r\n4 5; 8 1; 2 6\r\n4 6; 8 1; 2 5\r\n4 6; 8 5; 2 1\r\nThese four trios have clockwise orientations. Hence answer is <strong>4</strong>.",
  "contestCode": "SRM21",
  "createdAt": {
    "$date": {
      "$numberLong": "1616230670478"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1616335887105"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6055bd3d3d00c8002293e4d3"
  },
  "tags": [
    "perimeter, math"
  ],
  "code": "SRM21C",
  "points": 200,
  "name": "Wormhole Crossing",
  "description": "Cooper is recruited to pilot the Endurance to traverse through the Wormhole. However when the spaceship is traversing through the wormhole it is going to elongate and stretch. In-order to traverse successfully he needs to calculate the length of the outline of the spaceship (i.e. Perimeter of the SpaceShip)\r\nThe ship is constructed by joining squares from a baseline. You have to help Cooper in his mission to find a habitable planet by finding the perimeter of the spaceship.",
  "explainInput": "The first line consists of a single integer <strong>T</strong> denoting the number of test cases\r\nThe first line of each test case consists of an integer <strong>N</strong>\r\nThe second line of each test case consists of <strong>N</strong> space-separated integers <strong>S1 S2 …. Sn</strong> as the sides of squares",
  "explainOutput": "For each test case, output a single line with the integer which is the <strong>perimeter of ship</strong>.",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n1 <= <strong>N</strong> <= 1000\r\n1 <= <strong>S<sub>i</sub></strong> <= 1000",
  "example": "<strong>Input</strong>:\r\n2\r\n5\r\n2 1 3 4 1\r\n6\r\n2 2 2 2 2 2\r\n<strong>Output</strong>:\r\n32\r\n28",
  "explanation": "<strong>Test case 1</strong>:\r\n<img src=\"https://i.imgur.com/xbh5YuC.png\" height=\"200px\" width=\"500\">\r\n<strong>Test case 2</strong>:\r\n<img src=\"https://i.imgur.com/tsSBjxn.png\" height=\"200px\" width=\"500\">",
  "contestCode": "SRM21",
  "createdAt": {
    "$date": {
      "$numberLong": "1616231741192"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1616335757235"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6055c43ecef4570022ac9c14"
  },
  "tags": [
    "math"
  ],
  "code": "SRM21B",
  "points": 100,
  "name": "Cooper goes Shopping!",
  "description": "Cooper is preparing to leave for space to find a new planet for humans. He goes to shop for some important stuff before leaving. While shopping he shops from <strong>2</strong> different categories. The Total Price he spends is the sum of individual prices from both categories.\r\nCoopers buys a lot of expensive stuff so the shop owner being kind offers him a discount on one condition. He puts the condition that if the sum of 2 items, given that there has to be 1 item from both categories, is divisible 4 then he will give a discount of <strong>40%</strong> on the <strong>total price</strong>. (Yeah you are right that the shopkeepers favorite number is 4).\r\n\r\nCooper is too busy shopping and spending time with Murph and Tom. So he asks you to find the <strong>total price</strong> that he has to pay for all the stuff that he has bought.",
  "explainInput": "The first line of input contains an integer <strong>T</strong> denoting the number of test cases.\r\nEach test case consists of <strong>4</strong> lines.\r\nFirst-line consists of integer <strong>N</strong>.\r\nSecond line of <strong>N</strong> space-separated integers <strong>A</strong><strong>1</strong><strong>,A</strong><strong>2</strong><strong>,A</strong><strong>3</strong><strong>,....,A</strong><strong>n</strong>\r\nThird line consists of integer <strong>M</strong>\r\nLast line consists of <strong>M</strong> space- separated integer <strong>B1,B2,B3,...,Bm</strong>",
  "explainOutput": "For each test case, output a single line <strong>total price.</strong>",
  "constraints": "1<=<strong>T</strong><=100\r\n1<=<strong>N,M</strong><= 10<sup>3</sup>\r\n1<=<strong>A<sub>i</sub></strong><= 10<sup>4</sup>\r\n1<=<strong>B<sub>i</sub></strong><= 10<sup>4</sup>\r\n<strong>A<sub>i</sub></strong> & <strong>B<sub>i</sub></strong> are multiples of 10",
  "example": "<strong>Input:</strong>\r\n2\r\n4\r\n100 20 450 600\r\n5\r\n700 300 10 580 180\r\n3\r\n120 480 60\r\n4\r\n50 450 290 70\r\n\r\n<strong>Output:</strong>\r\n1764\r\n1520",
  "explanation": "<strong>Test case 1:</strong>\r\nHere the total price will be 100+20+450+600+700+300+10+580+180= 2940. \r\nNow finding if the sum of any two prices (1 from each category) is divisible by  \r\n4. 100+700=800 which is divisible 4. Therefore a 40% discount will be given.\r\nSo the final Total price=1764\r\n\r\n<strong>Test case 2:</strong>\r\nHere the total price will be 120+480+60+50+450+290+70= 1520 \r\nSum of no two integers is divisible by 4. Therefore no discount will be given.\r\nSo the final Total price=1520.",
  "contestCode": "SRM21",
  "createdAt": {
    "$date": {
      "$numberLong": "1616233534866"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1616336030986"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065cf6645a5d100227e079b"
  },
  "tags": [
    "adhoc"
  ],
  "code": "APR21B",
  "points": 150,
  "name": "Eren needs Wood",
  "description": "<p style=\"text-align:center;\"><img src=\"https://i.imgur.com/L5i57qVm.jpg\" width=\"342\" height=\"426\"></p>\r\n<p>Levi ordered Eren to get some woods from the forest. So, Eren went to the forest.</p>\r\n<p>Eren can cut 10 trees in an hour. But the forest is visited by titans a few times in a day. Eren can&rsquo;t cut the trees when titans are in the forest as he is scared of them.</p>\r\n<p>Eren knows the timestamp<strong> [E1, E2, D]</strong> of each titan coming in the forest. Here, <strong>E1</strong> represents the entry hour, <strong>E2</strong> represents the exit hour of a titan on day<strong> D</strong>.</p>\r\n<p>Find out on <strong>which day Eren can cut the maximum amount of trees</strong>.</p>\r\n<p><strong>Note:&nbsp;</strong></p>\r\n<ol>\r\n<li>If E1 = 9 and E2 = 11, it means that Eren can&rsquo;t cut the trees from 9 AM to 11 AM as a titan will be in the forest.</li>\r\n<li>If there are 2 days on which Eren can cut max trees then output <strong>the smallest D value</strong>.</li>\r\n</ol>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong>, denoting the number of timestamps of titans.</li>\r\n<li>The following <strong>N </strong>line of each test case consists of <strong>3</strong> space-separated integers <strong>E1, E2, D</strong>.</li>\r\n</ul>",
  "explainOutput": "<p>For each test case, output the answer, the day on which Eren can cut the max number of trees.</p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T </strong>&lt;= 20</li>\r\n<li>0 &lt;=<strong> E1</strong> &lt; <strong>E2 </strong>&lt;= 24</li>\r\n<li>1 &lt;=<strong> N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>D</strong> &lt;= <strong>N</strong></li>\r\n<li><strong>All D values in a test case are unique</strong></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n5\r\n0 24 1\r\n0 3 3\r\n21 24 2\r\n3 10 5\r\n10 20 4\r\n5\r\n0 24 1\r\n1 2 3\r\n21 24 2\r\n3 10 5\r\n10 20 4\r\n\r\n<b>Output:</b>\r\n2\r\n3\r\n",
  "explanation": "<b>Test Case 1: </b>\r\nOn day 1, titan is present for all 24 hours\r\nOn day 2, there is a titan from 21 to 24, thus Eren can cut trees for 21 hours.\r\nOn day 3, there is a titan from 0 to 3, thus Eren can cut trees for 21 hours.\r\nOn day 4, there is a titan from 10 to 20, thus Eren can cut trees for 14 hours.\r\nOn day 5, there is a titan from 3 to 10, thus Eren can cut trees for 17 hours.\r\nHere, the max amount of trees Eren can cut is 21*10 = 210 on day 2 and day 3 i.e., D=2 and D=3.\r\nSince, D=2 is smaller, we output 2 as an answer.\r\n\r\n<b>Test Case 2: </b>\r\nOn day 1, titan is present for all 24 hours\r\nOn day 2, there is a titan from 21 to 24, thus Eren can cut trees for 21 hours.\r\nOn day 3, there is a titan from 1 to 2, thus Eren can cut trees for 23 hours.\r\nOn day 4, there is a titan from 10 to 20, thus Eren can cut trees for 14 hours.\r\nOn day 5, there is a titan from 3 to 10, thus Eren can cut trees for 17 hours.\r\nHere, the max amount of trees Eren can cut is 23*10 = 230 on day 3 i.e., D=3.\r\nThus, the answer is 3.\r\n",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617284966380"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617372767397"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065d4d445a5d100227e079c"
  },
  "tags": [
    "math"
  ],
  "code": "APR21A",
  "points": 100,
  "name": "Miu meets Erwin",
  "description": "<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/FBPwK8ym.jpg\" alt=\"\" /></p>\r\n<p>Erwin has a list, <strong>A</strong><sub><strong>1</strong></sub><strong> A</strong><sub><strong>2</strong></sub><strong> A</strong><sub><strong>3</strong></sub><strong> .. A</strong><sub><strong>N</strong></sub> of suspicious numbers.</p>\r\n<p>Miu - The smart cat says any of these numbers which are divisible by <strong>56</strong>, are the enemies.</p>\r\n<p>Count the number of enemies so that Erwin can strategize his next move</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong>, denoting the length of the list</li>\r\n<li>The second line of each test case consists of <strong>N</strong> space-separated integers <strong>A</strong><sub><strong>1</strong></sub><strong> A</strong><sub><strong>2</strong></sub><strong> A</strong><sub><strong>3</strong></sub><strong> .. A</strong><sub><strong>N</strong></sub></li>\r\n</ul>",
  "explainOutput": "For each test case, output the answer (number of integers divisible by 56) in a single line",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 1000</li>\r\n<li>1 &lt;= <strong>A</strong><sub><strong>i</strong></sub>&lt;=10<sup>9</sup></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n6\r\n4 56 33 112 79 112\r\n3\r\n336 420 504\r\n\r\n<b>Output:</b>\r\n3\r\n2\r\n",
  "explanation": "<b>Test Case 1:</b>\r\n56, 112(at 4th place) & 112(at 6th place) are divisible by 56\r\n\r\n<b>Test Case 2:</b>\r\n336 & 504 are divisible by 56\r\n",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617286356448"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617286356448"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065d6f645a5d100227e079e"
  },
  "tags": [
    "brute force, two pointers"
  ],
  "code": "APR21E",
  "points": 200,
  "name": "Levi wants to clean",
  "description": "<p style=\"text-align:center;\"><img src=\"https://i.imgur.com/bihvrs6m.jpg\" width=\"334\" height=\"432\"></p>\r\n<p>Levi has <strong>N</strong> scouts in his squad. The<strong> ith</strong> member has <strong>C</strong><strong>i</strong> skill points in cleaning. He wants to assign few of those to cleaning duty in groups of <strong>2</strong>. He wants to keep the groups balanced so he&rsquo;ll only make groups with <strong>the same total skill points.</strong></p>\r\n<p>So, if he makes <strong>K </strong>teams <strong>(A</strong><strong>1</strong><strong>, B</strong><strong>1</strong><strong>), (A</strong><strong>2</strong><strong>, B</strong><strong>2</strong><strong>), &hellip;, (A</strong><strong>K</strong><strong>, B</strong><strong>K</strong><strong>)</strong> where <strong>A</strong><strong>i</strong> is the skill points of first member and <strong>B</strong><strong>i</strong> is the skill points of second member of <strong>ith</strong> group, then the condition <strong>A</strong><strong>1</strong><strong>+B</strong><strong>1</strong><strong> = A</strong><strong>2</strong><strong>+B</strong><strong>2</strong><strong> = &hellip;. = A</strong><strong>K</strong><strong>+B</strong><strong>K</strong><strong> = S</strong>, where <strong>S</strong> is the total skill points of <strong>each group</strong>, should be satisfied.</p>\r\n<p>Your task is to choose such <strong>S</strong> that the number of groups that can be created is the <strong>maximum</strong> possible. Note that each scout can be in <strong>no more than one</strong> group.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong>, denoting the number of scouts in Levi&rsquo;s squad.</li>\r\n</ul>\r\n<p>The secondline of each test case consists of <strong>N</strong> space-separated integers <strong>C</strong><strong>1</strong><strong>, C</strong><strong>2</strong><strong>, &hellip;, C</strong><strong>N </strong>denoting cleaning skill points of each scout.</p>",
  "explainOutput": "<p>For each test case, output the <strong>maximum number of groups</strong> Levi can make with total skill points <strong>S</strong>, if you choose<strong> S</strong> optimally.</p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T </strong>&lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 50</li>\r\n<li>1 &lt;= <strong>C</strong><strong>i</strong> &lt;= N</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n3\r\n5\r\n1 2 3 4 5\r\n6\r\n1 2 2 1 1 2\r\n6\r\n1 1 3 4 2 2\r\n\r\n<b>Output:</b>\r\n2\r\n3\r\n2\r\n",
  "explanation": "<b>Test Case 1:</b> We can get an optimal answer for S = 6. We can form groups of 1+5 and 2+4. Thus, the answer is 2.\r\n<b>Test Case 2:</b> The answer is 3 because we have 3 participants with weight 1 and 3 participants with weight 2.\r\n<b>Test Case 3:</b> We can get an optimal answer for S = 3. Note that scout will skill points 3 can’t form a group because there is no suitable pair for him in the list.",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617286902741"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617290223088"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065d73145a5d100227e079f"
  },
  "tags": [
    "math",
    " bitwise"
  ],
  "code": "APR21D",
  "points": 200,
  "name": "Hange vs Cockroach",
  "description": "<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/sfevEuim.jpg\" alt=\"\" /></p>\r\n<p>Levi had a mysterious array <strong>A</strong><sub><strong>1</strong></sub><strong> A</strong><sub><strong>2</strong></sub><strong> A</strong><sub><strong>3</strong></sub> &hellip;. <strong>A</strong><sub><strong>N</strong></sub><strong> A</strong><sub><strong>N+1&nbsp;</strong></sub></p>\r\n<p>However, Hange deleted this array by mistake.</p>\r\n<p>Levi says it&rsquo;s okay as long as we can recover the <strong>sum</strong> of this array (<strong>A</strong><sub><strong>1</strong></sub><strong> + A</strong><sub><strong>2</strong></sub><strong> + A</strong><sub><strong>3</strong></sub> &hellip;. <strong>A</strong><sub><strong>N</strong></sub><strong> + A</strong><sub><strong>N+1</strong></sub>)</p>\r\n<p>To do this, Hange has the following two arrays:</p>\r\n<ul>\r\n<li><strong>B</strong><sub><strong>1</strong></sub><strong> B</strong><sub><strong>2</strong></sub><strong> B</strong><sub><strong>3</strong></sub> &hellip;.. <strong>B</strong><sub><strong>N&nbsp;</strong></sub>where <strong>B</strong><sub><strong>i</strong></sub><strong> = A</strong><sub><strong>i&nbsp;</strong></sub><strong>(bitwise XOR)&nbsp;</strong><strong>A</strong><sub><strong>i+1</strong></sub></li>\r\n<li><strong>C</strong><sub><strong>1</strong></sub><strong> C</strong><sub><strong>2</strong></sub><strong> C</strong><sub><strong>3</strong></sub> &hellip;.. <strong>C</strong><sub><strong>N&nbsp;</strong></sub>where <strong>C</strong><sub><strong>i</strong></sub><strong> = A</strong><sub><strong>i&nbsp;</strong></sub><strong>(bitwise AND)&nbsp;</strong><strong>A</strong><sub><strong>i+1</strong></sub></li>\r\n</ul>\r\n<p>In other words,</p>\r\n<p>B<sub>1</sub> = A<sub>1</sub> ^ A<sub>2</sub></p>\r\n<p>B<sub>2</sub> = A<sub>2</sub> ^ A<sub>3</sub></p>\r\n<p>..and so on</p>\r\n<p>C<sub>1</sub> = A<sub>1</sub> &amp; A<sub>2</sub></p>\r\n<p>C<sub>2</sub> = A<sub>2</sub> &amp; A<sub>3</sub></p>\r\n<p>..and so on</p>\r\n<p>Where, <strong>^</strong> is the <strong>bitwise XOR</strong> operator and <strong>&amp;</strong> is the <strong>bitwise AND</strong> operator</p>\r\n<p>Help Hange to find the sum of the original array <strong>A</strong></p>\r\n<p><br /><strong>Note: </strong>It is guaranteed that <strong>N </strong>is <strong>odd</strong></p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong>, denoting the length of the list, which is always <strong>odd</strong></li>\r\n<li>The second line of each test case consists of <strong>N</strong> space-separated integers <strong>B</strong><sub><strong>1</strong></sub><strong> B</strong><sub><strong>2</strong></sub><strong> B</strong><sub><strong>3</strong></sub><strong> .. B</strong><sub><strong>N</strong></sub></li>\r\n<li>The third line of each test case consists of <strong>N</strong> space-separated integers <strong>C</strong><sub><strong>1</strong></sub><strong> C</strong><sub><strong>2</strong></sub><strong> C</strong><sub><strong>3</strong></sub><strong> .. C</strong><sub><strong>N</strong></sub></li>\r\n</ul>",
  "explainOutput": "For each test case, output the answer (<b>sum</b> of the array <b>A</b>) in a single line",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>1 &lt;= <strong>N</strong> &lt;= 1000</li>\r\n<li><strong>N</strong> is <strong>odd</strong></li>\r\n<li>1 &lt;= <strong>B</strong><sub><strong>i</strong></sub> &lt;= 1000</li>\r\n<li>1 &lt;= <strong>C</strong><sub><strong>i</strong></sub> &lt;= 1000</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n5\r\n4 3 12 7 9\r\n5 7 6 3 2\r\n3\r\n3 9 3\r\n2 2 4\r\n\r\n<b>Output:</b>\r\n51\r\n18\r\n",
  "explanation": "-",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617286961930"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617286961930"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065da6245a5d100227e07a7"
  },
  "tags": [
    "graphs"
  ],
  "code": "APR21G",
  "points": 350,
  "name": "Mikasa to the rescue",
  "description": "<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/Jsxp8V4m.jpg\" alt=\"\" /></p>\r\n<p>There is an unweighted &amp; undirected tree of <strong>N</strong> nodes. <br /> A Titan has attacked this tree! It is currently on the node <strong>K</strong> <br /> It is trying to attack Eren who is on the node <strong>E</strong>. <br /> The titan is afraid of Miu - The smart cat, Miu is on the node <strong>S</strong>. <br /> Mikasa plans to take Eren from node <strong>E </strong>to Miu on node <strong>S</strong>, Mikasa is currently on the node <strong>M</strong>. <br /> Eren is injured and cannot move, while Miu is a lazy cat who likes to sleep.</p>\r\n<p>In each second,</p>\r\n<ul>\r\n<li>Mikasa can either stay at her current node or move to a neighbouring node</li>\r\n<li>Titan can either stay at its current node or move to a neighboring node</li>\r\n</ul>\r\n<p><strong>Notes</strong>:</p>\r\n<ul>\r\n<li>Mikasa is so fast that she can pick up eren instantly (in 0 seconds) if she reaches the node <strong>E</strong>.</li>\r\n<li>If at any point the Titan &amp; Eren are at the same node, Mikasa won&rsquo;t be able to save him.&nbsp;</li>\r\n<li>Even if Mikasa &amp; the Titan both reach the node E at the same time, Eren cannot be saved.&nbsp;</li>\r\n<li>The Titan is afraid of Miu, and will <strong>never</strong> enter the node <strong>S</strong></li>\r\n<li>In any other case, if Mikasa retrieves Eren and brings him to node <strong>S</strong>, he will be saved.</li>\r\n<li>This Titan has intelligence, and makes the best possible decisions to capture Eren.</li>\r\n</ul>\r\n<p>Find out if Mikasa will be able to save Eren with the plan or not.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases.</li>\r\n<li>The first line of each test case consists of a single integer <strong>N</strong></li>\r\n<li>The next <strong>N-1</strong> lines consists of 2 space-separated integers <strong>U</strong> &amp; <strong>V</strong>, which represents that there is an undirected edge between <strong>U</strong> &amp; <strong>V</strong>.</li>\r\n<li>The last line of each test case consists of 4 space-separated integers <strong>K</strong>, <strong>E</strong>, <strong>S</strong> &amp; <strong>M</strong> respectively, which represent the nodes on which the Titan, Eren, Miu &amp; Mikasa are present currently.</li>\r\n</ul>",
  "explainOutput": "For each test case, in a single line print <b>YES</b> if Mikasa will be able to save Eren, otherwise print <b>NO</b> (Output is Case Sensitive, print in All Caps)",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 100</li>\r\n<li>4 &lt;= <strong>N</strong> &lt;= 10<sup>5</sup></li>\r\n<li>1 &lt;= <strong>K</strong>, <strong>E</strong>, <strong>S</strong>, <strong>M</strong> &lt;= <strong>N</strong></li>\r\n<li><strong>K</strong>, <strong>E</strong>, <strong>S</strong> &amp; <strong>M</strong> are all pairwise distinct</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n2\r\n6\r\n1 3\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n4 1 6 3\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n1 3 4 2\r\n\r\n<b>Output:</b>\r\nNO\r\nYES\r\n",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p><img src=\"https://i.imgur.com/wQRmaSXt.png\" alt=\"\" /></p>\r\n<p>At time = 1 sec, <br /> Mikasa will be at node 1 with Eren &amp; the Titan will be at node 3<br /> Now they are trapped &amp; Eren cannot be saved</p>\r\n<p><strong>Test Case 2:</strong></p>\r\n<p>At time = 1 sec,<br /> Mikasa will be at node 3 with Eren<br /> The Titan will be at node 2<br /> At time = 2 sec,<br /> Mikasa will have taken Eren to node 4 where Miu is present<br /> The Titan will be at node 3<br /> Hence, Mikasa will be able to save Eren</p>",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617287778613"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617289289450"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065de3f45a5d100227e07b7"
  },
  "tags": [
    "math"
  ],
  "code": "APR21C",
  "points": 150,
  "name": " Armin and Titans",
  "description": "<p style=\"text-align: center;\"><img src=\"https://i.imgur.com/UcwMx4hm.jpg\" alt=\"\" /></p>\r\n<p>Consider a 2D plane. Armin is initially at<strong> (1,1)</strong>. There are <strong>2</strong> titans on the same plane. Titan 1 is chasing Armin and is at <strong>(0,0) </strong>initially.</p>\r\n<p>Armin can move to any of the <strong>8 neighbouring cells </strong>(Cells sharing either an edge or a corner) to his current cell.</p>\r\n<p>So, in one move Armin can go anywhere including Titan 1&rsquo;s cell.</p>\r\n<p>Titan 1 is following Armin thus it goes to the cell where Armin was.</p>\r\n<p>Titan 2 is at a cell<strong> (X,Y)</strong>. Armin&rsquo;s goal is to <strong>collide</strong> both the titans. Titan 2 can only detect Armin if he is in its neighbouring 8 cells.</p>\r\n<p>Armin wants to get in any one of 8 neighbouring cells of Titan 2 so that in the next move Titan 2 follows him to that cell and Titan 1 is already following him so it also goes in that cell resulting in collision of the 2 titans.</p>\r\n<p><br />Armin wants to finish this task quickly as his ODM gear is about to run out. Help him find the <strong>minimum number of moves required</strong>.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong> denoting the number of test cases.</li>\r\n<li>Each line of the test case consists of 2 space-separated integers <strong>X</strong> &amp;&nbsp;<strong>Y</strong></li>\r\n</ul>",
  "explainOutput": "For each test case, output the answer (Minimum number of moves Armin needs to make) in a single line",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T</strong> &lt;= 1000</li>\r\n<li>-10<sup>9</sup> &lt;= <strong>X</strong>, <strong>Y</strong> &lt;= 10<sup>9</sup></li>\r\n<li>(<strong>X</strong>, <strong>Y</strong>) &ne; (0,0)</li>\r\n<li>(<strong>X</strong>, <strong>Y</strong>) &ne; (1,1)</li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n4\r\n3 -2\r\n-4 -4\r\n0 1\r\n7 4\r\n\r\n<b>Output:</b>\r\n3\r\n5\r\n1\r\n6\r\n",
  "explanation": "<b>Test Case 1:</b>\r\n<p><img src=\"https://i.imgur.com/2kvdB9Cm.png\" /></p>\r\nOne of the quickest way is:\r\nMove 1: Armin: (1, 1) -> (2, 0)\r\n\t  Titan 1: (0, 0) -> (1, 1)\r\n\r\nMove 2: Armin (2, 0) -> (2, -1)\r\n\t  Titan 1: (1, 1) -> (2, 0)\r\n( Now Titan 2 has detected Armin! )\r\n\r\nMove 3: Armin: (2, -1) -> (3, 0)\r\n\t  Titan 1: (2, 0) -> (2, -1)\r\n\t  Titan 2: (3,-2) -> (2, -1)\r\n",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617288767212"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617293941821"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6065e97c45a5d100227e07bd"
  },
  "tags": [
    "game theory, math, geometry"
  ],
  "code": "APR21F",
  "points": 300,
  "name": "Eren Vs Jean",
  "description": "<p style=\"text-align:center;\"><img src=\"https://i.imgur.com/9IjWkXSm.jpg\" width=\"422\" height=\"418\"></p>\r\n<p>Eren and Jean had a huge fight but Levi caught them and beat them up. So, they decided to settle it by playing a game.</p>\r\n<p>The game progresses turn by turn, <strong>Eren moves first</strong>.</p>\r\n<p>Consider the 2D plane. There is a token which is initially at <strong>(0,0)</strong>. In one move a player must increase either the <strong>X</strong> coordinate or the <strong>Y</strong> coordinate of the token by <strong>exactly</strong><strong> K</strong>. In doing so, the player must ensure that the token stays within a (Euclidean) distance <strong>D</strong> from <strong>(0,0)</strong>.</p>\r\n<p>In other words, if after a move the coordinates of the token are <strong>(P,Q)</strong>,</p>\r\n<p>then <strong>P</strong><strong><sup>2</sup> </strong><strong>+ Q</strong><strong><sup>2</sup> </strong><strong>&lt;= D</strong><strong><sup>2</sup></strong><strong> must hold</strong>.</p>\r\n<p>The game ends when a player is unable to make a move. It can be shown that the game will end in a finite number of moves. If both players play optimally, determine who will win.</p>",
  "explainInput": "<ul>\r\n<li>The first line of the input consists of a single integer <strong>T</strong>, denoting the number of test cases</li>\r\n<li>The first line of each test case consists of <strong>2</strong> space-separated integers <strong>&nbsp;D</strong> and <strong>K.</strong></li>\r\n</ul>",
  "explainOutput": "<p>For each test case,<strong> if Eren wins the game, print \"Eren\", otherwise print \"Jean\"</strong> (without the quotes).</p>",
  "constraints": "<ul>\r\n<li>1 &lt;= <strong>T </strong>&lt;= 100</li>\r\n<li>1 &lt;= <strong>D</strong> &lt;= 10<sup>9<sup></li>\r\n<li>1 &lt;= <strong>K</strong> &lt;= <strong>D</strong></li>\r\n</ul>",
  "example": "<b>Input:</b>\r\n3\r\n2 1\r\n5 2\r\n10 3\r\n\r\n<b>Output:</b>\r\nJean\r\nEren\r\nJean\r\n",
  "explanation": "<b>Test Case 1:</b> \r\nOne possible sequence of moves can be\r\n(0,0) --Eren--> (0,1) --Jean--> (0,2).\r\nEren has no moves left, so Jean wins.\r\n<img src=\"https://i.imgur.com/l8uzEtD.png\" width=\"255\" height=\"253\">",
  "contestCode": "APR21",
  "createdAt": {
    "$date": {
      "$numberLong": "1617291644932"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1617432518047"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "60fa6ca19e8f310022c7d33f"
  },
  "tags": [
    "math"
  ],
  "code": "SRM22C",
  "points": 200,
  "name": "Complete The Assignment",
  "description": "Chef has an assignment to complete, where he has to fill an excel sheet with some data. Now as you know, the rows of excel sheets are in numeric notation whereas the columns are in alphabetical notation. Chef has <b>T</b> column numbers <b>C<sub>1</sub>, C<sub>2</sub>, C<sub>3</sub> …. C<sub>n</sub></b> where he has to insert data, but he doesn’t know how to convert it to alphabetic notation. \r\nChef asks his best friend Vikram to convert these column numbers. Now, help Vikram to crack this one.\r\n\r\nHint: This is as easy as converting decimal to binary.",
  "explainInput": "The first line of input contains an integer <b>T</b> denoting the number of columns. Each test case consists of a single line containing the column number.\r\n",
  "explainOutput": "For each test case, output a single line with the correct alphabetical notation of the column.",
  "constraints": "1 <= <b>T</b> <=10000\r\n1 <= <b>C<sub>1</sub>,C<sub>2</sub>,C<sub>3</sub>,..,C<sub>T</sub></b> <= 10000",
  "example": "Input:\r\n5\r\n1\r\n26\r\n27\r\n28\r\n702\r\n\r\nOutput:\r\nA\r\nZ\r\nAA\r\nAB\r\nZZ",
  "explanation": "Column 1 is A\r\nColumn 26 is Z\r\nColumn 27 which is 26+1 is AA\r\nColumn 28 which is 26+2 is AB\r\nColumn 702 which is (26*26)+26 is ZZ",
  "contestCode": "SRM22",
  "createdAt": {
    "$date": {
      "$numberLong": "1627024545641"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1627024704879"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "60fa79a49e8f310022c7d341"
  },
  "tags": [
    "#cakewalk"
  ],
  "code": "SRM22A",
  "points": 100,
  "name": "True Friendship",
  "description": "<strong>A true friend is someone who has your back, no matter what</strong>. One day, Venky got stuck in a serious problem so he decides to take help from his friends and tries to call them in the middle of the night. So Venky called some of his friends and he got their responses in the form of YES/NO i.e. his friends acknowledged Venky's problem and offered their help. Your task is to count the number of friends who helped Venky in his difficult time.",
  "explainInput": "The first line of input contains an integer<strong> T</strong> denoting the number of test cases.\r\nDescription of T test cases follows:\r\nFirst line of each test case contains a positive integer <strong>N</strong>, denoting the number of people. Next N lines contain the friend&rsquo;s name (<strong>S</strong>) and their response which is either YES or NO.\r\nNote: Assume that only first name is mentioned",
  "explainOutput": "For each test case, output a single integer, the no. of friends who helped Venky.",
  "constraints": "1&lt;=<strong> T</strong>&lt;=1000\r\n1 &lt;= <strong>N</strong> &lt;= 100\r\n2 &lt;= |<strong>S</strong>| &lt;= 20",
  "example": "<strong>Input:</strong>\r\n2\r\n3\r\nChinmay YES\r\nSayali NO\r\nArvind YES\r\n2\r\nShantanu YES\r\nSudhanshu YES\r\n<strong>Output:</strong>\r\n2\r\n2\r\n<br /><br />",
  "explanation": "In the first test case, friend Chinmay and Arvind agreed to help Venky, so the total count is 2.\r\n<br/>\r\nIn the second test case, Shantanu and Sudhanshu both agreed to help Venky, so the total count is 2.",
  "contestCode": "SRM22",
  "createdAt": {
    "$date": {
      "$numberLong": "1627027876140"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1627029873988"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "60fa7d829e8f310022c7d343"
  },
  "tags": [
    "#implementation"
  ],
  "code": "SRM22B",
  "points": 100,
  "name": "Social Network",
  "description": "In LinkedIn if people comment on some post, it&rsquo;s visibility reaches to all of their connections whereas if they like some post it reaches to half of their connections and if they do not nothing it doesn&rsquo;t reach to any of their connections. Note that if, no. of connections is an odd number, half of it is ceil(X/2) i.e half of 5 is 3.\r\nRecently, Venky wrote a tech blog and posted it on LinkedIn. Venky wants his blog to reach maximum people so he shares his blog to friends and families on LinkedIn. Now your task is to count the reach count of the blog.",
  "explainInput": "The first line of input contains an integer<strong> T</strong> denoting the number of test cases.\r\nDescription of T test cases follows:\r\nFirst line of each test case contains a positive integer <strong>N</strong>, denoting the number of people. Next N lines contain friend&rsquo;s name (<strong>S</strong>), connection count (<strong>C)</strong> and an integer <strong>R</strong>, denoting the response of the connection (space separated).\r\nHere 1 denotes a LIKE, 2 denotes a COMMENT and 0 denotes no response.\r\nNote: Assume that only first name is mentioned",
  "explainOutput": "For each test case, output a single integer i.e the reach of the blog post.",
  "constraints": "1&lt;=<strong> T </strong>&lt;=1000\r\n1 &lt;= <strong>N </strong>&lt;= 50\r\n2 &lt;= |<strong>S</strong>| &lt;= 20\r\n1 &lt;= <strong>C</strong> &lt;= 1000\r\n0 &lt;= <strong>R</strong> &lt;= 2",
  "example": "<strong>Input:</strong>\r\n2\r\n3\r\nArvind 500 0\r\nSayali 400 1&nbsp;\r\nSudhanshu 600 2\r\n2\r\nChinmay 300 1\r\nSanoop 600 1\r\n<br />\r\n<strong>Output:</strong>\r\n800\r\n450\r\n",
  "explanation": "<p>In the first test case, Arvind doesn&rsquo;t perform any action so 0 reaches. Sayali performed LIKE action so it reached to half of her connections i.e. 200 and Sudhanshu performed COMMENT action so it reached to all of his connections i.e. 600. So total reach is 800 (200 + 600)</p>\r\nIn the second test case, Chinmay and Sanoop both performed LIKE action so it reached half of their connections i.e 450 (150 +300)",
  "contestCode": "SRM22",
  "createdAt": {
    "$date": {
      "$numberLong": "1627028866162"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1627029413290"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "610e99164575780022cbbdc6"
  },
  "tags": [
    "dynamic"
  ],
  "code": "SRM23B",
  "points": 100,
  "name": "Pool Formation",
  "description": "<p>The Olympic committee has to form a pool of size <strong>3</strong> from <strong>N</strong> number of athletes for a particular sport. Now, to form a pool following conditions need to be followed:</p><p>A pool can only be formed of athletes having prime jersey-nos(JNO), also the JNO of one athlete must be the sum of JNO&rsquo;s of the other two in the same pool.</p><p>Eg: if <strong>x,y,z</strong> are three athletes and <strong>x&lt;y&lt;z&lt;=N, x+y=z.</strong></p><p>Help the Olympic committee find different combinations of groups that can be formed.</p>",
  "explainInput": "<p><span style=\"font-weight: 400;\">First line is </span><strong>T</strong><span style=\"font-weight: 400;\"> no. of test cases</span></p><p><span style=\"font-weight: 400;\">Second line shows </span><strong>N</strong><span style=\"font-weight: 400;\"> no of athletes.</span></p>\r\n",
  "explainOutput": "<p>Print number of different combinations of pools that can be formed .</p>",
  "constraints": "<p>1&lt;=<strong>T</strong>&lt;=10^5<br />1&lt;=<strong>N</strong>&lt;=10^6</p>\r\n\r\n",
  "example": "<p><strong>Input:</strong></p><p><span style=\"font-weight: 400;\">3</span></p><p><span style=\"font-weight: 400;\">3</span></p><p><span style=\"font-weight: 400;\">6</span></p><p><span style=\"font-weight: 400;\">20</span></p><p>&nbsp;</p><p><strong>Output:</strong></p><p><span style=\"font-weight: 400;\">0</span></p><p><span style=\"font-weight: 400;\">1</span></p><p><span style=\"font-weight: 400;\">4</span></p>",
  "explanation": "<p><strong>Test Case 1:</strong></p><p><span style=\"font-weight: 400;\">For n=3 only 1,2,3 roll nos can be used 1+2=3 but 1 is not a prime number, thus 0 groups will be formed.</span></p><p>&nbsp;</p><p><strong>Test Case 2:</strong></p><p><span style=\"font-weight: 400;\">For n=6 a tuple of (2,3,5) can be considered as 2+3=5 and 2,3,5 are all prime nos. So in total 1 group can be formed.</span></p>\r\n",
  "contestCode": "SRM23",
  "createdAt": {
    "$date": {
      "$numberLong": "1628346646411"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1628438436124"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "610eae514575780022cbbdd1"
  },
  "tags": [
    "#math #implementation"
  ],
  "code": "SRM23A",
  "points": 100,
  "name": "Tokyo Travel",
  "description": "Avinash wants to go and watch the Olympics in Tokyo. He decides to shop for the same and decides to go to a mall. He then decides to make purchases only in <strong>X.</strong>\r\n&nbsp;1) <strong>X</strong> is multiple of 200\r\n2) The bank charges 20 rs per transaction\r\nAvinash looks at the <strong>Z</strong> number of items at the mall.&nbsp;\r\n<strong>N</strong> is the bank account balance before visiting the mall.\r\nCalculate balance after all valid transactions and also how many transactions took place.&nbsp;",
  "explainInput": "The first line of input consists of a single integer <strong>T</strong> denoting the number of test cases.\r\nFirst line of each test case consists of 2 space separated integers - the current balance <strong>N</strong> and the number of withdrawals <strong>Z</strong>.\r\nNext line of each test case contains <strong>Z</strong> space separate integers denoting price of each item.\r\n<p>",
  "explainOutput": "Output 2 space separated integers denoting the account balance at the end of all attempted transactions and number of successful transactions.",
  "constraints": "<strong>Z </strong>&lt;= 1e5\r\n1 &lt;= <strong>Z</strong><strong>1</strong><strong>,Z</strong><strong>2</strong><strong>,Z</strong><strong>3</strong><strong>,..,Z</strong><strong>z </strong>&lt;= 1e9 ",
  "example": "<strong>Input:</strong>\r\n1\r\n500 5\r\n100 120 50 1029 200\r\n<strong> Output:</strong>\r\n280 1",
  "explanation": "Only valid amount that fits the criteria of the transaction is 200.\r\nHence balance = 500 - (200+20) = 280.",
  "contestCode": "SRM23",
  "createdAt": {
    "$date": {
      "$numberLong": "1628352081082"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1628417379315"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "613b4d6df969d70023246c83"
  },
  "tags": [
    "dp",
    "adhoc"
  ],
  "code": "SEP21D",
  "points": 200,
  "name": "Three 3verywhere",
  "description": "<strong>'33'</strong> Number Sequence is a subsequence of whole numbers such that every number(X<sub>i</sub>) which belongs to the sequence has 3 conditions:\r\n\r\n1) Tens place of X<sub>i</sub> is 3\r\n2) X<sub>i</sub> is divisible 3\r\n3) X<sub>i+1</sub> > X<sub>i</sub> (i.e. sequence is sorted in ascending order )\r\n\r\nSequence : 30 , 33 , 36 , 39 , 132 , 135 ,....",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. \r\nThe description of T test cases follows.\r\nEach test case contains a single integer <strong>k</strong>. ",
  "explainOutput": "<strong>kth</strong> element of the <strong>'33'</strong> Number Sequence.",
  "constraints": " 1 <= <strong>T</strong> <= 1000\r\n 1 <= <strong>k</strong> <= 10<sup>6</sup>",
  "example": "<strong>Input:</strong>\r\n3\r\n1\r\n3\r\n5\r\n<strong>Output:</strong>\r\n30\r\n36\r\n132",
  "explanation": "The Sequence is 30 , 33 , 36 , 39 , 132 , 135 …….\r\n\r\nSo for \r\nK = 1 => Output = 30  \tFirst element of Sequence\r\nK = 3 => Output = 36\tThird element of Sequence\r\nK = 354345 =>  Output = 10630332    \t\r\n",
  "contestCode": "SEP21",
  "createdAt": {
    "$date": {
      "$numberLong": "1631276397379"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1631290917060"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "613b7375f969d70023246c88"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SEP21A",
  "points": 100,
  "name": "Hit or miss",
  "description": "Chef is playing Darts and wants to improve at it. He is tracking a few stats.\r\nYou are given the number of throws <b>N</b> and the number of misses <b>M</b>. Help Chef find the percentage accuracy of the throws (upto 2 decimal points).",
  "explainInput": "The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\r\nEach test case contains a single line with 2 space separated integers N and M.",
  "explainOutput": "Output a single number on a new line denoting the accuracy for each test case.",
  "constraints": "1 <= T <= 1000\r\n1 <= N <= 10<sup>9</sup>\r\n0 <= M <= N\r\n",
  "example": "Input:\r\n3\r\n10 6\r\n7 5\r\n9 4\r\n\r\nOutput:\r\n40.00\r\n28.57\r\n55.56",
  "explanation": "Test case 1:\r\nNo. of hits = 10-6 = 4\r\n4/10*100 = 40.00\r\n",
  "contestCode": "SEP21",
  "createdAt": {
    "$date": {
      "$numberLong": "1631286133932"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1631351492085"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "613b896982592a00235c0a3d"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SEP21C",
  "points": 200,
  "name": "Debug Freelancing",
  "description": "Chef has got too many bugs in his app and he has been scratching his head for a while so he decided to take help from freelancers to debug his code. They have fixed rates dependent upon bug level and session time.\r\n\r\nThere are five bug levels<br />Level(B)&nbsp; &nbsp;Rate<br />1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;50<br />2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 100<br />3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 200<br />4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;300<br />5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;400\r\n\r\n<p>Basic session is of 1 hour and he charges it according to bug level and he charges extra 100rs per hour (H) if you want to continue more than 1 hour of the basic session.\r\n\r\nCalculate how much money Chef would have to pay.</p>",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. The description of T test cases follows.\r\n\r\nFirst Line of each test case contains integer <strong>N </strong>denoting the number of bugs.\r\n\r\nNext <strong>N</strong> lines contain two space separated integers <strong>B &amp; H </strong>&nbsp;denoting bug level and no of hours respectively.",
  "explainOutput": "Output a single number on a new line denoting the total amount to be paid.",
  "constraints": "1 &lt;= T &lt;= 100\r\n1 &lt;= N &lt;= 10<sup>5</sup>\r\n1 &lt;= B &lt;= 5\r\n1 &lt;= H &lt;= 10",
  "example": "<strong>Input:</strong>\r\n1\r\n3 \r\n1 1\r\n4 2\r\n5 3\r\n\r\n<strong>Output:</strong>\r\n1050",
  "explanation": "The first test case has 3 bugs. \r\nThe first bug is of lvl 1 hence 50 rs and no extra time is taken. \r\nThe second bug is of lvl 4 and the session was of 2 hours so 300 + 100=400 rs.\r\nThe third bug is of lvl 5 and the session was of 3 hrs so 400+200=600 rs.\r\nSo total is 600+400+50 = 1050 rs",
  "contestCode": "SEP21",
  "createdAt": {
    "$date": {
      "$numberLong": "1631291753211"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1631353826236"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "613b951f82592a00235c0a3f"
  },
  "tags": [
    "bit manipulation"
  ],
  "code": "SEP21E",
  "points": 300,
  "name": "Binary Pair Swap",
  "description": "<p>Given a positive integer <strong>N</strong>, convert it into its binary form and make pairs starting from LSB (right side). Then swap all the adjacent pairs and output the resulting number in integer form.</p>\r\n<p>You can prepend 0&rsquo;s if the given number in binary form doesn&rsquo;t make even pairs.</p>",
  "explainInput": "<p>The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. The description of T test cases follows.</p>\r\n<p>Each test case contains a single integer <strong>N</strong>.&nbsp;</p>",
  "explainOutput": "<p>Output a single integer after performing the above-mentioned operations for each test case.</p>",
  "constraints": "<p>1 &lt;= T &lt;= 1000\r\n20 &lt;= N &lt;= 220</p>",
  "example": "<p><strong>Input:</strong>\r\n3\r\n12\r\n22\r\n90</p>\r\n<p><strong>Output:</strong>\r\n3\r\n73\r\n90</p>",
  "explanation": "<p>Example 1:\r\n12 is represented as 1100 in binary form. It forms 2 pairs 11 and 00. And when swapped the number becomes 0011, which in decimal form is 3.</p>\r\n<p>Example 2:\r\n22 in binary form is 10110, since it doesn&rsquo;t form even number of pairs we&rsquo;ll prepend 3 0&rsquo;s to it, so it becomes 00010110. Now the pairs are 00, 01, 01, and 10. When adjacent pairs are swapped the number becomes 01001001 which in decimal form is 73.</p>",
  "contestCode": "SEP21",
  "createdAt": {
    "$date": {
      "$numberLong": "1631294751362"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1631353789024"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "613c5a447fedaa0023099468"
  },
  "tags": [
    "math"
  ],
  "code": "SEP21B",
  "points": 100,
  "name": "Best Book",
  "description": "Ben loves reading books. He recently finished reading a book and wants to start another one. Ben always chooses the best book. A book can be characterized using Length(L) and Rating(R) . Best book is described as the book with maximum <strong>L*R</strong>. \r\nHelp Ben to decide which book is the best. \r\n<strong>Note:</strong> If there are several books with the same max L*R then print the index of the book with higher rating.  And if there is still a tie then the book with lower index should be printed.\r\n",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. The description of T test cases follows.\r\nThe first line of each test case contains an integer <strong>N</strong>\r\nThe next N lines contains two space separated integers <strong>Li</strong> and <strong>Ri</strong>",
  "explainOutput": "Output a single number on a new line denoting the <strong>index of the best book</strong>.",
  "constraints": "1<=<strong>T</strong><=100\r\n1<=<strong>N</strong><=10<sup>3</sup>\r\n1<=<strong>Li,Ri</strong><=1.5*10<sup>4</sup>",
  "example": "<strong>Input:</strong>\r\n2\r\n3\r\n1 2\r\n3 2\r\n4 1\r\n4\r\n2 6\r\n3 4\r\n1 4\r\n5 2\r\n<strong>Output:</strong>\r\n2\r\n1",
  "explanation": "<strong>Test case1:</strong>\r\nMax L*R is 6 (3*2)\r\n\r\n<strong>Test case2:</strong>\r\nIndex 1 and 2 have same L*R i.e 12 but rating of book in index 1 is higher than that of index 2",
  "contestCode": "SEP21",
  "createdAt": {
    "$date": {
      "$numberLong": "1631345220133"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1631429839790"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "614c630ba5479f002378776d"
  },
  "tags": [
    "maths",
    " implementation",
    " adhoc",
    " chess"
  ],
  "code": "SRM24C",
  "points": 200,
  "name": "Professor loves chess",
  "description": "<p>Professor likes playing chess while making absolute genius plans for heists, so Berlin gave him a strange chessboard as a gift. The size of this chessboard is not 8x8, but MxN. Professor decides to try playing with a knight on this board. \r\n\r\nThe knight is placed on a square given by &lsquo;X Y&rsquo;, the problem is to find how many squares the knight can go after &lsquo;one move&rsquo;. The &lsquo;one move&rsquo; can be in every possible direction from the given position. Exclude the given square.</p>",
  "explainInput": "The first line of input consists of a single integer <strong>T</strong> denoting the number of boards Berlin gifted to the professor. \r\nFor each board, two lines of inputs are given. \r\nFirst line specifies the size of board <strong>M N</strong>.\r\nSecond line denotes the position of the knight on the board <strong>X, Y</strong>.",
  "explainOutput": "<p>Print the total number of squares the knight can go after one move.</p>",
  "constraints": "1 &lt;= <strong>T</strong> &lt;= 10<sup>3</sup>\r\n3 &lt;= <strong>M, N</strong> &lt;= 10<sup>8</sup>\r\n1 &lt;= <strong>X</strong> &lt;= N \r\n1 &lt;= <strong>Y</strong> &lt;= M",
  "example": "<strong>Input</strong>\r\n1 \r\n6 8  \r\n4 2 \r\n\r\n<strong>Output</strong>\r\n 31",
  "explanation": "<img src=\"https://i.imgur.com/GtNSX5v.jpeg\" alt=\"Explanation\">\r\n\r\nResult = 7 + 7 + 7 + 3 + 2 + 5 = 31",
  "contestCode": "SRM24",
  "createdAt": {
    "$date": {
      "$numberLong": "1632396043316"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1632664362591"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "614c65eba5479f002378776e"
  },
  "tags": [
    "adhoc",
    " strings"
  ],
  "code": "SRM24B",
  "points": 100,
  "name": "Professor loves vowels",
  "description": "Tokyo wants to know the plan of Professor. But it's blueprints are in a high security vault. Tokyo has to deduce the password from a string <strong>S</strong> she received from Professor. Help Tokyo deduce the passphrase.\r\n\r\nYou are given a string <strong>S</strong> and <strong>N </strong>number of strings with variable length.\r\nOut of the N strings, the string that has the same vowels and their respective frequency as string S is the passphrase to the vault. If no such string exists, output <strong>-1</strong>",
  "explainInput": "The first line of input consists of a single integer <strong>T</strong> denoting the number of Testcases.\r\nFor each Testcase,\r\nFirst line of input consists of a single integer <strong>N</strong> denoting the number of strings.\r\nSecond line of input consists of the original string <strong>S</strong>.\r\nFurther <strong>N</strong> lines of input consist of strings N1,N2,....,Nn",
  "explainOutput": "Output the string that satisfies the given condition. If no such string exists output -1",
  "constraints": "1 &lt;= <strong>T</strong> &lt;= 1000\r\n1 &lt;= <strong>N, S</strong> &lt;= 150\r\n1&lt;= <strong>Ni</strong>&lt;= 200",
  "example": "<strong>Input:</strong>\r\n2\r\n2\r\nabeuico\r\nuaiecbco\r\ncaioco\r\n3 \r\naeioouq\r\naoiqeu\r\naiiooq\r\naooiqeu\r\n\r\n<strong>Output:</strong>\r\nuaiecbco\r\naooiqeu\r\n",
  "explanation": "<strong>Test Cases 2:</strong>\r\n\r\nFor string <strong>aeioouq</strong>, occurrence is a: 1, e: 1, i: 1, o: 2, u: 1\r\nThe same vowel occurrence is present in <strong>aooiqeu </strong>hence its a valid string \r\nwhereas <strong>aoiqeu</strong> or <strong>aiiooq</strong> are invalid strings as they don&rsquo;t have the same occurrence.",
  "contestCode": "SRM24",
  "createdAt": {
    "$date": {
      "$numberLong": "1632396779917"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1632666318648"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "614c708da5479f0023787774"
  },
  "tags": [
    "adhoc "
  ],
  "code": "SRM24A",
  "points": 100,
  "name": "Winner gets Share ",
  "description": "Tokyo and Palermo are playing a unique game to see who wins. They decide to have 5 rounds<br />Now the rules of the game are as follows:\r\n\r\n1. The one who has the maximum score will be the winner of that round.\r\n2. The one who wins the maximum number of rounds will win the game.\r\n3. Tokyo plays first in each round\r\n4. Incase of tie: \r\n<ul><li>If both win an equal number of rounds the winner is the one who has the highest score in the overall rounds.</li><li>If the highest score is also the same both win the game. (i.e print Tokyo Palermo)</li>\r\n</ul>",
  "explainInput": "The first line of input consists of a single integer <strong>T</strong> denoting the number of batch rounds.\r\nFurther lines of input consist of 2 space separated integers denoting the score of players <strong>X<sub>i</sub> , Y<sub>i</sub></strong> for each round.\r\n",
  "explainOutput": "Print who won the Share for the specific batch of rounds.",
  "constraints": "1 <= <strong>T</strong><= 1000\r\n1<=<strong>X<sub>i</sub> , Y<sub>i</sub></strong><=9\r\n",
  "example": "<strong>Input:</strong>\r\n4\r\n3 1 3 2 6 5 2 5 7 5 \r\n3 6 1 5 2 8 9 2 6 1 \r\n1 3 5 2 2 2 2 9 8 7  \r\n1 3 5 2 9 9 3 1 7 8 \r\n\r\n<strong>Output:</strong>\r\nTokyo \r\nPalermo\r\nPalermo\r\nTokyo Palermo\r\n",
  "explanation": "For Third batch :\r\nRound 1 :1<3 so Palermo won a round \r\nRound 2 : 5>2 soTokyo won a rounds\r\nRound 3 :2=2 so its draw \r\nRound 4 : 2<9 so Palermo won 2 rounds \r\nRound 5 : 8>7 so Tokyo won 2 rounds \r\n<strong>Palermo</strong> won this particular batch as he has maximum number in hand i.e 9\r\n",
  "contestCode": "SRM24",
  "createdAt": {
    "$date": {
      "$numberLong": "1632399501777"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1632664830694"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "614cb2c0b93b4e00230e2782"
  },
  "tags": [
    "adhoc"
  ],
  "code": "SRM24D",
  "points": 300,
  "name": "Lisbon's Integers",
  "description": "Lisbon has a pattern in front of her to solve to open an exit door. She has been given 4 integers N X Y Z along with an array of size N. You need to make sure that the Y<sup>th</sup> largest number in the array is X and the only digit that you can change in order to get this is the Z<sup>th</sup> largest number of the array.\r\nThe answer to the puzzle is the minimum number that can be added or subtracted to the Z<sup>th</sup> largest number of the array. If it is not possible to make X the Y<sup>th</sup> largest number, output a NO.\r\n\r\nNote:\r\n<ul> <li>There should be no repetition in array</li> <li>X must be present in the array&nbsp;</li> <li>The value of Zth largest number can&rsquo;t be negative</li> </ul>\r\nHelp Lisbon solve the code and save the team.",
  "explainInput": "The first line of input consists of a single integer T denoting the number of test cases, i.e., the number of patterns.\r\nFirst line of each test consists of 4 space separated integers N, X, Y, Z\r\nSecond line of each case consists of the array {A<sub>1</sub>, A<sub>2</sub>, ……, A<sub>N</sub>}",
  "explainOutput": "Output a single number on a new line denoting the answer to the puzzle",
  "constraints": "1 <= <b>T </b><= 1000 \r\n2 <= <b>N </b><= 10<sup>5</sup>\r\n1 <= <b>X </b><=5*10<sup>5</sup>\r\n1 <= <b>Y</b> <= 10<sup>5</sup>\r\n1 <=  <b>Z </b><= 10<sup>5</sup>\r\n1 <=  <b>A<sub>i</sub> </b><= 5*10<sup>5</sup>\r\n",
  "example": "<strong>Input:</strong>\r\n2\r\n9 6 4 3\r\n1 2 3 5 6 7 8 9 10\r\n8 7 3 6\r\n1 2 12 3 9 8 7 11\r\n\r\n<strong>Output:</strong>\r\n4\r\nNO",
  "explanation": "In the first test case, you need 6 to be the 4<sup>th</sup> largest number. Currently, 6 is the 5<sup>th</sup> largest number. If you subtract 4 from the 3<sup>rd</sup> largest number, you can make 6 the 4<sup>th</sup> largest in the array.\r\n\r\nIn the second test case, there is no number you can change the 6<sup>th</sup> largest number to, that could make 7 the 3<sup>rd</sup> largest number, so the output is NO\r\n",
  "contestCode": "SRM24",
  "createdAt": {
    "$date": {
      "$numberLong": "1632416448130"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1632418319958"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618bff9869467c00238c69b7"
  },
  "tags": [
    "adhoc "
  ],
  "code": "NOV21E",
  "points": 200,
  "name": "Jidaro Relation ",
  "description": "Jidaro relation is a relation between a series of composite numbers with a prime number which is the greatest prime smaller than the composite number.\r\n",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases.\r\nThe first line of each test case contains an integer <strong>N</strong>.\r\n\r\n",
  "explainOutput": "Output Jidaro number for each given test case  on each on a new line.\r\n",
  "constraints": " 1 <= <strong>T</strong> <= 1000\r\n1 <=<strong>N</strong> <= 10<sup>6</sup>\r\n",
  "example": "<strong>Input</strong>:\r\n5\r\n10\r\n29\r\n40\r\n96\r\n42\r\n<strong>Output</strong>:\r\n7\r\n23\r\n37\r\n89\t\r\n41\r\n",
  "explanation": "10 is a composite number.\r\nPrime numbers close to it are 11 and 7.\r\n7 being smaller is a <strong>Jidaro</strong> number for 10",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636564888718"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636752480067"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618e5faf779365002387323e"
  },
  "tags": [
    "adhoc"
  ],
  "code": "NOV21A",
  "points": 100,
  "name": "Counting Cars",
  "description": "Tom works as a watchman for a car factory where everyday he sees different models of cars (named as for eg model 3 , model 5 , model 6) coming out of the factory.\r\nTom's boss asks him to find the most popular model of car produced for that day.\r\nPopularity depends directly on the number of units of that car model produced , help Tom.",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. The first line of each test case contains an integer <strong>N</strong>, denoting the number of cars for that testcase. The following N numbers denote the model number of the car leaving the factory.",
  "explainOutput": "Print the most popular car model",
  "constraints": "&nbsp;1 &lt;= T &lt;= 100\r\n1&lt;=N&lt;=500\r\n1 &lt;= Ai &lt;= 10000",
  "example": "<strong>Input:</strong>\r\n2\r\n9\r\n1 2 1 1 3 5 4 2 4&nbsp;\r\n11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n<strong>Output:</strong>\r\n1\r\n1\r\n<br /><br /><br /><br />",
  "explanation": "<strong>Explanation:</strong>\r\nModel 1 is the most popular model for that day.\r\nModel 1 is the most popular model for that day.",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636720559916"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636811447846"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618e85c97793650023873240"
  },
  "tags": [
    "adhoc"
  ],
  "code": "NOV21B",
  "points": 100,
  "name": "Samprit's Terminal",
  "description": "Samprit likes to work in terminal/command prompt. Just like almost every coder. \r\n\r\nSamprit also likes to clear the terminal again and again. but he's facing a problem with a weak keyboard. Samprit clears the terminal after every <b>N</b> commands, but the enter key of Samprit's laptop's keyboard is weak and can only be pressed <b>X</b> times. \r\n\r\nCan you help find out how many commands Samprit can run without breaking his keyboard? \r\n\r\n<b>Note:</b>\r\nClearing terminal uses one enter key but clear is not considered a command. So it won't be counted in no. of commands",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases.\r\nEach test case contains two space separated integers <b>N </b> and <b>X</b>.",
  "explainOutput": "For each test case, print a single line containing one integer denoting the number of commands Samprit can execute.",
  "constraints": "1 <= <b>T</b> <= 1000\r\n1 <= <b>N, X</b> <= 10<sup>6</sup>",
  "example": "<b>Input:</b>\r\n3\r\n8 5\r\n2 12\r\n21 21\r\n\r\n<b>Output:</b>\r\n5\r\n8\r\n21",
  "explanation": "<b>TestCase 2:</b> \r\nIn 12 enters, Samprit clears the terminal 4 times after executing every 2 commands which results in the execution of 8 commands.",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636730313403"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636795169126"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618e88557793650023873242"
  },
  "tags": [
    "maths"
  ],
  "code": "NOV21D",
  "points": 200,
  "name": "Bake it Quickly",
  "description": "A Bakery sells cakes in 3 sizes <b>6, 8, 10 slices</b> and it takes <b>21, 28, 35 minutes</b> to bake them respectively.\r\n\r\nParth's birthday is today, and <b>N</b> of his friends will be coming to his party, so he decided to make an order from his favourite bakery. Parth wants to order so much cake that each of his friends gets <b>at least one</b> slice of it. The cooking time of the order is the total baking time of all the cakes in the order.\r\n\r\nYour task is to determine the minimum number of minutes that is needed to make cakes containing at least <b>N</b> slices in total.",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nEach test case consists of a single integer <b>N</b>",
  "explainOutput": "Output a single integer on a new line denoting the minimum number of minutes to bake all required cakes containing N slices for each test case.",
  "constraints": "1 <= <b>T</b> <= 10<sup>3</sup>\r\n1 <= <b>N</b> <= 10<sup>16</sup>",
  "example": "<b>Input:</b>\r\n3\r\n20\r\n15\r\n200\r\n\r\n<b>Output:</b>\r\n70\r\n56\r\n700",
  "explanation": "<b>Test Case 2</b>\r\nParth has to order at least 15 slices. He can order two medium-size cakes, containing 16 slices, and the time to bake them is 56 minutes (28+28)\r\n\r\n<b>Test Case 3</b>\r\nParth has to order cakes containing at least 200 slices in total. He can order 10 small cakes 5 medium cakes and 10 large cakes, in total they contain 10.6+5.8+10.10=200 slices, and the total time to bake them is 10.21+5.28+10.35=700 minutes;",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636730965260"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636817973812"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618e8ad77793650023873243"
  },
  "tags": [
    "strings"
  ],
  "code": "NOV21C",
  "points": 150,
  "name": "Word Game",
  "description": "Hannah and her friends are playing a word game where a player will be given N strings, they have to mix all the strings and make the word “<b>coding</b>” using the alphabets present in the mixed string.\r\nHelp Hannah and her friends to find out the maximum number of times they can spell the word “<b>coding</b>”.\r\n",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case contains an integer <b>N</b>, denoting the number of strings for that testcase.\r\nThe next N lines contain string <b>S<sub>1</sub>, S<sub>2</sub> ,...,S<sub>n</sub></b>. \r\n",
  "explainOutput": "For each test case, print a single line containing one integer — the maximum number of times “coding” can be spelled.\r\n",
  "constraints": " 1 <= <b>T</b> <= 1000\r\n1 <= < <b>N </b> <= 100\r\n1<=<b>|S<sub>i</sub>|</b><=100\r\n<b>Si</b> only contains lowercase alphabets.",
  "example": "<b>Input</b>:\r\n2\r\n5\r\ncommon\r\nhello\r\nwhat\r\ncopper\r\nreading \r\n5\r\nfeeding\t\r\nrandom\r\narena\r\ncodechef\r\nginger\r\n\r\n<b>Output</b>:\r\n1\r\n2\r\n",
  "explanation": "<b>Testcase 1</b>:\r\nAfter mixing all the strings we get ‘c’ 2 times , ‘o’ 4 times, ‘d’ 1 time, ‘i’ 1 time, ‘n’ 2 times and ‘g’ 1 time. So we can make the word “coding” only once.\r\n\r\n<b>Testcase 2</b>:\r\nAfter mixing all the strings we get ‘c’ 2 times , ‘o’ 2 times, ‘d’ 3 times, ‘i’ 2 times, ‘n’ 4 times and ‘g’ 3 \ttimes. So we can make the word “coding” twice.\r\n",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636731607166"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636731849911"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618e8b9e7793650023873244"
  },
  "tags": [
    "mex, maths"
  ],
  "code": "NOV21G",
  "points": 300,
  "name": "Mexy Series",
  "description": "There is a series such that for each <b>i</b> in 0..1..2..3..4 the numbers in the series are <b>⌊(3*i+1)/2⌋</b> where ⌊ ⌋ denotes floor function. So series would be like 0, 2, 3, 5, 6, 8, 9, 11, 12…… and so on.\r\n\r\nYou have been given an array <b>A</b> with <b>N</b> elements. You have to add <b>exactly G</b> no of elements of your choice in this array and make the MEX of the array equal to <b>P<sup>th</sup></b> highest mex value which <b>belongs to the series.</b> It is guaranteed that there exists <b>P<sup>th</sup></b> highest value of mex. \r\n\r\nCheck explanation for better understanding\r\n<b>Note:</b> \r\nMEX of an array is a minimum non-negative integer that is not present in the array.",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case contains three space-separated integers <b>N, P, G</b>\r\nThe second line contains <b>N</b> space-separated integers.",
  "explainOutput": "Print the P<sup>th</sup> highest mex value which is present in the series.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>N, G</b> <= 10<sup>5</sup>\r\n1 <= <b>P</b> < 10<sup>5</sup>\r\n1 <= <b>A<sub>i</sub></b> <= 10<sup>5</sup>",
  "example": "<b>Input:</b>\r\n2\r\n4 4 10\r\n2 3 5 12\r\n8 1 4\r\n7 6 12 17 1 19 14 16\r\n\r\n<b>Output:</b>\r\n8\r\n5",
  "explanation": "<b>Test Case 1:</b>\r\nHere current mex is 0 on adding 0 to array,  g is reduced by one. Next mex is 1 and g becomes 8 and so on… 10 values added in array are (i.e. mex values) 0,1,4,6,7,8,9,10,11,13 and we get mex as 14.\r\nFrom these, the values which belong to series are 0, 6, 8, 9, 11, 14 and p<sup>th</sup> highest i.e. 4<sup>th</sup> highest value is 8 so instead of adding 8 in the array we will add 14 in it and hence mex of the array would be 4th highest mex value i.e. 8\r\n\r\n<b>Test Case 2: </b>\r\n4 values needed to be added in the array are 0 2 3 4 and current mex would be 5 so array of mex values is 0 2 3 4 5 out of these, nos which belong to series are 0 2 3 5 and 1st highest mex value would be <b>5</b>",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636731806360"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649910966676"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618ec686dfc674002301c26b"
  },
  "tags": [
    "strings"
  ],
  "code": "NOV21F",
  "points": 250,
  "name": "Flipping Cards",
  "description": "<p>Students of SIES GST introduce a different type of card game for incoming FE&rsquo;s. So, there are <strong>N</strong> cards of either <strong>&ldquo;X&rdquo; or &ldquo;O&rdquo;</strong> placed randomly on the table. The player has to arrange the cards in such a fashion that all the &ldquo;X&rdquo; cards have some <strong>q</strong> distance between them, to bring a slight twist to the situation the cards are arranged in a circular fashion.&nbsp;</p><p>A player can <strong>flip(&ldquo;X&rdquo; flips to &ldquo;O&rdquo; and vice-versa)</strong> some cards in order to get the desired arrangement.&nbsp;</p><p>The player who achieves the result in minimum flips wins.</p>",
  "explainInput": "<p>The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases.</p><p>The first line of each test case contains an integer <strong>N</strong>, denoting the number of cards in the sequence.</p><p>String <strong>S</strong> representing the sequence of cards.</p>",
  "explainOutput": "<p>Print the minimum flips made in order to obtain the desired sequence.</p>",
  "constraints": "<p>1 &lt;= T &lt;= 1000</p><p>1 &lt;= N &lt;= 10<sup>3</sup></p>",
  "example": "<p><strong>Input:</strong></p><p>2</p><p>6</p><p>XXOOXX</p><p>4</p><p>OOOX&nbsp;</p>\r\n<p><strong>Output:</strong></p><p>2</p><p>0</p><p><br /><br /></p>",
  "explanation": "<p><strong>Test Case 1:</strong></p><p>Consider the sequence as <strong>X X O O X X</strong></p><p>If we flip the cards at position 3 and 4 like this:<strong> X X X X X X</strong></p><p><strong>Test Case 2:&nbsp;</strong></p><p>As there is only one X so it has no particular distance from corresponding X, therefore we don&rsquo;t have to flip any cards</p><p><br /><br /></p>",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636746886131"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636811866175"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "618edf00dfc674002301c26e"
  },
  "tags": [
    "dfs",
    " tree"
  ],
  "code": "NOV21H",
  "points": 350,
  "name": "Maze Runner",
  "description": "Thomas wants to go through a maze. The maze at each level can have <b>at most two doors</b> (left and right). \r\nThomas can choose between them and continue until he exits the maze.\r\nAt each door there's a number associated with it which tells about the distance to the next lvl(door).\r\nThomas has limited fuel (<b>S</b>).\r\n\r\nHelp Thomas find all the paths in the maze which will help him exit the maze and empty his fuel tank completely.",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases.\r\n\r\nFirst line of each test case contains integer <b>S</b> denoting the amount of fuel and integer <b>N</b> denoting the number of tree nodes.\r\n\r\nSecond line contains the <b>N</b> space separated integers denoting each door value.",
  "explainOutput": "Output a single integer denoting the number of paths that <b>exits</B> the maze and <b>empties</b> the fuel tank completely.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>S</b> <= 1000\r\n1 <= <b>N</b> <= 100\r\n1 <= <b>A<sub>i</sub></b> <= 200",
  "example": "<b>Input:</b>\r\n2\r\n11 8\r\n2 3 5 7 6 4 1 10\r\n8 9\r\n4 3 8 5 1 2 7 3 11\r\n\r\n<b>Output:</b>\r\n2\r\n1",
  "explanation": "<img src=\"https://i.imgur.com/PDVKytW.png\" alt\"Tree\">\r\n\r\n2->5->4 and 2->3->6 are valid paths as it completely empties the fuel tank and exits the maze.",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1636753152909"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1636753348645"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61d941c1e0fb7f00247ac020"
  },
  "tags": [
    "adhoc math "
  ],
  "code": "CODEh-A",
  "points": 100,
  "name": "Happy Meter ",
  "description": "Rohit has been building a prototype which can help policemen to check whether a person is drunk over a limit or not. \r\nHe calls his machine a Happy Meter.\r\n\r\nHappy meter was not an ordinary meter machine, it used to generate a number that had a meaning to it. \r\nIt generated 2 types of number <ol><li>Happy Number</li><li>Non-Happy Number </li></ol>\r\nPolicemen found it difficult to decide whether the person was drunk or not.\r\nHelp the Policeman find whether to catch the person or not.\r\n\r\n<strong>Hint:</strong> A happy number is a number that eventually reaches 1 when replaced  by the sum of the square of each digit",
  "explainInput": "The first line of the input contains a single integer T denoting the number of test cases. \r\nNext T lines contain an integer N which is to be decoded.\r\n",
  "explainOutput": "Print \"<strong>Catch</strong>\" if the number is found to be a  happy number.\r\nPrint \"<strong>Leave</strong>\" if the number is found to be not an happy number.\r\n",
  "constraints": "1 <= <strong>T</strong> <= 1000\r\n1 <= <strong>N</strong> <= 10<sup>6</sup>\r\n",
  "example": "<strong>Input:</strong>\r\n5 \r\n13 \r\n12\r\n7\r\n10\r\n4\r\n\r\n<strong>Output:</strong>\r\nCatch\r\nLeave \r\nCatch \r\nCatch\r\nLeave \r\n",
  "explanation": "In the above example number 7 is Happy Number .\r\nAs 7^2 = 49\r\n4^2+9^2= 97\r\n9^2+7^2=130\r\n1^2+3^2+0^2=10\r\n1^2+0^2=1\r\nAs Sum comes to be 1 the number is concluded to be happy and thus we print Catch as an output.\r\n",
  "contestCode": "CH2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1641628097945"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1641676360438"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61d95ad22d678f002403d02c"
  },
  "tags": [
    "adhoc",
    "dp"
  ],
  "code": "CODEh-B",
  "points": 100,
  "name": "Prime Winner",
  "description": "Raj is playing a number game which requires prime number calculation and he hates to calculate them. So you have to help Raj in calculation while he enjoys the game.\r\nSo the game is to calculate the PSD(Prime SetBit Difference) value of a number.\r\nPSD value is the difference in count of set bits (count of 1s in binary representation) for the given number and  count of set bits for the nearest prime number less than the given number.\r\n\r\n<strong>PSD(n) = setBitCount(n) - setBitCount( nearestPrime(n) )</strong>\r\n\r\nIf the PSD Value is greater than 0 print <strong>PRIME LOSES</strong>\r\nIf it is less than 0 print <strong>PRIME WINS</strong>\r\nIf it is equal to 0 print <strong>PRIME EQUALS</strong>\r\n",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases. \r\nNext T lines contain an integer <strong>N</strong> which is the given number for PSD Value Calculation.\r\n",
  "explainOutput": "print <strong>PRIME LOSES</strong> if the PSD Value is greater than 0.\r\nprint <strong>PRIME WINS</strong> if the PSD Value is less than 0.\r\nprint <strong>PRIME EQUALS</strong>if the PSD Value is equal to 0.\r\n",
  "constraints": "1 <= <strong>T</strong> <= 1000\r\n3 <= <strong>N</strong> <= 10<sup>6</sup>\r\n",
  "example": "<strong>Input:</strong>\r\n3\r\n10\r\n3\r\n5\r\n\r\n<strong>Output:</strong>\r\nPRIME WINS\r\nPRIME LOSES\r\nPRIME EQUALS\r\n",
  "explanation": "10 => 1010 (Binary)  no of set bits = 2\r\n\r\nNearest prime number less than 10 = 7\r\n7 => 111 (Binary) no of set bits = 3\r\n\r\nPSD(10) \r\n= setBitCount(10) - setBitCount( nearestPrime(10) )\r\n= setBitCount(10) - setBitCount(7)\r\n= 2 - 3 \r\n= -1\r\n\r\nHence Prime Wins\r\n",
  "contestCode": "CH2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1641634514644"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1641678039337"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61d9c1bd2d678f002403d068"
  },
  "tags": [
    "adhoc",
    " logic"
  ],
  "code": "CODEh-D",
  "points": 200,
  "name": "Drinking Game",
  "description": "<p>Jack decided to have some fun with his drunk friends on 31st eve, he assembled <strong>N </strong>bags with <strong>A[i]</strong> coins in them and arranged them in a row(numbered from 1 to N). His friends should make the number of coins in each bag divisible by a given integer <strong>K </strong>in the following manner.</p><ol>\r\n<li>&nbsp;Choose an integer<strong> z </strong>like <strong>(1&lt;=z&lt;=N).</strong></li><li>&nbsp;Take some coins out of the first z bags, from each <strong>z[i]</strong> bag we can remove some <strong>(0-A[i]) </strong>coins.</li><li>Add required coins to the <strong>(N-z)</strong> bags.</li></ol><p>Now, the number of coins in N-z bags should not exceed the number of coins removed from z bags. But after doing the whole process some coins must be left over <strong>R.</strong>Help his friends find the minimum value of <strong>R.</strong></p>",
  "explainInput": "<p>The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases.&nbsp;</p><p>The next <strong>T</strong> lines consist of two lines:</p><ol><li>Consist of two integers <strong>N,K</strong>.</li><li>Consists of<strong> N</strong> spaced integers <strong>A1,A2,A3,.....,An</strong>.</li></ol>",
  "explainOutput": "<p>The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases.&nbsp;</p><p>Print the smallest value of integer <strong>R</strong>.</p>",
  "constraints": "<p>1 &lt;=<strong> T</strong> &lt;= 10<sup>2</sup></p><p>1 &lt;= <strong>N</strong> &lt;= 10<sup>3</sup></p><p>1 &lt;=<strong> K</strong> &lt;= 10<sup>3</sup></p><p>0 &lt; <strong>A[i]</strong> &lt;= 10<sup>3</sup></p>",
  "example": "<p><strong>Input:</strong></p><p>2</p><p>5 7</p><p>1 14 4 41 1</p><p>3 9</p><p>1 10 19</p><p><strong>Output</strong></p><p>5</p><p>3</p>",
  "explanation": "<p><strong>Test case 1:&nbsp;</strong></p><p>One of the possible cases is choosing z=4 and removing 1,0,4,13 coins from the first 4 bags and adding 13 coins to the 5th bag.</p><p><strong>Test case 2:</strong></p><p>The most optimal solution is to select z=3 and remove 1 coins from each bag</p>",
  "contestCode": "CH2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1641660861518"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1641735213490"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61d9c8cf2d678f002403d077"
  },
  "tags": [
    "#adhoc"
  ],
  "code": "CODEh-C",
  "points": 200,
  "name": " WHO IS SOBER",
  "description": "Two Coders, high on coding on the night of new year decide to play a game who-is-sober to finish their code.\r\n\r\nIn this game, first coder will give a jumbled word to second, and second have to find whether any loop name is present in it or not i.e. FOR or WHILE.\r\n\r\nYou have to find which coder is sober. (Read the explanation for better understanding)\r\nIf all the given words contains loop's name eg. FOR or WHILE, print 'Dry this NewYear' otherwise print 'Hangover this NewYear'.\r\n",
  "explainInput": "The first line of the input contains a single integer <strong>T</strong> denoting the number of test cases.\r\nFor each test case,\r\n\r\n<li>First line consists of a single integer <strong>N</strong> denoting how many jumbled words are given.</li>\r\n<li>Next <strong>N</strong> lines consist of a single jumbled word.</li>\r\n",
  "explainOutput": "</stronPrint &lsquo;Dry this NewYear&rsquo; if all given jumbled words for each test case contains either FOR or WHILE or both.\r\nPrint &lsquo;Hangover this NewYear&rsquo; otherwise.\r\nNote: Print output strings as it is! (Case Sensitive)",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n10 <= <strong>N</strong> <= 200",
  "example": "2\r\n2\r\nWHOLEFRI\r\nWHATISLOVE\r\n2\r\nFREECOCKTAIL\r\nDRUNKTHISYEAR\r\n<strong>Output:</strong>\r\nDry this NewYear\r\nHangover this NewYear",
  "explanation": "<strong>TestCase 1:</strong> In WHOLEFRI, FOR &amp; WHILE both loop names are present. In WHATISLOVE, WHILE loop name is present. In both words, a loop name is present so 'Dry this NewYear'\r\n<strong>TestCase 2:</strong> In FREECOCKTAIL, FOR loop name is present, but in DRUNKTHISYEAR no loop name is present. So, 'Hangover this NewYear'",
  "contestCode": "CH2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1641662671765"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1641678339997"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61fe01ebaa33750024aa5136"
  },
  "tags": [
    "#adhoc"
  ],
  "code": "GSL22A",
  "points": 100,
  "name": "Chloe Loves Flowers ",
  "description": "<p>Chloe loves flowers, her mom brings her M roses , N lilies and O tulips but she wants  to have the minimum possible difference between the number of lilies and roses. She goes to a florist shop where she keeps a minimum X number of tulips with herself and exchanges the rest (1 tulip for 1 rose or 1 lily)</p>\r\n<p>Can you help Chloe by finding how many tulips were exchanged for having the minimum possible difference between the number of roses and lilies.</p>",
  "explainInput": "<p>The first line of input contains single integer <strong>T</strong> denoting the number of test cases.<br />Each line of the test case contains 4 integers denoting <strong>Roses</strong>, <strong>Lilies </strong>, <strong>Tulips</strong> and <strong>Minimum number of tulips</strong> respectively .</p>",
  "explainOutput": "<p>Display the number of <strong>tulips</strong> exchanged.</p>",
  "constraints": "1 &lt;= T &lt;= 1000\r\n1 &lt;= M,N,O,X &lt;= 10^6\r\nX<=O",
  "example": "Input:\r\n3\r\n10 9 4 1&nbsp;\r\n3 8 6 2&nbsp;\r\n15 7 4 3&nbsp;\r\nOutput:\r\n1\r\n4\r\n1",
  "explanation": "<p>TestCase1: On evaluating there are 10 roses, 9 lilies and 4 tulips. As Chloe needs to have minimum 1 tulip with her she can only exchange 3 of tulips.<br />As the initial difference between roses and lilies is 1 thus only 1 tulip is needed to be exchanged thus we print 1 as output&nbsp</p>\r\n<p>TestCase2: On evaluating there are 3 roses, 8 lilies and 6 tulips. As Chloe needs to have minimum 2 with her she can only exchange 4 of tulips. As the initial difference between roses and lilies is 5 but Chloe can only exchange 4 of tulips thus we print 4 as output.</p>",
  "contestCode": "GSL02",
  "createdAt": {
    "$date": {
      "$numberLong": "1644036587609"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1644038099120"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61fe3451aa33750024aa513d"
  },
  "tags": [
    "factorial",
    " gsl"
  ],
  "code": "GSL22D",
  "points": 200,
  "name": "Interesting Discount",
  "description": "<p>Tickets are being sold on a booking company&rsquo;s website for a scheduled football match on Boxing day. Inorder to celebrate this day the company is offering a 50% discount on every ticket sold, however the interesting part is that the discount can be only applied on special ticket numbers.</p><p>A special ticket number<strong>(X)</strong> is the one in which the sum of all different combinations of the number is divisible by<strong> 7</strong>.</p><p>Help in determining whether the given ticket is eligible for a discount, if yes then</p><p><strong>print(&ldquo;YES&rdquo;)</strong> and if it is not eligible <strong>print(&ldquo;NO&rdquo;)</strong>.&nbsp;</p><p><strong>Note:</strong> The digits of the ticket are unique.</p>",
  "explainInput": "<p>The first line of input contains single integer <strong>T</strong> denoting the number of test cases.<br />Each line of the test case consists  ticket no <strong>X</strong>.</p>",
  "explainOutput": "<p>Print <strong>&ldquo;YES&rdquo;</strong> or <strong>&ldquo;NO&rdquo; </strong>depending upon the eligibility of the ticket.</p>",
  "constraints": "<p><strong>1 &lt;= T &lt;= 100</strong></p><p><strong>10 &lt;= X &lt;= 10^6</strong></p>",
  "example": "<p><strong>Input:</strong></p><p>2</p><p>234</p><p>14</p><p><strong>Output:</strong></p><p>NO</p><p>NO</p>",
  "explanation": "<p><strong>TestCase1:&nbsp;</strong></p><p><strong>X= 234</strong></p><p>Different combinations of X are 234,243,324,342,423,432.</p><p>Sum of all these combinations is equal to 1998.</p><p>Now, as 1998 is not divisible by 7 we cannot avail the discount.</p><p><strong>TestCase2:&nbsp;</strong></p><p><strong>X= 14</strong></p><p>Different combinations of X are 14 and 41.</p><p>Sum of all these combinations is equal to 55.</p><p>Now, as 55 is not divisible by 7 we cannot avail the discount.</p>",
  "contestCode": "GSL02",
  "createdAt": {
    "$date": {
      "$numberLong": "1644049489319"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1644064605657"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61fe5beeaa33750024aa515b"
  },
  "tags": [
    "bit manipulation"
  ],
  "code": "GSL22B",
  "points": 150,
  "name": "Hide n Seek",
  "description": "Some numbers are playing hide and seek. A number n is caught if the set bit count of its 2’s complement is the same as the count of set bits of the original number.\r\n<strong>NOTE:</strong> The numbers are always represented in bits of even length \r\nExample. 5 is (0101) in binary ",
  "explainInput": "The first line contains an integer <strong>T</strong> denoting the number of test cases.\r\nThe next T lines contain single integer <strong>N</strong>.",
  "explainOutput": "For each test case,\r\nIf the number is caught, print:<strong> CAUGHT</strong>\r\nElse print: <strong>NOT CAUGHT</strong>",
  "constraints": "1<=T<=1000\r\n1<=N<=10<sup>5</sup>",
  "example": "<strong>Input:</strong>\r\n5\r\n1\r\n3\r\n5\r\n7\r\n10\r\n<strong>Output:</strong>\r\nNOT CAUGHT\r\nNOT CAUGHT\r\nNOT CAUGHT\r\nNOT CAUGHT\r\nCAUGHT",
  "explanation": "<strong>Test case 2: </strong>\r\n      \tHere, set bit count of 3 = 2\r\n      \t2s complement of 3 is 01\r\n      \tSet bit count of 1 = 1 which is not equal to set bit count of 3\r\n      \tHence, the number is NOT CAUGHT\r\n<strong>Test case 3:</strong>\r\n\tHere, set bit count of 5(0101) = 2\r\n      \t2s complement of  is 5(0101) is 11(1011)\r\n      \tSet bit count of 11 = 3 which is not equal to set bit count of 5\r\n      \tHence, the number is NOT CAUGHT\r\n<strong>Test case 5:</strong>\r\nHere, set bit count of 10 = 2\r\n      \t2s complement of 10 is 6\r\n      \tSet bit count of 6 = 2 which is equal to set bit count of 10\r\nHence, the number is CAUGHT",
  "contestCode": "GSL02",
  "createdAt": {
    "$date": {
      "$numberLong": "1644059630884"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1644060258031"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "61fe5e93aa33750024aa515c"
  },
  "tags": [
    "#adhoc"
  ],
  "code": "GSL22C",
  "points": 150,
  "name": "Boxes and Colours",
  "description": "You have <b>X</b> colourful balls and <b>Y</b> boxes. Initially, all boxes are empty, and each box can contain <b>only one ball</b>. Each ball has a price and a box number assigned to it. If you want to choose a ball, you must put it in its assigned box, and of course, that box can’t be used for any other balls. You need to choose some balls (with their boxes) such that the summation of their price is maximized.\r\n",
  "explainInput": "First-line contains the number of test cases <b>T</b>, the second line contains two integers <b>X</b> and <b>Y</b>, they are <b>number of colourful balls</b> and <b>number of boxes</b> respectively. \r\n\r\nEach of the next X lines will contain information about each ball <b>N<sub>i</sub></b> and <b>M<sub>i</sub></b>, where <b>N<sub>i</sub></b> is the price of <b>i<sup>th</sup></b> balls and <b>M<sub>i</sub></b> is the box number assigned to it.",
  "explainOutput": "Output a single integer on a new line denoting maximum summation of the price of colourful balls that you can choose by following the problem description.\r\n\r\n",
  "constraints": "1<=<b>T</b><=100\r\n1<=<b>X, Y</b><=100\r\n1<=<b>M<sub>i</sub></b><=Y\r\n1<=<b>N<sub>i</sub></b><=100\r\n",
  "example": "<b>Input:</b>\r\n2\r\n7 4\r\n2 1\r\n3 1\r\n3 2\r\n1 3\r\n4 4\r\n2 4\r\n5 4\r\n4 3\r\n3 1\r\n5 1\r\n6 2\r\n7 3\r\n\r\n<b>Output:</b>\r\n12\r\n18",
  "explanation": "For test case 1:\r\nno of balls = 7\r\nno of boxes = 4\r\n1st box has balls of price 2,3\r\n2nd box has ball of price 3\r\n3rd box has ball of price 1\r\n4th box has balls of price 4,2,5\r\nTo maximise the price we will choose 3, 3, 1, 5 respectively\r\nHence total would be 12",
  "contestCode": "GSL02",
  "createdAt": {
    "$date": {
      "$numberLong": "1644060307799"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1644074333228"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6217ba5fa5433500245d867a"
  },
  "tags": [
    "adhov"
  ],
  "code": "FEB22C",
  "points": 200,
  "name": "Revaluation of IA1 scores",
  "description": "<p>As the college got started offline all the students had their IA1 exam in offline mode, exams got over and it was the time to announce the rank holders, after the evaluation Ranks were allotted according to the total score to the students. But the students were uncertain about the score and ranks, they doubted that there was some mistake in the valuation so they wanted a revaluation of the papers and surprisingly all the students got more marks than before. Now the faculties have to find out who has secured the highest scores after revaluation and also have to find out the hops in the student&rsquo;s rank i.e.<strong> earlier rank &ndash; rank after revaluation.</strong></p>\r\n\r\n<b>Note:</b>\r\nIn case of the same score, List order would be considered for rank.",
  "explainInput": "<p>The first line of input contains single integer&nbsp;<strong>T</strong>&nbsp;denoting the number of test cases.</p>\r\n<p>Each test case contains 3 lines <strong>N, S, R </strong>denoting Name, scores, extra scores secured after revaluation respectively</p>",
  "explainOutput": "<p>Display student&rsquo;s name with highest score and hops in the student&rsquo;s rank</p>",
  "constraints": "<p>1 &lt;= T &lt;= 1000</p>\r\n<p>0&lt;= S &lt;=100</p>\r\n<p>0&lt;= R &lt;=100</p>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>2</p>\r\n<p>Hari Hara Sudhan Thevar</p>\r\n<p>86 1 72 18</p>\r\n<p>79 45 4 57</p>\r\n<p>Hari Hara Sudhan Thevar</p>\r\n<p>63 45 42 54</p>\r\n<p>11 31 61 83</p>\r\n<p><strong>Output:</strong></p>\r\n<p>Hari 0</p>\r\n<p>Thevar 1</p>",
  "explanation": "<p>TestCase1: On evaluating Hari has scored 165, Hara has scored 46, Sudhan has scored 76 and Thevar has 75. So it&rsquo;s clear that Hari has the highest score. As the faculties also have to find the rank hops. They first evaluated the ranks of previous scores in that Hari had the highest score so he had the 1st rank. After Revaluation Hari still secured the highest extra score so he had the 1st rank since there is no difference in the rank thus we print Hari 0 as output. Where, the first half is the name of the student with the highest score and the second half is the rank hops in his scores in actually scores and updated marks.</p>\r\n<p>TestCase2: On evaluating Hari has scored 74, Hara has scored 76, Sudhan has scored 103 and Thevar has 137. So it&rsquo;s clear that Thevar has the highest score. As the faculties also has to find the rank hops. They first evaluated the ranks of previous scores in that Thevar had the second highest score so he had the 2nd rank. After revaluation Thevar secured the highest score so he had the 1st rank since we have to define the hops in the rank 2-1 = 1 thus we print Thevar 1 as output. Where, the first half is the name of the student with highest score and the second half is the rank hops in his scores in actually scores and updated marks.</p>",
  "contestCode": "OFFFEB",
  "createdAt": {
    "$date": {
      "$numberLong": "1645722207845"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1645903761092"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6217c009a5433500245d867b"
  },
  "tags": [
    "<p>greedy",
    " algorithms</p>"
  ],
  "code": "FEB22B",
  "points": 150,
  "name": "Offline Meet",
  "description": "<p>Offline lectures started and there&rsquo;s an important meeting to be held by the Student Council and there are exactly&nbsp;<strong>n</strong>&nbsp;students invited. At any moment, any two students can step back and talk in private. The same two students can talk several (as many as they want) times per meeting.</p><p>Each student has limited&nbsp;<em>sociability</em>. The sociability of the&nbsp;<strong><em>i</em></strong><em>-</em>th student is a non-negative integer&nbsp;<strong>a</strong><strong><sub>i</sub></strong>. This means that after exactly&nbsp;ai&nbsp;talks this student leaves the meeting (and does not talk to anyone else anymore). If&nbsp;<strong>a</strong><strong><sub>i</sub></strong><strong>=</strong><strong>0</strong>, the&nbsp;<strong><em>i</em></strong><strong><em>-</em></strong>th student leaves the meeting immediately after it starts.A meeting is considered most&nbsp;<em>efficient</em>&nbsp;if the maximum possible number of talks took place during it. You are given an array of sociability&nbsp;<strong>a</strong>, determine which students should talk to each other so that the total number of talks is as large as possible.</p>",
  "explainInput": "<p>The first line contains an integer&nbsp;<strong>t</strong>&nbsp;&mdash; the number of test cases.</p><p>The next&nbsp;<strong>2</strong><strong>t</strong>&nbsp;lines contain descriptions of the test cases.</p><p>The first line of each test case description contains an integer&mdash;the number of students in the meeting. The second line consists of&nbsp;<strong>n</strong>&nbsp;space-separated integers&nbsp;<strong>a</strong><strong>1</strong><strong>, </strong><strong>a</strong><strong>2,</strong><strong>&hellip; ,</strong><strong>a</strong><strong>n</strong>&nbsp;&mdash; the sociability parameters of all students.</p>",
  "explainOutput": "<p>On the first line of each answer print the number&nbsp;<strong><em>k</em></strong>&nbsp;&mdash; the maximum number of talks possible in a meeting.</p><p>On each of the next&nbsp;<strong><em>k</em></strong>&nbsp;lines print two integers&nbsp;<strong><em>i</em></strong>&nbsp;and&nbsp;<strong><em>j</em></strong>&nbsp;(<strong>1&le;i, j&le;n&nbsp;</strong>and<strong>i&ne;j</strong>)&nbsp;&mdash; the numbers of students who will have another talk</p>",
  "constraints": "<p> 1&le; t &le; 250</p><p>2 &le; n &le; 52</p><p>0 &le; ai &le; 72 </p>",
  "example": "<p><strong>Input:</strong><br />4<br />2<br />2 3<br />3<br />1 2 3<br />3<br />0 0 2<br />4<br />1 2 3 4</p>\r\n<p><strong>Output:</strong><br />2<br />2 1<br />2 1<br />3<br />3 2<br />3 2<br />3 1<br />0<br />5<br />4 3<br />4 3<br />4 2<br />4 3<br />2 1</p>",
  "explanation": "<p><strong>Test case 1:</strong> Here student 2 talks with student 1 at max of 2 times. After the first talk the sociability limit decreases to [2,1] after another talk the sociability limit is [1,0] giving the maximum number of talks as 2 possible in the meeting.</p>\r\n<p><strong>Test case 4:</strong> Here student 4 talks to student 3 two times, followed by student 2 and then with student 3 again. After this the sociability limit of student 4 decreases to 0. Finally, student 2 talks with student 1 giving the max number of talks as 5 possible in the meeting.</p>",
  "contestCode": "OFFFEB",
  "createdAt": {
    "$date": {
      "$numberLong": "1645723657578"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1645887384016"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6219d5e842c3a8002490d63b"
  },
  "tags": [
    "math"
  ],
  "code": "FEB22A",
  "points": 100,
  "name": "Ideal Student Pairs",
  "description": "<p>The Mathematics teacher is an idealist; she wants her students to be seated in a particular way. She wants students in her class to sit in pairs in front only if that pair of student's roll nos. are ideal.</p>\r\n<p>A pair is ideal only if both the XOR and the sum of the pair are divisible by 3.</p>\r\n<p>(0&lt;i&lt;j&lt;N) where N is the number of students<strong>.</strong></p>",
  "explainInput": "<p>The first line of input consists of a single integer <strong>T</strong> denoting the number of test cases.</p>\r\n<p>The first line of each test case consists of a single number <strong>N </strong>denoting the number of students.</p>\r\n<p>The second line of each test case consists of <strong>N-space</strong> separated integers denoting the Roll no. of students.</p>",
  "explainOutput": "<p><strong>Print a single integer denoting how many such ideal pairs exist in each case</strong></p>",
  "constraints": "<p><sup>1&lt;=T&lt;=1000</sup></p>\r\n<p><sup>1&lt;=N&lt;50</sup></p>\r\n<p><sup>1&lt;=a[i]&lt;a[j]&lt;50</sup></p>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>3</p>\r\n<p>3</p>\r\n<p>18 3 47</p>\r\n<p>5</p>\r\n<p>39 33 42 17 20</p>\r\n<p>7</p>\r\n<p>25 38 1 47 28 32 40</p>\r\n<p><strong>Output:</strong></p>\r\n<p>0</p>\r\n<p>1</p>\r\n<p>7</p>",
  "explanation": "<p><strong>Test Case 1: </strong></p>\r\n<p><strong>Since there are no such pairs in this case.</strong></p>\r\n<p><strong>Test Case 2: </strong></p>\r\n<p><strong>Only 39 and 33 is an ideal pair since both 39^33=6 and 39+33=72 are divisible by 3.</strong></p>\r\n<p><strong>Test Case 3: </strong></p>\r\n<p><strong>25 and 38 is an ideal pair since XOR(63) and summation(63) are divisible by 3.</strong></p>\r\n<p><strong>25 and 47 is another such ideal pair. </strong></p>",
  "contestCode": "OFFFEB",
  "createdAt": {
    "$date": {
      "$numberLong": "1645860328422"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1645879402206"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "621a24954323e500241da25d"
  },
  "tags": [
    "maths"
  ],
  "code": "FEB22D",
  "points": 250,
  "name": " Raghav and the water container",
  "description": "Mr. Raghav who looks after college necessities is in the hardware store. Since he is aware that college is now reopening he wants a container which will hold water since the earlier one is unfit for this purpose .The hardware shop owner gave him the points. Raghav is not good at math so help him which will lead him to choose  a container which will have max area.\r\nThe shop owner has given an height of length n . Given n non-negative integers where each represents a point at coordinate(x,ax) . ‘n‘  vertical lines are drawn such that the two endpoints of line i is at (x, ai) and (x,0) where the two lines which will be created forms a container which will have a shape that is not.",
  "explainInput": "The first line of the input consists of a single integer t, denoting the number of test cases\r\nThe first line of each test case consists of size of array n \r\nThe second line of each test case consists of n space -separated integers.",
  "explainOutput": "For each test case, output the answer (area of water container) in a single line.\r\n",
  "constraints": "1 <= t <= 1000\r\nn == height.length\r\n2 <= n <= 500\r\n0 <= height[x] <=1000\r\n",
  "example": "Input\r\n2\r\n4\r\n1 5 4 3\r\n5\r\n3 1 2 4 5\r\nOutput\r\n6\r\n12",
  "explanation": "In first test case :\r\n5 and 3 are distance  apart. \r\nSo the size of the base = 2. \r\nHeight of container = min(5, 3) = 3. \r\nSo total area = 3 * 2 = 6\r\n\r\nIn second test case:\r\n5 and 3 are distance 4 apart. \r\nSo the size of the base = 4. \r\nHeight of container = min(5, 3) = 3. \r\nSo total area = 4 * 3 = 12",
  "contestCode": "OFFFEB",
  "createdAt": {
    "$date": {
      "$numberLong": "1645880469593"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1645885009109"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "621a6137bdcbbe0024af9ab5"
  },
  "tags": [
    "strings"
  ],
  "code": "FEB22E",
  "points": 100,
  "name": "The Secret Agent",
  "description": "<p>After reopening of SIES GST College in Offline mode, Amit went to register his device to get the Passphrase of the College&rsquo;s Wi-Fi. After registering his device, he gets the Wi-Fi password in an encrypted text and his friend wants the passphrase too. The passphrase being used flips the passphrase backward and inserts non-alphabetic characters in the password to make it harder to decipher.&nbsp;</p>\r\n<p>Can you help Amit to decode this Passphrase like a Secret Agent?</p>",
  "explainInput": "<p>The first line of input contains a single integer&nbsp;<strong>T</strong>&nbsp;denoting the number of test cases.</p>\r\n<p>First line of each test case contains a String S .</p>",
  "explainOutput": "<p>Display the Decrypted passphrase to Amit&rsquo;s friend.</p>",
  "constraints": "<p>1&lt;= T &lt;= 200</p>\r\n<p>Max. Length of String 50.</p>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>1</p>\r\n<p>d89%l++5r19o7W *o=l645le9H</p>\r\n<p><strong>Output:</strong></p>\r\n<p>Hello World</p>",
  "explanation": "<p>If you remove everything that isn't a letter or space from the original message and flip it around, you get 'Hello World', which is the passphrase.</p>",
  "contestCode": "OFFFEB",
  "createdAt": {
    "$date": {
      "$numberLong": "1645895991589"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1645895991589"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62550242ff3fbf0024dfddd7"
  },
  "tags": [
    "turing"
  ],
  "code": "TC2022B",
  "points": 100,
  "name": "Ghost of Kyiv",
  "description": "Dmitri is flying a fighter jet. He sees N number of enemy tanks moving in a straight line. He has a single missile left that can destroy K consecutive tanks in a single line .He has orders to destroy K tanks and also give maximum damage to the the enemies with the single missile that he is left with.  The worth of each tank is given in order in which they are moving. Find the max damage he will give to the enemies by destroying the tanks  .",
  "explainInput": "First line of input is the number of testcases .\r\nNext 2T lines will be the input for each testcase\r\nFirst line of each testcase will include number of tanks and tanks the missile can destroy(K)\r\nSecond line of each testcase will include worth of the N tanks(N0, N1, N2 ....Ni). ",
  "explainOutput": "Output the maximum damage given to the enemy",
  "constraints": "1 <= <strong>T</strong> <= 1000\r\n1 <= <strong>N</strong> <= 1000\r\n1 <= <strong>K</strong> <= N\r\n1 <= <strong>Ni</strong> <= 10^9",
  "example": "Input:\r\n2\r\n7 4\r\n4 7 3 8 5 3 2\r\n8 3\r\n100 100 0 100 0 98 98 98\r\nOutput:\r\n23\r\n294",
  "explanation": "Maximum damage given to the enemy is 23 by destroying 4 tanks of value 7,3,8,5.\r\n",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649738306295"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649856082254"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6255468d5be5d3002424a735"
  },
  "tags": [
    "greedy"
  ],
  "code": "TC2022F",
  "points": 300,
  "name": "Carving Strange Figure",
  "description": "Alex is a carpenter and is facing a problem. You are his friend and he needs your help. The problem Alex facing is that a customer gave him a strange figure of wooden which is made by attaching different radius cylinders or disks with 1 unit height like the one shown in the figure, the main task given to Alex is to make a cylinder with maximum volume out of the strange figure by carving and cutting it.\r\n<img src=\"https://i.imgur.com/fovE01M.png\" height=\"300\" width=\"500\"/>",
  "explainInput": "The first line of the input consists of a single integer t, denoting the number of test cases\r\nThe first line of each test case consists of size of array n\r\nThe second line of each test case consists of n space -separated integers which are radius of the circular disks out of which the strange figure is made.\r\n",
  "explainOutput": "For each test case, output the Radius of the maximum cylinder.\r\n",
  "constraints": "1 <= t <= 1000\r\n1 <= n <= 10000\r\n1 <= a[i] <=1000\r\n\r\n",
  "example": "Input : \r\n2\r\n7\r\n2 3 4 7 5 6 8\r\n5\r\n2 2 2 2 1\r\n\r\nOutput : \r\n5\r\n2\r\n\r\n",
  "explanation": "For the example 2 3 4 7 5 6 8\r\nThe figure above in the description is the reference strange figure of it.\r\nThe maximum volume can be of radius 5 from the last circular disks of  \" 7 5 6 8 \" of the array / strange figure.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649755789364"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649851225309"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6255b691aa9acd0024d4166c"
  },
  "tags": [
    "string",
    "adhoc"
  ],
  "code": "TC2022C",
  "points": 200,
  "name": "Riddle-Problem",
  "description": "Calvin has always played riddles and given puzzles to Harris. This time Harris decides to do the same to Calvin. He has given a certain set of inputs and outputs.\r\nHelp Calvin decipher the logic and prove his smartness to his friends Harris.",
  "explainInput": "First line of input consists of  T as the number of test cases.\r\nNext T line of input consists of X,Y two strings separated by a space. \r\n",
  "explainOutput": "Single string output for each test case and NA if not following the logic. \r\n\r\n",
  "constraints": "1<=T<=1000\r\nAll string input and output alphabets are of lowercase\r\n",
  "example": "Input:\r\n3\r\nabcxyz  bopyz\r\nftjdnf    fzxtpd\r\nsk thlmhtgjyavflbzveyhzd  \r\n\r\nOutput:\r\nbyz\r\nftd\r\nNA",
  "explanation": "Hint: Output string is some sort of sequence. ",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649784465784"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649858969729"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6255c1a8c375f900249dbad8"
  },
  "tags": [
    "String"
  ],
  "code": "TC2022D",
  "points": 200,
  "name": "Encoded message",
  "description": "X a friend of Y sends an encrypted 2-word message to Y but those words are merged into one. The conditions to decrypt the received message is given to Y by X.\r\n\r\nThe conditions are\r\n1. Both words consists of <strong>equal letters</strong>\r\n2. Sum of length of both words is same as length of received message\r\n3. Both decrypted words should have <strong>minimum difference</strong> between their respective <strong>lexicographical scores</strong>\r\n4. The order of the occurrence of letters <strong>should be conserved</strong> in both decrypted words",
  "explainInput": "First line consist of <strong>T</strong> total number of Test Cases\r\nNext <strong>T</strong> consists of single string <strong>S</strong> of even length.",
  "explainOutput": "Output all pairs of strings which has minimum lexicographical score difference.",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n2 <= <strong>len(S)</strong> <= 16",
  "example": "Input:\r\n1\r\nlexicography\r\n\r\nOutput:\r\nleicoh xgrapy\r\nxgrapy leicoh",
  "explanation": "Lexicographical score of leicoh and xgrapy are 518 and 517 which gives minimum difference.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649787304441"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1650008394444"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "625659e3c375f900249dbb33"
  },
  "tags": [
    "graph"
  ],
  "code": "TC2022G",
  "points": 400,
  "name": "WW3 by EM",
  "description": "It’s world war 3, and Slim has a country to destroy. He wants to drop bombs but he keeps on forgetting the cities he is allowed to bomb.\r\n\r\nA city <strong>Ai</strong> is allowed to be bombed if and only if all the cities are reachable by the ground troops after the city <strong>Ai</strong> is destroyed.\r\n\r\nSlim is busy standing up,  help him find all the possible cities he is allowed to bomb.\r\nNote: Initially, all the cities are reachable from any other city.",
  "explainInput": "- First-line consists of a single integer <strong>T</strong> denoting the number of test cases.\r\n- Next line consists of <strong>N</strong> and <strong>V</strong> denoting the number of lines to follow and the number of atmost vertices in the graph respectively.\r\n- Next <strong>N</strong> lines consist of two spaced integers denoting an edge between the two cities.",
  "explainOutput": "Output the cities which are allowed to be bombed.",
  "constraints": "1 <= <strong>T</strong> <= 100\r\n1 <= <strong>N, V</strong> <= 100",
  "example": "Input: \r\n1\r\n7 6\r\n0 1\r\n1 2\r\n1 3\r\n2 3\r\n3 4 \r\n3 5\r\n4 5\r\n\r\nOutput:\r\n0 2 4 5",
  "explanation": "Graph:\r\n<img src=\"https://res.cloudinary.com/siesgstarena/image/upload/v1649825533/arena/tc2022/Screenshot_from_2022-04-13_10-21-58.png\">\r\nIf we bomb city 3, the state of the graph becomes\r\n<img src=\"https://res.cloudinary.com/siesgstarena/image/upload/v1649825561/arena/tc2022/Screenshot_from_2022-04-13_10-22-26.png\">\r\nIf we bomb city 1, the state of the graph becomes\r\n<img src=\"https://res.cloudinary.com/siesgstarena/image/upload/v1649825581/arena/tc2022/Screenshot_from_2022-04-13_10-22-44.png\">\r\nSo, Slim can only bomb 0, 2, 4, 5 cities.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649826275101"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1650027041039"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6256b3db9f86540024c5653f"
  },
  "tags": [
    "turingcup"
  ],
  "code": "TC2022E",
  "points": 300,
  "name": "Mex Min Sum",
  "description": "You have been given an array <b>A</b>\r\n\r\nYou have to construct an array of missing elements from 0-n where <b>n</b> is the max of the array and you have to remove exactly <b>G</b> elements of your choice from this array\r\n\r\nNow you have to perform the following operation on the resulting combinations of the array:\r\n\r\nChoose two different integers i,j (1 ≤ i < j ≤ len(array)), replace <b>a<sub>i</sub></b> with <b>x</b> and <b>a<sub>j</sub></b>  with <b>y</b>. In order not to break the array, <b><b>a<sub>i</sub></b>|<b>a<sub>j</sub></b> = x|y</b> must be held, where <b>|</b> denotes the <b>bitwise OR operation</b>. Notice that x and y are non-negative integers.\r\nStore the minimum sum of the array you can get after using the operation above any number of times and output the <b>most minimum sum</b> you got\r\n",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case contains two space-separated integers <b>N, G</b>\r\nThe second line contains <b>N</b> space-separated integers.\r\n",
  "explainOutput": "For each test case, print one number in a line the minimum sum obtained",
  "constraints": "1 <= <b>T</b> <= 1000\r\n1 <= <b>N, G</b> <= 1000\r\n1 <= <b>A<sub>i</sub></b> <= 2000",
  "example": "<b>Input:</b>\r\n2\r\n5 2\r\n0 2 5 6 9\r\n4 2\r\n0 5 8 4\r\n\r\n<b>Output:</b>\r\n7\r\n3",
  "explanation": "<b>For example 2</b>\r\nMissing elements in array [0, 5, 8 ,4] from 0-8 = 1 2 3 6 7\r\n\r\nAll possible combinations after removing G i.e. 2 elements\r\n1 2 3 \r\n1 2 6 \r\n1 2 7 \r\n1 3 6 \r\n1 3 7 \r\n1 6 7 \r\n2 3 6 \r\n2 3 7 \r\n2 6 7 \r\n3 6 7 \r\n\r\nFor first combination [1 2 3] we can perform the operations and make it [1 0 2] this way:\r\n<ol> <li> Choose i=1, j=3, change a1=1 and a3=2, it&apos;s valid since 1|3=1|2. The array becomes [1,2,2]. </li>\r\n    <li> Choose i=2, j=3, change a2=0 and a3=2, it&apos;s valid since 2|2=0|2. The array becomes [1,0,2].\r\n    </li>\r\nHence we can prove that the minimum sum is 1+0+2=3\r\n</ol>\r\nSimilarly for [1 2 6] we can make it &nbsp;[0 3 4]\r\n<ol>\r\n    <li> Choose i=1, &nbsp;j=2 change a1=2 &amp; a2=3, it&apos;s valid since 1|2=2|3\r\narray becomes [2,3,6]\r\n    </li>\r\n    <li> Choose i=1, j=3 change a1=2 &amp; a3=4, it&apos;s valid since 2|6 = 2|4&nbsp;\r\narray becomes [2,3,4]\r\n    </li>\r\n    <li> Choose i=1, j=2 change a1=0 &amp; a2=3, it&apos;s valid since 2|3=0|3&nbsp;\r\narray becomes [0,3,4]\r\n    </li>\r\nHence we can prove minimum sum is 0+3+4 = 7\r\n</ol>\r\nAnd so on&hellip; for every combination\r\nComparing all minimum sum of these combinations 3 is the lowest so 3 is the answer.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649849307628"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649936895210"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6256b4669f86540024c56541"
  },
  "tags": [
    "array"
  ],
  "code": "TC2022A",
  "points": 100,
  "name": "Terrorist bunker",
  "description": "An anonymous source provided the army officer with information about a possible terrorist bunker. The officer devises a strategy to confirm this information.\r\nThe bunkers are arranged in ascending order, beginning with 1 and ending with n. Officer places bombs in bunkers in a specific order. He begins by destroying every second bunker, then every third bunker from the bunkers that remain after previous destruction, and so on. If the specified bunker is destroyed, it is confirmed that it was a terrorist bunker; otherwise, the information is false.\r\nHelp the army officer in determining whether the information was correct or not.\r\n",
  "explainInput": "First Line contains T denoting no. of testcases. \r\nFirst Line of each testcase consists of N and X denoting maximum bunker number and potential terrorist bunker respectively.",
  "explainOutput": "“YES” if it is a terrorist bunker otherwise “NO”.",
  "constraints": "1<=T<=1000\r\n2<=N<=10^4\r\n1<=X<=N",
  "example": "<b>Input:</b>\r\n2\r\n11 7\r\n11 9\r\n<b>Output:</b>\r\nNO\r\nYES\r\n",
  "explanation": " Initial bunkers: 1 2 3 4 5 6 7 8 9 10 11\r\n Bunkers left after 1st destruction: 1 3 5 7 9 11\r\n Bunkers left after 2nd destruction: 1 3 7 9 \r\n Bunkers left after 3rd destruction: 1 3 7 \r\n\r\nTestcase 1: After maximum destruction, bunker 7 is undestroyed therefore it is not a terrorist bunker.\r\n\r\nTestcase 2: In 3rd destruction, bunker 9 gets destroyed. Therefore if was a terrorist bunker.\r\n",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649849446824"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649850930434"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6257c4a8fb139700243c5214"
  },
  "tags": [
    "trees"
  ],
  "code": "NOV21",
  "points": 400,
  "name": "Corporate Problems",
  "description": "<p>In a team of <strong>N</strong> people the project manager decides to distribute some tasks among his team members<strong> (N-1)</strong> down the hierarchy.</p><p>We pass <strong>Q </strong>queries consisting of employee id <strong>x </strong>and no of tasks <strong>w.</strong></p><p>However the distribution here is a little bit different,when a person receives <strong>a</strong> tasks he/she may be able to distribute them among <strong>k </strong>number of people.</p><ul><li>If <strong>k=0</strong> then, he/she have to complete all the <strong>a</strong> tasks</li><li>If <strong>k&gt;0</strong> and<strong> k</strong> is a divisor of <strong>a,</strong> then <strong>a/k</strong> tasks are distributed among<strong> k</strong> people.</li><li>If <strong>k&gt;0</strong> and<strong> k</strong> is not a divisor of <strong>a,</strong> then all <strong>a</strong> tasks are ignored and no tasks are passed onto anyone.</li></ul><p>Help the project manager by providing him with the no of tasks ignored in each query.</p>",
  "explainInput": "<ul><li>First line consists of a single integer <strong>N</strong>.</li><li>Next <strong>N</strong> line consists of two spaced integers <strong>v</strong> and<strong> u</strong> (employee id&rsquo;s)<strong>.</strong></li><li>Next line consists of a single integer <strong>Q.</strong></li><li>Next <strong>Q</strong> lines consists of two spaced integers <strong>v</strong> and <strong>W</strong></li></ul>",
  "explainOutput": "<ul><li>For each query, print a single integer-<strong> Number of tasks ignored</strong>.</li></ul>",
  "constraints": "<p>1&lt;=N,Q&lt;=105</p><p>1&lt;=u,v,x&lt;=N</p><p>10&lt;=W&lt;=106</p>",
  "example": "<p><strong>Input:</strong></p><p><span style=\"font-weight: 400;\">5</span></p><p><span style=\"font-weight: 400;\">1 2</span></p><p><span style=\"font-weight: 400;\">1 3</span></p><p><span style=\"font-weight: 400;\">2 4&nbsp;</span></p><p><span style=\"font-weight: 400;\">2 5</span></p><p><span style=\"font-weight: 400;\">2</span></p><p><span style=\"font-weight: 400;\">1 10</span></p><p><span style=\"font-weight: 400;\">1 20</span></p><p>&nbsp;</p><p><strong>Output:</strong></p><p><span style=\"font-weight: 400;\">5</span></p><p><span style=\"font-weight: 400;\">0</span></p>",
  "explanation": "<p><strong>Test Case 1:</strong></p><p><img src=\"https://i.imgur.com/nF4iZv9.png\" alt=\"Girl in a jacket\" width=\"700\" height=\"600\"></p><p>where t=10, as the 10/4=2.5 therefore we cannot distribute the tasks</p>",
  "contestCode": "NOV21",
  "createdAt": {
    "$date": {
      "$numberLong": "1649919144706"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649930296472"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6257f176fb139700243c58c8"
  },
  "tags": [
    "dfs, trees, sieve"
  ],
  "code": "TC2022I",
  "points": 400,
  "name": "Corporate Problems",
  "description": "<p>In a team of <strong>N</strong> people the project manager decides to distribute some tasks among his team members<strong> (N-1)</strong> down the hierarchy.</p><p>We pass <strong>Q </strong>queries consisting of employee id <strong>x </strong>and no of tasks <strong>w.</strong></p><p>However the distribution here is a little bit different,when a person receives <strong>a</strong> tasks he/she may be able to distribute them among <strong>k </strong>number of people.</p><ul><li>If <strong>k=0</strong> then, he/she have to complete all the <strong>a</strong> tasks</li><li>If <strong>k&gt;0</strong> and<strong> k</strong> is a divisor of <strong>a,</strong> then <strong>a/k</strong> tasks are distributed among<strong> k</strong> people.</li><li>If <strong>k&gt;0</strong> and<strong> k</strong> is not a divisor of <strong>a,</strong> then all <strong>a</strong> tasks are ignored and no tasks are passed onto anyone.</li></ul><p>Help the project manager by providing him with the no of tasks ignored in each query.</p>",
  "explainInput": "<ul><li>First line consists of a single integer <strong>N</strong>.</li><li>Next <strong>N-1</strong> line consists of two spaced integers <strong>v</strong> and<strong> u</strong> (employee id&rsquo;s)<strong>.</strong></li><li>Next line consists of a single integer <strong>Q.</strong></li><li>Next <strong>Q</strong> lines consists of two spaced integers <strong>v</strong> and <strong>W</strong></li></ul>",
  "explainOutput": "<ul><li>For each query, print a single integer-<strong> Number of tasks ignored</strong>.</li></ul>",
  "constraints": "<p>1&lt;=N,Q&lt;=105</p><p>1&lt;=u,v,x&lt;=N</p><p>10&lt;=W&lt;=106</p>",
  "example": "<p><strong>Input:</strong></p><p><span style=\"font-weight: 400;\">5</span></p><p><span style=\"font-weight: 400;\">1 2</span></p><p><span style=\"font-weight: 400;\">1 3</span></p><p><span style=\"font-weight: 400;\">2 4&nbsp;</span></p><p><span style=\"font-weight: 400;\">2 5</span></p><p><span style=\"font-weight: 400;\">2</span></p><p><span style=\"font-weight: 400;\">1 10</span></p><p><span style=\"font-weight: 400;\">1 20</span></p><p>&nbsp;</p><p><strong>Output:</strong></p><p><span style=\"font-weight: 400;\">5</span></p><p><span style=\"font-weight: 400;\">0</span></p>",
  "explanation": "<p><strong>Test Case 1:</strong></p><p><img src=\"https://i.imgur.com/nF4iZv9.png\" alt=\"Girl in a jacket\" width=\"700\" height=\"600\"></p><p>where t=10, as the 10/4=2.5 therefore we cannot distribute the tasks</p>",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649930614472"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649951642061"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6257f1d4fb139700243c58ca"
  },
  "tags": [
    "turingcup"
  ],
  "code": "TC2022H",
  "points": 200,
  "name": "The Perfect Gift",
  "description": "Azriel wants to give a necklace to the winner of Turing Cup as a gift. He has been given a readymade necklace of pearls with numbers on it arranged in a particular order (A1 to An). The numbered pearls are arranged at random. He wants a certain number of equal neighbouring pairs K to make a pretty necklace. He needs to check if the target is already met, if so output a “YES”, but if not then he can make only one replacement of any existing pearl with the repeating pearl to make the necklace have K number of neighbouring pairs equal. If it is possible to meet the target, output a “YES” else print a “NO”. \r\n\r\nNote: \r\n<ul> <li>Only the repeating number can be used for replacing</li> <li>There will only be one repeating number in every case</li><li>You must have exactly K no of pairs only</li></ul>\r\n\r\nHelp Azriel make the perfect gift for the winner.",
  "explainInput": "The first line of the input contains a single integer T denoting the number of test cases.\r\nThe first line of each test case contains two space-separated integers N, K\r\nThe second line contains N space-separated integers.",
  "explainOutput": "Print YES if the target can be achieved else print NO",
  "constraints": "1 <= T <= 1000\r\n1 <= N <= 10<sup>3</sup>\r\n1 <= K <= N\r\n1 <= A<sub>i</sub> <= 10<sup>6</sup>",
  "example": "<strong>Input:</strong>\r\n2\r\n7 3\r\n4 5 3 4 4 6 4\r\n6 2\r\n1 2 3 4 5 6\r\n\r\n<strong>Output:</strong>\r\nYES\r\nNO",
  "explanation": "In the first example, the necklace of pearls are numbered as 4 5 3 4 4 6 4 and the target is 3. In this, the number of neighbouring pearls that are equal are 2. You can replace the 5 with a 4 to get K = 3.\r\n\r\nIn the second example, no matter which number you replace, the target will never be met as only one replacement is permitted. Hence the output is NO.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1649930708709"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1649967065719"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62592ec26040770024b11f4b"
  },
  "tags": [
    "turingcup"
  ],
  "code": "TC2022J",
  "points": 200,
  "name": "DCG Game",
  "description": "A new game has been dropped\r\nThis is how the game works, you have been given <strong>2 </strong>integers <strong>A </strong>and <strong>B</strong>\r\n&nbsp;\r\nIn one move you can either\r\n<ul>\r\n<li>Decrease the value of <strong>A </strong>and<strong> B </strong>by <strong>1</strong></li>\r\n<li>Increase the value of<strong> A</strong> and <strong>B</strong> by<strong> 1</strong></li>\r\n</ul>These operations can be performed only if both a and b are greater than 0.\r\n&nbsp;\r\nSimilarly, your opponent has been given 2 integers <strong>X</strong> and <strong>Y.</strong>\r\n&nbsp;\r\nCalculate the <strong>highest value of gcd(a,b)</strong> which can be achieved in the <strong>minimum </strong>number of moves. You can perform an arbitrary (possibly zero) number of moves. If Zyou &lt; Zopponent you win, if Zyou &gt; Zopponent you lose and if Zyou=Zopponent then it is a tie, where <strong>Z = |gcd(a,b) - minimum no of moves|</strong>. |x| represents the absolute value of x.",
  "explainInput": "The first line of input consists of a single integer <strong>T</strong> denoting the number of test cases. \r\n&nbsp;\r\nNext <strong>T</strong> lines contain 4 space-separated integers <strong>A, B, X, Y </strong>for each test case.",
  "explainOutput": "For each test case, print &ldquo;<strong>Win</strong>&rdquo; or &ldquo;<strong>Lose</strong>&rdquo; or &ldquo;<strong>Tie</strong>&rdquo; on a new line based on the result.",
  "constraints": "<ul>\r\n<li>1&lt;=<strong>T</strong>&lt;=1000&nbsp;</li>\r\n<li>1&lt;=<strong>A, B, X, Y</strong>&lt;=10<sup>4</sup></li>\r\n<li><strong>A</strong> != <strong>B</strong></li>\r\n<li><strong>X</strong> !=&nbsp;<strong>Y</strong></li>\r\n</ul>",
  "example": "<strong>Input:</strong>\r\n3\r\n7 5 9 4\r\n10 2 6 8\r\n12 5 7 13\r\n\r\n<strong>Output:</strong>\r\nWin\r\nLose\r\nTie",
  "explanation": "<strong>Test Case 2:&nbsp;</strong>\r\nFor A=10 and B=2, we can decrease them to 8 0 in 2 moves. Now the gcd is 8 and the number of moves is 2. Therefore Z<sub>you</sub> = 8 - 2 = 6.&nbsp;\r\nFor X=6 and Y=8, max gcd would be 2 and min moves would be 0. Now Z<sub>opponent</sub>=2&nbsp;\r\nTherefore Z<sub>you</sub> &gt; Z<sub>opponent</sub> hence you lose.\r\n&nbsp;\r\n<strong>Test Case 3:&nbsp;</strong>\r\nFor A=12 and B=5, in 2 moves it will be 14 7. Now gcd is 7 and Z<sub>you</sub>=5.&nbsp;\r\nFor A=7 and B=13, in 1 move it will be 6 12. Now gcd is 6 and Z<sub>opponent</sub>=5.&nbsp;\r\nTherefore Z<sub>you</sub> = Z<sub>opponent</sub> hence it is a Tie.",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1650011842917"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1650013655894"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62d986ea361a970022e888e0"
  },
  "tags": [
    "#math #rains "
  ],
  "code": "JUL22A",
  "points": 200,
  "name": "Fibo on Rains",
  "description": "<p>Poonam is crazily obsessed with anything related to series. While strolling through a drizzling rain she imagines numbers coming down along with the raindrops. Now she wonders how many of these numbers belong to the Fibonacci series, Can you help her count?</p>",
  "explainInput": "<p>The first line of input consists of a single integer <strong>T </strong>denoting the number of test cases.</p>\r\n<p>The first line of each test case consists of an Integer <strong>N</strong> denoting the size of the array.</p>\r\n<p>The second line of each test case consists of <strong>N </strong>elements.</p>",
  "explainOutput": "<p>Print the number of numbers belonging to the Fibonacci series.</p>",
  "constraints": "<p>0 &lt; T &lt; 10<sup>3</sup></p>\r\n<p>0 &lt; N &lt; 10<sup>5</sup></p>\r\n<p>0 &lt; A<sub>i</sub> &lt; 10<sup>4</sup></p>",
  "example": "<p><strong>Input:</strong></p>\r\n<p>2</p>\r\n<p>5</p>\r\n<p>233 1 6 55 88</p>\r\n<p>9</p>\r\n<p>25 45 34 610 5 377 30 67 21</p>\r\n<p><strong>Output:</strong></p>\r\n<p>3</p>\r\n<p>5</p>",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p>From the array 233, 1 and 55 are Fibonacci numbers.</p>\r\n<p><strong>Test Case 2:</strong></p>\r\n<p>34, 610, 5, 377 and 21 belong to the Fibonacci series.</p>",
  "contestCode": "JUL22",
  "createdAt": {
    "$date": {
      "$numberLong": "1658423018802"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1658568026659"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62d98871361a970022e888e1"
  },
  "tags": [
    "#math #rains"
  ],
  "code": "JUL22D",
  "points": 200,
  "name": "A Clumsy Decision",
  "description": "<p>Saahil has to go to college and even has an important lecture today but it is raining heavily. As he is very clumsy he even takes his decision clumsily depending on the result of a simple problem.</p>\r\n<p>Now the problem contains an integer <strong>N</strong> and he will go to college it it satisfies the condition :- &nbsp;(N-1) % (count of numbers from 1 to <strong>N - 1 </strong>&nbsp;that are coprime to N) is greater or equal than 3.</p>\r\n<p>If he will go to college, print \"YES\" else \"NO\"</p>\r\n<p>A number is said to be coprime to N if the GCD of that number with N is 1.</p>",
  "explainInput": "<p>The first line of input consists of a single integer <strong>T </strong>denoting the number of test cases.</p>\r\n<p>The first line of each test case consists of an Integer <strong>N</strong>.</p>",
  "explainOutput": "<p>Print YES if he goes to college else NO</p>",
  "constraints": "<p>0 &lt; T &lt; 10<sup>3</sup></p>\r\n<p>1 &lt;= N &lt; 10<sup>5</sup></p>",
  "example": "<p><strong>&nbsp;Input:</strong></p>\r\n<p>2</p>\r\n<p>17</p>\r\n<p>16</p>\r\n<p><strong>Output:</strong></p>\r\n<p>NO</p>\r\n<p>YES</p>",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p>16 % 16 = 0</p>\r\n<p>(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 and 16 are coprime to 17)</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Test Case 2:</strong></p>\r\n<p>15 % 8 = 7</p>\r\n<p>(1,3,5,7,9,11,13 and 15 are coprime to 16)</p>",
  "contestCode": "JUL22",
  "createdAt": {
    "$date": {
      "$numberLong": "1658423409334"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1658587354938"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62da96d263c43c00220909a0"
  },
  "tags": [
    "<p>#math</p>"
  ],
  "code": "JUL22C",
  "points": 100,
  "name": "Fix the Tiles",
  "description": "<p><span style=\"font-weight: 400;\">Due to heavy rain Ramu is facing leaking problem, The length of roof is L and breath is B. So he decided to cover his roof with square tiles . Tiles should not be cut while installation.</span></p>\r\n<p><span style=\"font-weight: 400;\">Help Ramu to find the minimum number of tiles required for roofing.</span></p>",
  "explainInput": "<p><span style=\"font-weight: 400;\">The first line of input consists of a single integer </span><strong>T </strong><span style=\"font-weight: 400;\">denoting the number of test cases.</span></p>\r\n<p><span style=\"font-weight: 400;\">The first line of each test case consists of a L and B.</span></p>",
  "explainOutput": "<p>Print the minimum number of tiles required</p>",
  "constraints": "<p><strong>1 &lt; T &lt; 100</strong></p>\r\n<p><strong>1 &lt; L , B &lt; 100</strong></p>",
  "example": "<p><span style=\"font-weight: 400;\">Input:</span></p>\r\n<p><span style=\"font-weight: 400;\">2</span></p>\r\n<p><span style=\"font-weight: 400;\">2 3</span></p>\r\n<p><span style=\"font-weight: 400;\">4 6</span></p>\r\n<p><span style=\"font-weight: 400;\">Output&nbsp;</span></p>\r\n<p><span style=\"font-weight: 400;\">6</span></p>\r\n<p><span style=\"font-weight: 400;\">6</span></p>",
  "explanation": "<p><strong>Test Case 1:</strong></p>\r\n<p><span style=\"font-weight: 400;\">Tile that&nbsp; Ramu selects for roofing is of side 1 so total tiles required is 6.</span></p>\r\n<p><strong>Test Case 2:</strong></p>\r\n<p><span style=\"font-weight: 400;\">Tiles that Ramu selects for roofing is of side 2 so total tiles required is 6.</span></p>",
  "contestCode": "JUL22",
  "createdAt": {
    "$date": {
      "$numberLong": "1658492626645"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1658587210569"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "62dab1b463c43c00220909af"
  },
  "tags": [
    "2d matrix"
  ],
  "code": "JUL22B",
  "points": 150,
  "name": "Rotation of Matrix",
  "description": "<p>2D matrix A is given to the chef. The task is to rotate each row to the left side                  by its row number in a cyclic way. And then rotate the same row to the right side by row number + 1 times in a cyclic way.</p>\r\n",
  "explainInput": "<p>The first line of input consists of a single integer T denoting the number of test cases.</p>\r\n<p>First line of each test case contains the single integer N which represents the order of the matrix.</p>\r\n<p>Next N lines will contain the elements of a matrix.</p>",
  "explainOutput": "<p>Output consists of N lines representing the rotated matrix.</p>",
  "constraints": "<p>1 &lt;= T &lt;= 51</p> \r\n<p>N is the order of matrix</p>\r\n <p>1 &lt;= N &lt;= 5</p>\r\n <p>1 &lt;= A[i][j] &lt;= 1000&nbsp;</p>",
  "example": "<p>Input</p><br>\r\n<p>1</p><br>\r\n<p>4</p>\r\n<p>10&nbsp; &nbsp;15&nbsp; &nbsp;4&nbsp; &nbsp; 9 <br>\r\n12&nbsp; &nbsp;45&nbsp; &nbsp;67&nbsp; 22 <br>\r\n49&nbsp; &nbsp;47&nbsp; &nbsp;13&nbsp; 10 <br>\r\n7&nbsp; &nbsp; 34&nbsp; &nbsp; 78&nbsp; 92</p>\r\n<p>Output</p>\r\n<p>9&nbsp; &nbsp; &nbsp;10&nbsp; &nbsp;15&nbsp; &nbsp; &nbsp;4 <br>\r\n22&nbsp; &nbsp;12&nbsp; &nbsp;45&nbsp; &nbsp; &nbsp;67 <br>\r\n10&nbsp; &nbsp;49&nbsp; &nbsp;47&nbsp; &nbsp; &nbsp;13 <br>\r\n92&nbsp; &nbsp; 7&nbsp; &nbsp; 34&nbsp; &nbsp; &nbsp;78</p>",
  "explanation": "<p>If the 0th row is rotated to the left side then it becomes 15 4 9 10.\r\nAnd if the same row is rotated to the right side 1 time then it becomes 9 10 15 4.\r\nSimilarly rotate all the rows.</p>",
  "contestCode": "JUL22",
  "createdAt": {
    "$date": {
      "$numberLong": "1658499508511"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1658593716946"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6301b5768296fc0022ebb48a"
  },
  "tags": [
    "#maths"
  ],
  "code": "CDEVA",
  "points": 200,
  "name": "Yuri Sold Us",
  "description": "<p><span style=\"font-weight: 400;\">Joyce Wanted to save  Jim so he gave some money to Yuri who was the pilot as well as a criminal. Yuri accepted his deals and acted as he wanted to save Jim. But then he fools them and tells the Russian army about their plan to get money from the Russian army as well.\r\nNow there are two planes which was supposed to reach the Russian army and Yuri was flying the second plane ,in order to keep this secret the second plane must depart after the first one (in between there are many airport)\r\nSo you’re given an array T time consisting of t1,t2….tn, the time taken to plane reach the airport.\r\nYou need to find the total amount needed for Yuri to reach the Russian army which will be counted as\r\n<ol>\r\n<li>If there is no collision then the factor of one will be added</li>\r\n<li>If there is collision then the factor of two will be added</li>\r\n</ol>\r\nAnd the total amount is going to be the product of sum of factor and the total number of airports and amount 15\r\n</span></p>",
  "explainInput": "<p><span style=\"font-weight: 400;\">\r\nT test cases<br>\r\nEach test cases will consist of two things<br>\r\nN the number of airports<br>\r\narray of length N-1 t1,t2 the time taken to reach the airport<br>\r\n</span></p>",
  "explainOutput": "<p><span style=\"font-weight: 400;\">Print the total amount of time required</span></p>",
  "constraints": "<p><span style=\"font-weight: 400;\">&nbsp;1 &lt; T &lt; 10^2</span></p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;&nbsp;2 &lt; N &lt; 10^5</span></p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;&nbsp;&nbsp;1 &lt; Ti &lt; 10^3</span></p>",
  "example": "<p><strong>Input:-&nbsp;</strong></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>\r\n<p><span style=\"font-weight: 400;\">3&nbsp;9</span></p>\r\n<p><span style=\"font-weight: 400;\">4</span></p>\r\n<p><span style=\"font-weight: 400;\">2&nbsp;5&nbsp;10</span></p>\r\n<p><span style=\"font-weight: 400;\">2</span></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>\r\n<p><strong>Output:-</strong></p>\r\n<p><span style=\"font-weight: 400;\">90</span></p>\r\n<p><span style=\"font-weight: 400;\">150</span></p>\r\n<p><span style=\"font-weight: 400;\">50</span></p>",
  "explanation": "<p><strong>C</strong><span style=\"font-weight: 400;\">ase1 : N = 3\r\nT = [3,9]\r\nFor Plane A1 the time will be [0,3,9]\r\nFor Plane A2 the time will be [0,6,18]\r\nFor Airport 1 there is no collision so fator of one will be added and for Airport 2 since there is collision factor of 2 is added so\r\nTotalFactor = 3\r\nStops = 3\r\nAmount = 15\r\nSo answer = (3+3)*15 = 90\r\n</span></p>\r\n<p><span style=\"font-weight: 400;\">Case2: N = 2\r\nT = [3]\r\nFor Plane A1 the time will be [0,3]\r\nFor Plane A2 the time will be [0,6]\r\nSince for Airport 1 there is no collision the factor of one will be added\r\nTotalFactor = 1\r\nStops = 2\r\nAmount = 15\r\nSo answer = (1+2)*15 = 45\r\n</span></p>\r\n",
  "contestCode": "CDEV",
  "createdAt": {
    "$date": {
      "$numberLong": "1661056374738"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1661071280574"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6301d0e28296fc0022ebb48e"
  },
  "tags": [
    "#math #pi"
  ],
  "code": "CDEVB",
  "points": 150,
  "name": "Prime or not ?",
  "description": "<p>Dustin built a device to talk to his girlfriend, which was later used by Hopper and Joyce when they had to open a vault, Murray revealed that the password was a prime decimal digit of  𝝿,  since  Hopper and Joyce didn't have any clue that whether decimal digits of  𝝿 contains a prime number or not so they contacted Mike, Lucas, Dustin, Max, and other kids to ask for the value of  𝝿, then Dustin remembered that his girlfriend could give the answer and hence he used that device to contact his girlfriend and get the value of  𝝿 but what he can't get is whether the nth decimal digit of  𝝿  is prime or not.\r\nHelp Dustin and his girlfriend to check whether the nth Decimal Digit of  𝝿 is Prime or Not and also help them to open the Vault.</p>",
  "explainInput": "<p>The first line contains the number of test cases <b>T</b>\r\nThe first line of each test case contains the nth digit <b>N</b>\r\n</p>",
  "explainOutput": "<p>Display ‘<b>Yes</b>’ for Prime and ‘<b>No</b>’ for Non-prime numbers.</p>",
  "constraints": "<p>1 <= T <= 10^3\r\n1 <= N <= 10^4\r\n</p>",
  "example": "<p><b>Input : </b>\r\n5\r\n52\r\n41\r\n82\r\n43\r\n62\r\n\r\n<b>Output :</b>\r\nNo\r\nNo\r\nNo\r\nYes\r\nNo\r\n</p>",
  "explanation": "<p>The First number is <b>52</b>, now the 52nd digit after the decimal point of 𝝿 is <b>8</b> which is not a prime number, therefore the output is <b>No</b>.\r\n\r\nThe First number is <b>41</b>, now the 41st digit after the decimal point of 𝝿 is <b>6</b> which is not a prime number, therefore the output is <b>No</b>.\r\n\r\nThe First number is <b>82</b>, now the 82nd digit after the decimal point of 𝝿 is <b>6</b> which is not a prime number, therefore the output is <b>No</b>.\r\n\r\nThe First number is <b>43</b>, now the 43rd digit after the decimal point of 𝝿 is <b>3</b> which is a prime number, therefore the output is <b>Yes</b>.\r\n\r\nThe First number is <b>62</b>, now the 62nd digit after the decimal point of 𝝿 is <b>9</b> which is not a prime number, therefore the output is <b>No</b>. </p>",
  "contestCode": "CDEV",
  "createdAt": {
    "$date": {
      "$numberLong": "1661063394275"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1661063612125"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6301dd458296fc0022ebb49d"
  },
  "tags": [
    "#math"
  ],
  "code": "CDEVC",
  "points": 200,
  "name": "Code Number to alternative dimension",
  "description": "Once Dr. Alexei and his assistant Kumaran were developing an experimental technology which could open gates to an alternative dimensions. At one point they had to solve a puzzle to get a unique code number to continue their experiment. This was the puzzle; there are N number of squares in a row. The amount of paint required to colour each square with Red, Green and blue is given as R, G and B respectively. Now they have to find a Minimum amount of paint to colour all squares such that no neighbouring squares having same colour. Later they added one more condition that is the first square should be always red. The addition of all the amounts of R, G and B is the Unique Code Number.\r\n",
  "explainInput": "The first line contains the number of test cases T\r\nThe first line of each test case contains the number of squares N\r\nThe second line of each test case contains the cost for red paint for each squares R\r\nThe third line of each test case contains the cost for green paint for each squares G\r\nThe fourth line of each test case contains the cost for blue paint for each squares B",
  "explainOutput": "Print the cost to paint all N squares with no neighboring squares having Same Colour.",
  "constraints": "1<=T<=1000\r\n2 <=N<=10^5\r\n0 <= R,G,B <=9\r\n",
  "example": "Input:\r\n2\r\n4\r\n6 5 3 5\r\n3 1 6 9 \r\n9 4 2 7\r\n3\r\n6 5 3 \r\n3 1 6 \r\n9 4 2\r\nOutput:\r\n14\r\n9\r\n",
  "explanation": "Test case 1:\r\nWe get the minimum cost of painting 4 squares when we paint the first square with the colour Red (6), the second square with the colour Green (1), the third square with the colour Blue (2) and the fourth square with the colour red (5) . So the total minimum cost to paint all squares is 14 (6+1+2+5).\r\n\r\nTest Case 2:\r\nWe get the minimum cost of painting 3 squares when we paint the first square with the colour Red (6), the second square with the colour Green (1), and the third square with the colour Blue (2). So the total minimum cost to paint all squares is 9 (6+1+2).\r\n",
  "contestCode": "CDEV",
  "createdAt": {
    "$date": {
      "$numberLong": "1661066565901"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1661067577958"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6301e8473a18140022ffed0d"
  },
  "tags": [
    "#maths"
  ],
  "code": "CDEVD",
  "points": 100,
  "name": "Find Member",
  "description": "<p><span style=\"font-weight: 400;\">Mike and his friends are trying to make the groups by lottery system. If the number is a power of two then that number will be the only member in a group,&nbsp;If the number is not in power of 2,then the number below it having power of 2 should have sum equal to given number. One member can be present in multiple groups.&nbsp;</span></p>\r\n<p><span style=\"font-weight: 400;\">Find the total number of members in a Group.</span></p>",
  "explainInput": "<p>The first line of input consists of a single integer&nbsp;<strong>T&nbsp;</strong>denoting the number of test cases.</p>\r\n<p><span style=\"font-weight: 400;\">Taking a random number as n.</span></p>",
  "explainOutput": "<p><span style=\"font-weight: 400;\">Total no of members in his group.</span></p>",
  "constraints": "<p><span style=\"font-weight: 400;\">&nbsp;1 &lt; T &lt; 10^3</span></p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;1 &lt; n &lt; 10^4</span></p>",
  "example": "<p><strong>Input:-&nbsp;</strong></p>\r\n<p><span style=\"font-weight: 400;\">2</span></p>\r\n<p><span style=\"font-weight: 400;\">2</span></p>\r\n<p><span style=\"font-weight: 400;\">5</span></p>\r\n<p><strong>Output:-</strong></p>\r\n<p><span style=\"font-weight: 400;\">1</span></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>",
  "explanation": "<p><strong>C</strong><span style=\"font-weight: 400;\">ase1 : The number 2 is a power of two then he is the only member in the group.</span></p>\r\n<p><span style=\"font-weight: 400;\">Case2: The number 5 is not a power of two then the members will be itself and 4 and 1.</span></p>",
  "contestCode": "CDEV",
  "createdAt": {
    "$date": {
      "$numberLong": "1661069383013"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1661090770734"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63308489ab6261002246d32b"
  },
  "tags": [
    "bitwise"
  ],
  "code": "B4E22QA",
  "points": 100,
  "name": "XOR MANIA",
  "description": "Help Sidessh to find the pair of integers such that their SUM and Bitwise XOR is equal to <b>N</b>.",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe only input after test case consists of an Integer <b>N</b>\r\n",
  "explainOutput": "Pair of integers whose sum and bitwise xor is equal to <b>N</b>.If there are more than one pair then return the pair which contains the minimal and maximal value in the pair amongst the founded pair.If no such pair exist then return     -1, -1",
  "constraints": "<b>1<=T<=1000</b>\r\n<b>1<=N<=10<sup>5</sup></b>",
  "example": "Input:\r\n2\r\n144\r\n180\r\n\r\nOutput:\r\n16 128 \r\n 4  176 \r\n",
  "explanation": "144\r\n16 128\r\n16+128=144       \r\n16^128=144\r\n\r\n128+16=144       \r\n128^16=144\r\n\r\n144+0=144          \r\n144^0=144 \r\nThe following no contains 3 pair but the minimum and maximum value in a pair is 16 and 128.So the pair will consist 16 128\r\n\r\n180\r\n4 176\r\nSame as above\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664124041220"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664127790209"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63308b35ab6261002246d32d"
  },
  "tags": [
    "#numbertheory\r\n#math\r\n#arithmetic"
  ],
  "code": "B4E22QH",
  "points": 150,
  "name": "Special Triplets",
  "description": "You've been given two integers (l, m). You have to find the third number, say 'n', such that (l + m + n) % 9 == 0\r\nThere may be multiple outputs , but find n such that it follows a specified pattern as the other two integers. ",
  "explainInput": "The first line contains a single integer <b>T</b> denoting the number of test cases.\r\nThe rest <b>T</b> lines would contain l and m separated with a space(each line would contain an l, m pair)",
  "explainOutput": "Print the third integer such that it follows the specified condition",
  "constraints": "1 <= l <= 10<sup>3</sup>\r\n1 <= m <= 10<sup>3</sup>\r\n1 <= n <= 10<sup>3</sup>",
  "example": "<b>Input:</b>\r\n2\r\n1 27\r\n125 343\r\n\r\n<b>Output:</b>\r\n8\r\n216",
  "explanation": "For the first test case, 1 + 27 + 8 = 36, and 36 % 9 = 0.\r\nFor the second test case, 125 + 343 + 216 = 648, and 648 % 9 = 0.",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664125749839"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664301084090"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63308dddab6261002246d332"
  },
  "tags": [
    "#adhoc"
  ],
  "code": "B4E22QG",
  "points": 150,
  "name": "Modified UNO CARD GAME",
  "description": "The card game has reached the last set of rounds.<b>A,B & C</b> have the same no of cards and same color.The players can withdraw cards in descending order only.If a player have <b>M</b> cards of same no then  he can withdraw all the  cards containing that no at one go.The playing order is <b>A-->B-->C</b>.The order doesn’t change.The player with 0 cards in hand is the winner.Determine the winner of this card game",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case consists of an Integer <b>N</b> denoting the no of cards.\r\nThe second line of each test case consists of <b>N</b> cards which belong to player A\r\nThe third line of each test case consists of <b>N</b> cards which belong to player B\r\nThe fourth line of each test case consists of <b>N</b> cards which belong to player C",
  "explainOutput": "Print the winner of this game",
  "constraints": "<b>1<=T<=400</b>\r\n<b>2<=N<=10</b>\r\n<b>1<=E<=10</b>{E is the set of cards}\r\n",
  "example": "<b>Input:</b>\r\n2\r\n3\r\n1 2 3\r\n1 4 9\r\n8 7 6\r\n5\r\n4 7 6 5 7\r\n4 5 8 9 9\r\n1 1 1 2 5\r\n\r\n<b>Output:</b>\r\nA\r\nC\r\n",
  "explanation": "<b>Test case:-1</b>\r\nIn round 1\r\nA withdraws 3    \r\nB withdraws 9\r\nC withdraws 8\r\n\r\nIn round 2\r\nA withdraws 2\r\nB withdraws 4 \r\nC withdraws 7\r\n\r\nIn round 3\r\nA withdraws 1 \r\n\r\nAs B&C have one card each & A withdraws all the cards A is the winner\r\n\r\n<b>Test case:-2</b>\r\nIn round 1\r\nA withdraws 7,7  \r\nB withdraws 9,9\r\nC withdraws 5\r\n\r\nIn round 2\r\nA withdraws 6\r\nB withdraws 8 \r\nC withdraws 2\r\n\r\nIn round 3\r\nA withdraws 5\r\nB withdraws 5\r\nC withdraws 1,1,1\r\n As A&B have one card each & C withdraws all the cards C is the winner\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664126429254"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664132404262"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "633091c9ab6261002246d333"
  },
  "tags": [
    "#array"
  ],
  "code": "B4E22QD",
  "points": 150,
  "name": "Sort the matrix",
  "description": "Sam is stuck in a dilemma where needs to solve a problem to get out of it. Now the problem is to sort a given <b>N</b> x <b>N</b> matrix by the sum of its elements in a specific row, but he is too panicked to solve it on his own.\r\nHelp Sam solve the problem and get him out of his dilemma.\r\n",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nFirst line of each test case contains the single integer <b>N</b> which represents the order of the matrix.\r\nNext <b>N</b> lines will contain the elements of a matrix.\r\n",
  "explainOutput": "Output consists of <b>N</b> lines representing sorted matrix.",
  "constraints": "<b>1<=T<=10<sup>3</sup></b>\r\n<b>2<=N<=9</b>\r\n<b>1<=A[i][j]<=10<sup>4</sup></b>",
  "example": "<b>Input:</b>\r\n1\r\n3\r\n7 8 9\r\n4 5 6\r\n1 2 3\r\n\r\n<b>Output:</b>\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n",
  "explanation": "The sum of the elements of 1st row of matrix is 7+8+9=24\r\nThe sum of the elements of 2nd row of matrix is 4+5+6=15\r\nThe sum of the elements of 3rd row of matrix is 1+2+3=6\r\nSo the rows of the matrix are sorted in ascending order of their sum.\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664127433237"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664214176705"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63309651ab6261002246d342"
  },
  "tags": [
    "maths"
  ],
  "code": "B4E22QB",
  "points": 100,
  "name": "Find Remainder",
  "description": "Help Rohan to find the remainder of the product of the two numbers with respect to third number.",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nEach test cases will consist of three values <b>A</b> , <b>B</b> and <b>C</b>.",
  "explainOutput": "Print the remainder <b>R</b>",
  "constraints": "<b>1 <  T  < 30</b>\r\n<b>0 < A , B < 10<sup>18</sup></b>\r\n<b>1 < C < 10</b>",
  "example": "<b>Input</b>\r\n2\r\n2 3 2\r\n3 5 2\r\n\r\n<b>Output</b>\r\n0\r\n1",
  "explanation": "In <b>First test case</b> we will first product the two number(2*3 =6) and the modular by the third number(6%2 =0).\r\nIn <b>Second test case</b> we will first product the two number(3*5 = 15) and the modular by the third number(15%2=1).",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664128593310"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664132590960"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63309926ab6261002246d343"
  },
  "tags": [
    "#maths"
  ],
  "code": "B4E22QJ",
  "points": 200,
  "name": "Expensive Collision",
  "description": "<p><span style=\"font-weight: 400;\">Salman is a very lazy guy who always wakes up so late. He has to reach the college but there are only two buses <b>B1</b> and <b>B2</b> which can take him to college (in between there are a couple of stops). But since he wakes so late he always takes the second bus <b>B2</b>. \r\nBut nowadays buses follow one system in which until and unless the bus <b>B1</b> reaches stop S(i+1) <b>B2</b> can't depart from Si.\r\n\r\nA collision would occur if <b>B2</b> has to wait for <b>B1</b>.\r\n\r\nSo you’re given an array <b>T</b> time consisting of t1,t2….tn the time taken to reach the stops from Si to S(i+1).\r\nYou need to find the total amount needed for Salman to reach the college which will be counted as \r\n<ol>\r\n<li>If there is no collision then the factor of <b>one</b> will be added</li>\r\n<li>If there is collision then the factor of <b>two</b> will be added</li>\r\n</ol>\r\nAnd the total amount is going to be the product factor and an amount equal to the maximum time.\r\n</span></p>",
  "explainInput": "<p><span style=\"font-weight: 400;\">\r\n<b>T</b> test cases<br>\r\nEach test cases will consist of two things<br>\r\n<b>N</b> the number of stops<br>\r\narray of length <b>N-1 t1,t2</b> the time taken to reach the station<br>\r\n</span></p>",
  "explainOutput": "<p><span style=\"font-weight: 400;\">Print the total amount of time taken for Salman to reach</span></p>",
  "constraints": "<p><span style=\"font-weight: 400;\">&nbsp;1 &lt; T &lt; 10<sup>2</sup></span></p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;&nbsp;2 &lt; N &lt; 10<sup>5</sup></span></p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;&nbsp;&nbsp;1 &lt; Ti &lt; 10<sup>3</sup></span></p>",
  "example": "<p><strong>Input:-&nbsp;</strong></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>\r\n<p><span style=\"font-weight: 400;\">4</span></p>\r\n<p><span style=\"font-weight: 400;\">8&nbsp;1&nbsp;9</span></p>\r\n<p><span style=\"font-weight: 400;\">2</span></p>\r\n<p><span style=\"font-weight: 400;\">4</span></p>\r\n<p><span style=\"font-weight: 400;\">3</span></p>\r\n<p><span style=\"font-weight: 400;\">6&nbsp;8</span></p>\r\n<p><strong>Output:-</strong></p>\r\n<p><span style=\"font-weight: 400;\">45</span></p>\r\n<p><span style=\"font-weight: 400;\">8</span></p>\r\n<p><span style=\"font-weight: 400;\">32</span></p>",
  "explanation": "<p><strong>C</strong><span style=\"font-weight: 400;\">ase1 : N = 4\r\nT = [8,1,9]\r\nFor B1 the time will be [0,8,9,18]\r\nFor B2 the time will be [0,16,17,27]\r\nFor stop 1 there is collision so factor of two will be added for stop 2 there is no collision so factor of one is added for stop 3 there is collision so factor of two is added\r\nTotalFactor = 5\r\nAmount = 9\r\nSo answer = 5 * 9 = 45\r\n</span></p>\r\n<p><span style=\"font-weight: 400;\">Case2: N = 2\r\nT = [4]\r\nFor B1 the time will be [0,4]\r\nFor B2 the time will be [0,8]\r\nSince for stop 1 there is collision the factor of two will be added\r\nTotalFactor = 2\r\nAmount = 4\r\nSo answer = 2*4 = 8\r\n</span></p>",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664129318047"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664340211488"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63309a73ab6261002246d344"
  },
  "tags": [
    "#math"
  ],
  "code": "B4E22QI",
  "points": 200,
  "name": "The Chosen Length",
  "description": "Nimith Is being chased by someone, now ahead of him is a bridge which he can cross and burn the bridge to save himself. But there’s a twist, each step of the bridge is associated with a number, and he can only burn the bridge at a length such that the product of numbers on the burned side and the product of numbers on the remaining side are coprime ",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe first line of each test case consists of an Integer <b>N</b> denoting the size of the array.\r\nThe second line of each test case consists of <b>N</b> space-separated elements.\r\n",
  "explainOutput": "Print the length of the array till where the bridge should be burned",
  "constraints": "0 < T < 10<sup>3</sup>\r\n0 < N < 2000\r\n0 < Ai < 10<sup>5</sup>\r\n",
  "example": "<b>Input:</b>\r\n2\r\n4\r\n7 5 13 2\r\n5\r\n4 5 6 8 7\r\n\r\n<b>Output:</b>\r\n1\r\n4\r\n",
  "explanation": "<b>Test Case 1:</b>\r\nFrom the array 7 and 130 (5*13*2) are coprime,\r\nHence length is 1\r\n\r\n<b>Test Case 2:</b>\r\n960 (4*5*6*8) and 7 are coprime,\r\nHence length is 4\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664129651546"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664132827258"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63309bcaab6261002246d347"
  },
  "tags": [
    "#math #numbertheory"
  ],
  "code": "B4E22QF",
  "points": 150,
  "name": "Oddity of the array",
  "description": "One day, John was observing The Fibonacci series and suddenly thought “What will be the oddity of the array.” Now Oddity of the array according to him is found as,\r\nGiven an array of first <b>N</b> Fibonacci numbers, generate a sequence <b>D</b> such that it contains the last decimal digits of <b>N </b> Fibonacci Numbers,\r\nD=(F0%10,F1%10,…,FN−1%10) and perform the following step,\r\nFrom the sequence <b>D</b>, remove all the odd indexed elements (where index of the array is to be assumed to start from 1)\r\nRepeat the above process till only one element remains, Find that element.\r\n",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe only input after test case consists of an Integer <b>N</b> denoting the number of Fibonacci numbers \r\n",
  "explainOutput": "Print the element which remains after removing all the odd indexed elements from the sequence D consisting of last decimal digits of <b>N </b> Fibonacci numbers",
  "constraints": "0 < T < 10<sup>3</sup>\r\n0 < N <= 10<sup>5</sup>\r\n",
  "example": "<b>Input:</b>\r\n2\r\n7\r\n16\r\n\r\n<b>Output:</b>\r\n2\r\n0\r\n",
  "explanation": "<b>Test Case 1:</b>\r\nThe first 7 Fibonacci Numbers are \r\nF = {0, 1, 1, 2, 3, 5, 8}\r\nD = {0, 1, 1, 2, 3, 5, 8}\r\nAfter removing odd indexed elements from D gives {1, 2, 5}\r\nAfter removing odd indexed elements from D gives {2}\r\nRemaining element is 2.\r\n\r\n<b>Test Case 2:</b>\r\nThe first 16 Fibonacci Numbers are \r\nF = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610}\r\nD = {0, 1, 1, 2, 3, 5, 8, 3, 1, 4, 5, 9, 4, 3, 7, 0}\r\nAfter removing odd indexed elements from D gives {1, 2, 5, 3, 4, 9, 3, 0}\r\nAfter removing odd indexed elements from D gives {2, 3, 9, 0}\r\nAfter removing odd indexed elements from D gives {3, 0}\r\nAfter removing odd indexed elements from D gives {0}\r\nRemaining element is 0.\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664129994425"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664132922739"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63309d795766d0002293b563"
  },
  "tags": [
    "#math"
  ],
  "code": "B4E22QE",
  "points": 150,
  "name": "The Odd Number out",
  "description": "Mary was observing some arrays and noticed that, in the array almost all the integers irrespective of their position, repeated twice but only one number didn’t follow the norm.\r\nHelp Mary find that number.\r\n",
  "explainInput": "The first line of input consists of a single integer <b>T</b> denoting the number of test cases.\r\nThe First line of each test case consists of an Integer <b>N</b> denoting the size of array\r\nThe second line of each test case consists of <b>N</b> space-separated integers.\r\n",
  "explainOutput": "Print the element which doesn’t stand with the others",
  "constraints": "0 < T < 10<sup>3</sup>\r\n0 < N <= 50\r\n0 < Ai <= 10<sup>5</sup>\r\n",
  "example": "<b>Input:</b>\r\n2\r\n5\r\n3 9 3 9 1\r\n5\r\n2 3 2 3 3\r\n\r\n<b>Output:</b>\r\n1\r\n3\r\n",
  "explanation": "<b>Test Case 1:</b>\r\nIn the first test case, the number 1 is only appears once while the others appear twice.\r\n\r\n<b>Test Case 2:</b>\r\nIn this case, the number 3 appears thrice while others appear twice\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664130425347"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664130425347"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6330dde45766d0002293b565"
  },
  "tags": [
    "#math"
  ],
  "code": "B4E22QC",
  "points": 100,
  "name": "Even Odd",
  "description": "Given an array of N integers which contains 0 and 1.Form a number from all the elements of an array. Set all the unset bits and unset all the set bits. Print whether the final number is even or odd.\r\n",
  "explainInput": "The first line of input consists of a single integer  <b>T</b> denoting the number of test cases.\r\nThe second line of input consists of a single integer <b> N </b> denoting the number of elements of an array.\r\nThe next line of input contains the <b>N</b> space separated integers.\r\n",
  "explainOutput": "The output consists of a single line containing a single string denoting whether the number is even or odd.\r\n",
  "constraints": "1<=T<=100\r\n1<=N<=10\r\n",
  "example": "<b>Input: </b>\r\n2\r\n5\r\n0 1 1 0 1\r\n4\r\n1 0 1 0\r\n<b>Output: </b>\r\nEven\r\nOdd\r\n",
  "explanation": "A = [0, 1, 1, 0, 1]\r\nThe number formed from this array is 01101.\r\nAfter setting all the unset bits and unsetting all the set bits we get 10010 which is an even number.\r\n",
  "contestCode": "B4E22Q",
  "createdAt": {
    "$date": {
      "$numberLong": "1664146916763"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664147217540"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6335f3dd125f8a00222e06eb"
  },
  "tags": [
    "array",
    " matrix"
  ],
  "code": "B4E22FA",
  "points": 200,
  "name": "Strategic Hopscotch",
  "description": "A group of friends came up with a new hopscotch game, where in a rectangular space - <b>Playspace</b>, certain blocks can be occupied <b>(X)</b>, or unoccupied <b>(O)</b>. Spots on the block are assigned randomly to the players. The game is made so that one of the players has to find the count of weak players in that random positioning. <br>\r\nA player is labeled weak when there is no occupied block in their respective row and column. <br>\r\nGiven a rectangular matrix with their status as occupied/ unoccupied, find the count of weak players in the positioning.",
  "explainInput": "First-line consists of a single integer <b>T</b> denoting the number of test cases.<br>\r\nNext <b>T</b> Lines:<br>\r\n- 2 integers <b>R</b> and <b>C</b> representing number of rows and columns.<br>\r\n- <b>Playspace Grid</b> of size <b>RxC</b>",
  "explainOutput": "The number of weak players. ",
  "constraints": "1 <= <b>T</b> <= 500\r\n1 <= <b>R, C</b> <= 10<sup>3</sup>\r\n<b>Playspace[i][j]</b> is <b>‘X’</b> or <b>‘O’</b>",
  "example": "<b>Input:</b>\r\n2\r\n3 3\r\nO O X\r\nX O O\r\nO X O\r\n4 6\r\nX O X O\r\nO O O X\r\nO X O O \r\nO O O O\r\nO X O O\r\nX O O O\r\n\r\n<b>Output:</b>\r\n3\r\n1",
  "explanation": "<b>For TC#1</b><br>\r\n<img src=\"https://i.imgur.com/SLVoEMy.png\" width=400 height=250>\r\n\r\nThe 3 occupied blocks are such placed that none of them have a buddy player with a common row or column, hence all 3 players on the space are weak ones.",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664480221110"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664511672231"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6335f8b9125f8a00222e06ec"
  },
  "tags": [
    "math"
  ],
  "code": "B4E22FB",
  "points": 300,
  "name": "Prosperous Number",
  "description": "Let's do some warmup finalists, you ready?<br>\r\nMy friend’s family is superstitious, they believe in a lucky number which will bring them prosperity this year. But his family is full of nerds. So of course they believe in math superstition.<br>\r\nHence to find out the lucky number of the year, he has been given 2 sets of religious numbers consisting 1 to N, and he has to perform some special rituals using them. The task is, for all “i”s:\r\n1. Find <b>(n/2 - i)th min</b> of first set\r\n2. Find <b>(n/2 - i)th max</b> of second set\r\n3. Find <b>difference</b> between them\r\nThe lucky number is said to be the <b>sum of all the obtained differences.</b>\r\nSum can be too large for some test cases, so return <b>sum mod 10<sup>9</sup> + 7.</b><br>\r\nActually I could have helped him easily but unfortunately I'm busy with my ongoing placements, so you guys have to help him because a friend of friend is also a friend right?",
  "explainInput": "First-line consists of a single integer <b>T</b> denoting the number of test cases.\r\nNext <b>T</b> lines: \r\n- Integer <b>N</b>\r\n- <b>First set</b> of religious numbers\r\n- <b>Second set</b> of religious numbers",
  "explainOutput": "Output the prosperous number obtained after performing the rituals mod 10<sup>9</sup>+7",
  "constraints": "1 <= T <= 500\r\n1 <= <b>N</b> <= 10<sup>18</sup>\r\n1 <= <b>Length(First Set), Length(Second Set)</b> <= 10<sup>9</sup>",
  "example": "<b>Input:</b>\r\n1\r\n10\r\n4 7 6 8 5\r\n9 3 2 10 1\r\n\r\n<b>Output:</b>\r\n25",
  "explanation": "<b>FOR TC#1</b>\r\n5th min of First set - 5th max of second set = 7\r\n4th min of First set - 4th max of second set = 5\r\n3rd min of First set - 3rd max of second set = 3\r\n2nd min of First set - 2nd max of second set = 4\r\n1st min of First set - 1st max of second set = 6\r\nSum of all differences = 7 + 5 + 3 + 4 + 6 = <b>25.</b>",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664481465173"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664481858647"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63361b9a125f8a00222e06ef"
  },
  "tags": [
    "multisource bfs",
    " array",
    " matrix "
  ],
  "code": "B4E22FC",
  "points": 250,
  "name": "Horde of Zombies",
  "description": "You are given an <b>m * n</b> city grid where each block can have one of three values:\r\n\r\n<b>0</b> representing an <b>empty</b> block which is abondanned ,\r\n<b>1</b> representing a block where <b>humans</b> are living, or\r\n<b>2</b> representing a <b>horde of zombies.</b>\r\n\r\nEvery minute, zombies attack their 4-diagonally adjacent city blocks and turn the normal humans to zombies.\r\n\r\nGiven the number of minutes, find out how many blocks of normal <b>human beings are left</b> in the city.",
  "explainInput": "<ul>\r\n<li>First-line consists of a single integer <strong>T </strong>denoting the number of test cases</li><li>Next <strong>T</strong> lines consists of :&nbsp;\r\n<ul>\r\n<li>An integer <strong>mint </strong>denoting the number of minutes</li><li>2 space separated integers - <strong>m and n</strong></li><li>Next <strong>m </strong>lines represent the matrix containing <strong>n </strong>space separated integers denoting the rows of the matrix.</li>\r\n</ul>\r\n</li>\r\n</ul>",
  "explainOutput": "Output a single integer denoting number of normal <b>human blocks</b> left in city",
  "constraints": "1 &le; <b>T</b> &le; 100\r\n2 &le; <b>m, n</b> &le; 50\r\n1 &le; <b>min</b> &le; 10",
  "example": "<b>Input:</b>\r\n2\r\n2\r\n3 3\r\n2 1 1\r\n1 1 0\r\n0 1 0\r\n1\r\n4 4\r\n2 0 0 1\r\n0 1 1 1 \r\n1 1 0 2\r\n2 0 1 1\r\n\r\n<b>Output:</b>\r\n3\r\n4\r\n",
  "explanation": "<img src=\"https://i.imgur.com/IvvR0Zy.png\" width=600 height=200>\r\n\r\nIn the first minute the zombie attacked the diagonally bottom right block and infected the humans there. Next the newly infected humans infect their diagonally top right block. After 2 minutes, 3 human city blocks are left by zombies which are safe therefore the answer is 3.",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664490394396"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664636024059"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "633620e3fe6e62002205e71e"
  },
  "tags": [
    "maths"
  ],
  "code": "B4E22FD",
  "points": 200,
  "name": "Flippin switches",
  "description": "Given a string <strong>S</strong> representing the state of L switches01011.\r\nHere,1 represents the switch is <strong>OFF</strong> and 0 represents <strong>ON</strong>.\r\nThe switches have a special condition:\r\nIf the switch state is changed from <strong>ON</strong> to <strong>OFF</strong>, The adjacent switch is also flipped, and so on.\r\n<br />Output the state of the switches after flipping the first switch <strong>N</strong> times.",
  "explainInput": "<ul>\r\n<li>First-line consists of a single integer <strong>T </strong>denoting the number of test cases.</li>\r\n<li>Next <strong>T</strong> lines:\r\n<ul>\r\n<li>String <strong>S </strong>represents the initial state of the switches.</li>\r\n<li>Integer <strong>N </strong>depicts the number of flips to be performed on the first switch.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n",
  "explainOutput": "Output the state of switches after performing N flips on the first switch",
  "constraints": "<p>1 &le; <strong>T </strong>&le; 500</p>\r\n<p>1 &le; <strong>Length(S)</strong> &le; 10^5</p>\r\n<p>1 &le; <strong>N </strong>&le; 10^5</p>",
  "example": "<b>Input:</b>\r\n2\r\n10011\r\n5\r\n10110\r\n13\r\n\r\n<b>Output:</b>\r\n00101\r\n00000\r\n",
  "explanation": "<b>FOR TC#1</b>\r\n<b>S</b> = 10011 and <b>N</b> = 5,\r\n00011\r\n11101\r\n01101\r\n10101\r\n00101\r\nHence, 00101 will be the state of the bulbs after the N flips the first switch.\r\n",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664491747551"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664515215946"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63369e2e6e5c8f00227aace3"
  },
  "tags": [
    "maths"
  ],
  "code": "B4E22AC",
  "points": 0,
  "name": "Witch’s Apprentice ",
  "description": "You are working at a witch’s lab, there is a test to pass which you need to pass to gain witch’s trust.\r\n\r\nThere are a bunch of potion bottles with labels on them. \r\nThose labels are modified to make it more challenging. Each specific potion has many different labels, but they all belong to same group. \r\n<b>efgh</b> belongs to same grp as <b>fghi and abcd.</b>\r\n\r\nThe witch asks to give her the labels of a group which are most in number. ",
  "explainInput": "First-line consists of a single integer <b>T</b> denoting the number of test cases.\r\nNext <b>T</b> lines: \r\n<b>N</b>, number of labels \r\n<b>N</b> strings of variable length.",
  "explainOutput": "Labels of the group with maximum size.\r\nNote: If there are more than one group with maximum number of labels, return all of them.",
  "constraints": "1 <= <b>T</b> <= 500\r\n1 <= <b>N</b> <= 10^3\r\n1<=<b> label.length</b> <=500",
  "example": "Input:\r\n2\r\n8\r\nabc bcd acef xyz az ba a z\r\n1\r\na\r\n\r\nOutput:\r\nabc bcd xyz \r\na",
  "explanation": "For TC#1\r\nThere can be a group formed of <b>abc, bcd, xyz</b>\r\nAs, they have similar shifting sequence.\r\n<b>abc → bcd → … → xyz</b>\r\nSo, the groups formed will be:\r\n[ a, z ]\r\n[ az, ba ]\r\n[ abc, bcd, xyz ]\r\n[ acef ]\r\n\r\nThe group abc, bcd, xyz as maximum length which is three. ",
  "contestCode": "TC2022",
  "createdAt": {
    "$date": {
      "$numberLong": "1664523822716"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664526474651"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6336ad26ee62f10022c977c2"
  },
  "tags": [
    "maths"
  ],
  "code": "B4E22AE",
  "points": 300,
  "name": "Witch’s Apprentice",
  "description": "You are working at a witch’s lab, there is a test to pass which you need to pass to gain witch’s trust.\r\n\r\nThere are a bunch of potion bottles with labels on them. \r\nThose labels are modified to make it more challenging. Each specific potion has many different labels, but they all belong to same group. \r\n<b>efgh</b> belongs to same grp as <b>fghi and abcd.</b>\r\n\r\nThe witch asks to give her the labels of a group which are most in number. ",
  "explainInput": "First-line consists of a single integer <b>T</b> denoting the number of test cases.\r\nNext <b>T</b> lines: \r\n<b>N</b>, number of labels \r\n<b>N</b> strings of variable length.",
  "explainOutput": "Labels of the group with maximum size.\r\nNote: If there are more than one group with maximum number of labels, return all of them.",
  "constraints": "1 <= <b>T</b> <= 500\r\n1 <= <b>N</b> <= 10^3\r\n1<=<b> label.length</b> <=500",
  "example": "<b>Input:</b>\r\n2\r\n8\r\nabc bcd acef xyz az ba a z\r\n1\r\na\r\n\r\n<b>Output:</b>\r\nabc bcd xyz \r\na",
  "explanation": "For TC#1\r\nThere can be a group formed of <b>abc, bcd, xyz</b>\r\nAs, they have similar shifting sequence.\r\n<b>abc → bcd → … → xyz</b>\r\nSo, the groups formed will be:\r\n[ a, z ]\r\n[ az, ba ]\r\n[ abc, bcd, xyz ]\r\n[ acef ]\r\n\r\nThe group abc, bcd, xyz as maximum length which is three. ",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664527654327"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664527654327"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6336b760ee62f10022c97c37"
  },
  "tags": [
    "maths"
  ],
  "code": "B4E22AT",
  "points": 300,
  "name": "Ticket Shuffling",
  "description": "You are at a circular ticket counter consisting of ticket stations each giving tickets of type <b>a, b .... z</b>. \r\nYou have to buy <b>N</b> tickets of different types. You can either move counterclockwise or clockwise in the circular ticket counter.\r\n\r\nIt takes one second to move from one ticket counter to other.\r\nFind the minimum time to get all the tickets.\r\n\r\nNote: You are currently at 'a'.",
  "explainInput": "The first line of the input consists of a single integer <b>T</b> denoting the number of test cases\r\nThe first line of each test case consists of string <b>S</b>.",
  "explainOutput": "Output the minimum amount of time to get all tickets.",
  "constraints": "1 <= T <= 500\r\n1<=S<=10^9",
  "example": "3\r\n\"abc\"\r\n\"bza\"\r\n\"zjpc\"\r\n5\r\n7\r\n34",
  "explanation": "<b>TC#1</b>\r\nThe tickets are collected as follows:\r\n- Buy ticket of type 'a' in 1 second since you are initially at ticket counter giving ticket type 'a'.\r\n- You move clockwise to 'b' in 1 second.\r\n- Buy ticket of type 'b' in 1 second.\r\n- You move clockwise to 'c' in 1 second.\r\n- Buy ticket of type 'c' in 1 second.",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664530272723"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664530272723"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "6336c0b1f9be3c00226020f2"
  },
  "tags": [
    "Math",
    " Two pointer",
    " String",
    " Next/Previous lexicographically-ordered permutation"
  ],
  "code": "B4E22FE",
  "points": 400,
  "name": "Find Special Number",
  "description": "Given a no <b>N</b>. Find a special number which is immediate greater than <b>N</b>. \r\nA special number is a number  which has same no of even and odd digits and the digits in the number are repeated same as their value.",
  "explainInput": "First-line consists of a single integer T denoting the number of test cases.\r\nNext T lines contains number N.",
  "explainOutput": "Output the special number for given N.",
  "constraints": "1<=<b>T</b><=1000\r\n1<=<b>N</b><=10^9",
  "example": "<b>Input:</b>\r\n3\r\n10\r\n111\r\n10000\r\n\r\n<b>Output:</b>\r\n122\r\n122\r\n14444",
  "explanation": "for no 10 the immediate greatest special no is 122 in which 1 is occuring 1 time 2 is occuring 2 times and no of even nos (2) = 1 is equal to no of odd nos (1) = 1.",
  "contestCode": "B4E22F",
  "createdAt": {
    "$date": {
      "$numberLong": "1664532657727"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1664719911893"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63a2b5b7a198a20018e909d9"
  },
  "tags": [
    " maths"
  ],
  "code": "DEC22A",
  "points": 100,
  "name": "World Cup Winner",
  "description": "FIFA acknowledges that both the team are winning because of their <b>4-3-2-1</b> strategy which means the only goal scorer for both the team were their striker. The player with highest ball possession was the striker and the striker of both team had <b>70%</b> conversion rate to convert their ball possession into a goal. If the team has to win then their striker should have a higher goal conversion rate than the other or else it will be a tie. Help FIFA to determine the winners using the given ball possession timeline",
  "explainInput": " The first line of the input contains a single integer <b>T</b> denoting the number of test cases.  The description of T test cases follows.\r\n\r\n    The first line of each test case contains integer <b>N</b> denoting the length of the timeline\r\n\r\nThe second line of each test case contain <b>N</b> space separated integers corresponding to the ball possession of the players of <b>team 1</b>\r\n\r\nThe third line of each test case contain <b>N</b> space separated integers corresponding to the ball possession of the players of <b>team 2</b>\r\n",
  "explainOutput": " For each test case, print a single line containing the string <b>\"TEAM1\"</b> (without quotes) if Team 1  can win or <b>\"TEAM2\"</b> (without quotes) if Team 2 can win or else  print <b>“TIE”</b> (without quotes).",
  "constraints": "1 <=<b> T</b> <=100\r\n1<= <b>N</b> <=10<sup>5</sup>\r\n1<= <b>T1,T2</b> <=11 ",
  "example": "<b>Input:</b>\r\n3\r\n5\r\n1 3 5 5 5\r\n8 7 9 9 4\r\n6\r\n1 5 8 9 11 10\r\n2 2 2  3  3    3 \r\n4\r\n2 2 2 3\r\n1 4 4 4\r\n\r\n<b>Output:</b>\r\nTEAM1\r\nTEAM2\r\nTIE\r\n",
  "explanation": " <b>Case 1:</b>\r\nIn TEAM 1 player 5 has the highest ball possession i.e 3 and In TEAM 2 player 9 has the highest ball possession i.e 2.As both the striker have a goal scoring rate of 70% <b>TEAM 1</b> will win the match.\r\n\r\n<b>Case 2:</b>\r\nIn TEAM 1 all players have a ball possession of 1,as there can be only one striker who can score goal, so the highest ball possession is 1 and In TEAM 2 player 2 and player 3 have equal no of ball possession and highest no of ball possession i.e. 3. As both the striker have a goal scoring rate of 70% <b>TEAM 2</b> will win the match.\r\n\r\n<b>Case 3:</b>\r\n\r\nIn TEAM 1 player 2 has the highest ball possession i.e 3 and In TEAM 2 player 4 has the highest ball possession i.e 3.As both the striker have a goal scoring rate of 70%,the match will end in a <b>TIE</b>.\r\n",
  "contestCode": "DEC22",
  "createdAt": {
    "$date": {
      "$numberLong": "1671607735126"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1671617095116"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63a2b688a198a20018e909db"
  },
  "tags": [
    "geometry"
  ],
  "code": "DEC22B",
  "points": 150,
  "name": "Will Griezmann score?",
  "description": "Antonie Griezmann is a Footballer in the French Football team. He is in a tough situation during a match of UEFA Champions League 2022 -23 against Porto. He has a free kick from on the opponent’s side. All of his players are not in his range, except for Ekitike. If he shoots the ball in the range of the rectangle created by the diagonal joining Griezmann and Ekitike, he would score a Goal. The coordinates of Griezmann are <b>(X1, Y1)</b> and the coordinates of Ekitike are <b>(X2, Y2)</b>, and the coordinates of the ball are <b>(x, y)</b>. You have to figure out if Griezmann will score a Goal or not, with these given coordinates.",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The next two lines contain the coordinates of the two players. The next line contains the coordinates of the ball. (All pairs of coordinates are separated by a space eg.<b> 2 3</b>)",
  "explainOutput": "<b>1</b> if Griezmann scores\r\n\t<b>0</b> if Griezmann doesn’t score\r\n",
  "constraints": "0 <= <b>T</b> <= 999\r\n500 <= <b>X1</b> <=1000\r\n500 <= <b>Y1</b> <= 1000\r\n200 <= <b>X2</b> <= 1300\r\n200 <= <b>Y2</b> <= 1300\r\n200 <= <b>x</b> <= 1300\r\n200 <= <b>y</b>  <= 1300",
  "example": "Input:\r\n1\r\n500 700\r\n200 400\r\n300 500\r\nOutput:\r\n\t1",
  "explanation": "As the ball <b>(300, 500)</b> is contained between the two players with the coordinates <b>((500, 700) and (200, 400))</b>.",
  "contestCode": "DEC22",
  "createdAt": {
    "$date": {
      "$numberLong": "1671607944507"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1671616398786"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63a2b83da198a20018e909df"
  },
  "tags": [
    "array"
  ],
  "code": "DEC22C",
  "points": 150,
  "name": "Can chef watch the complete match?",
  "description": "Chef went to watch the football match.After the first half, he visited the food stall since he was hungry.At food stall he comes to know about surprising task and task was to identify the name of recipe.Each recipe is made up of 4 ingredients i.e A,B,C,D. The recipe's name is derived from the ingredients that are used to make it. Chef has given the cost of each element and  the string which contains the names of multiple recipes. Chef initially has a limited number of rupees and he has to identify which recipe he can buy with the rupees he has initially. The condition is that the recipe name is always continuous and the chef has to spend all the rupees he has.If the string does not contain any recipe name that chef can buy then print -1.In case if string contains multiple recipes that chef can buy then print the first occurence. Chef can return to the stadium only after completing the task.",
  "explainInput": "The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows : \r\nThe first line of each test case contains a string denoting the multiple names of the recipe.\r\nSecond line contains the cost of each ingredient.\r\nThird line contains the number of rupees.\r\n",
  "explainOutput": "Output contains the single line which denotes the name of the recipe that chef can make.",
  "constraints": "1 <= T <= 100\r\n1<= A,B,C,D <=20\r\n4<= No. of rupees <=100",
  "example": "Input:\r\n2\r\nAACACDBBACBB\r\n12 7 4 15\r\n45\r\nABCDAABCABDAB\r\n4 10 12 5\r\n39\r\n\r\n\r\nOutput:\r\nACDBB\r\nABCDAA\r\n",
  "explanation": "Case 1: \r\nACDBB is a continuous part of given string and sum of cost of ingredients A(12) + C(4) + D(15) +B(7) + B(7) = 45\r\n\r\nCase 2: \r\nDAABCA is a continuous part of given string and sum of cost of ingredients A(4) + B(10) + C(12) + D(5) + A(4) + A(4)= 39\r\n",
  "contestCode": "DEC22",
  "createdAt": {
    "$date": {
      "$numberLong": "1671608381680"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1671623911534"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63a2b900a198a20018e909e1"
  },
  "tags": [
    "dp"
  ],
  "code": "DEC22D",
  "points": 200,
  "name": " Can Messi Score",
  "description": "It’s a 2nd round going on and in order to win messi need to score somehow but he got less stamina K there are n*n players are standing and to dribble one of each row it takes Aij stamina. If messi to goal he needs to save his stamina until the last one. But he can move in <b>two </b>ways if he is currently at (x,y) then the moves can be <b>(x+1,y+1) (x+1,y-1) </b>.",
  "explainInput": "The first line of the input contains a single integer <b>T</b> denoting the number of test cases. The description of <b>T </b>test cases follows.\r\nThe first line of each test case contains integers <b>k </b>and <b>n</b>.\r\nNext <b>n </b>lines of each test case contain n space separated integers corresponding to the entries of the matrix.",
  "explainOutput": "For each test case, print a single line containing the string <b>\"YES\"</b> (without quotes) if Messi can goal or <b>\"NO\"</b> (without quotes) if he cannot.",
  "constraints": "1 <= <b>T </b><= 100\r\n200 <= <b>k</b><= 400\r\n1 <= <b>n </b><= 10\r\n1 <= <b>A[i][j]</b> <= 200",
  "example": "<b>Input:</b>\r\n2\r\n170 3\r\n102 11 89\r\n187 39 70\r\n181 90 146\r\n365 2\r\n158 145\r\n73 25\r\n\r\n\r\n<b>Output:</b>\r\nNO\r\nYES\r\n",
  "explanation": "<b>Case 1:</b>\r\n<img src=\"https://res.cloudinary.com/dvdi2oaso/image/upload/v1671616858/December%20Queue%202022/Screenshot_2022-12-21_152719_wipze6.png\" width=\"200px\">\r\nAs we can see the minimum stamina is 11+70+90 = 171 which is greater than the messi stamina so he cannot goal.\r\n<b>Case 2:</b>\r\n<img src=\"https://res.cloudinary.com/dvdi2oaso/image/upload/v1671616887/December%20Queue%202022/Screenshot_2022-12-21_152751_km2ks0.png\" width=\"200px\">\r\nAs we can see the minimum stamina is 158+25 = 183 which is less than the messi stamina so he can goal.",
  "contestCode": "DEC22",
  "createdAt": {
    "$date": {
      "$numberLong": "1671608576061"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1671617241315"
    }
  },
  "__v": 0
},{
  "_id": {
    "$oid": "63a2b9c9a198a20018e909e3"
  },
  "tags": [
    "maths"
  ],
  "code": "DEC22E",
  "points": 300,
  "name": "Distribute T-shirts",
  "description": "Argentina won the world cup and each of the <b>n </b> players want to distribute their T-shirt to others. \r\nIn how many possible ways they can distribute, so that everyone will get the T-shirt from <b>someone else</b>.",
  "explainInput": "The first line of the input contains a single integer <b>T </b> denoting the number of test cases. The description of <b>T</b> test cases follows.\r\nThe first line of each test case contains integers <b>n</b>.",
  "explainOutput": "For each test case, print the number of ways the T-shirt can be distributed modulo <b>10^5 + 5</b>.",
  "constraints": "1 <= <b>T</b> <= 100\r\n1 <= <b>n</b> <= 10*5\r\n",
  "example": "<b>Input:</b>\r\n2\r\n3\r\n8\r\n\r\n<b>Output:</b>\r\n2\r\n14833\r\n",
  "explanation": "<b>Case 1:</b>\r\nn = 3\r\nThe total ways are 3! But to make sure everyone will get the T-shirt from other the ways are <b>(1>1 || 2>2 || 3>3)</b> = 4 i.e(1st gives to 1st || 2nd give to 2nd  || 3rd give to 3rd)  \r\nTherefor 6-4 = 2\r\n",
  "contestCode": "DEC22",
  "createdAt": {
    "$date": {
      "$numberLong": "1671608777842"
    }
  },
  "updatedAt": {
    "$date": {
      "$numberLong": "1671616768416"
    }
  },
  "__v": 0
}]